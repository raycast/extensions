


/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 * 
 * @export
 * @interface InlineResponse400
 */
export interface InlineResponse400 {
    /**
     * 
     * @type {string}
     * @memberof InlineResponse400
     */
    message?: string;
}

/**
 * 
 * @export
 * @interface NearbyMeLocationId
 */
export interface NearbyMeLocationId {
    /**
     * 
     * @type {string}
     * @memberof NearbyMeLocationId
     */
    value: string;
    /**
     * 
     * @type {string}
     * @memberof NearbyMeLocationId
     */
    type: string;
}

/**
 * 
 * @export
 * @interface Station
 */
export interface Station {
    /**
     * 
     * @type {string}
     * @memberof Station
     */
    UICCode: string;
    /**
     * 
     * @type {string}
     * @memberof Station
     */
    stationType: string;
    /**
     * 
     * @type {string}
     * @memberof Station
     */
    EVACode?: string;
    /**
     * 
     * @type {number}
     * @memberof Station
     */
    cdCode?: number;
    /**
     * 
     * @type {string}
     * @memberof Station
     */
    code?: string;
    /**
     * 
     * @type {Array<Track>}
     * @memberof Station
     */
    sporen: Array<Track>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Station
     */
    synoniemen: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof Station
     */
    heeftFaciliteiten: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Station
     */
    heeftVertrektijden: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Station
     */
    heeftReisassistentie: boolean;
    /**
     * 
     * @type {StationsNamen}
     * @memberof Station
     */
    namen?: StationsNamen;
    /**
     * 
     * @type {string}
     * @memberof Station
     */
    land?: string;
    /**
     * 
     * @type {number}
     * @memberof Station
     */
    lat?: number;
    /**
     * 
     * @type {number}
     * @memberof Station
     */
    lng?: number;
    /**
     * 
     * @type {number}
     * @memberof Station
     */
    radius?: number;
    /**
     * 
     * @type {number}
     * @memberof Station
     */
    naderenRadius?: number;
    /**
     * 
     * @type {number}
     * @memberof Station
     */
    distance?: number;
    /**
     * 
     * @type {string}
     * @memberof Station
     */
    ingangsDatum?: string;
    /**
     * 
     * @type {string}
     * @memberof Station
     */
    eindDatum?: string;
    /**
     * 
     * @type {NearbyMeLocationId}
     * @memberof Station
     */
    nearbyMeLocationId?: NearbyMeLocationId;
}


/**
 * 
 * @export
 * @interface StationsNamen
 */
export interface StationsNamen {
    /**
     * 
     * @type {string}
     * @memberof StationsNamen
     */
    lang: string;
    /**
     * 
     * @type {string}
     * @memberof StationsNamen
     */
    middel: string;
    /**
     * 
     * @type {string}
     * @memberof StationsNamen
     */
    kort: string;
    /**
     * 
     * @type {string}
     * @memberof StationsNamen
     */
    festive?: string;
}

/**
 * 
 * @export
 * @interface StationsV2Response
 */
export interface StationsV2Response {
    /**
     * 
     * @type {Array<Station>}
     * @memberof StationsV2Response
     */
    payload: Array<Station>;
}

/**
 * 
 * @export
 * @interface Track
 */
export interface Track {
    /**
     * 
     * @type {string}
     * @memberof Track
     */
    spoorNummer: string;
}


/// <reference path="./custom.d.ts" />
// tslint:disable
/**
 * Reisinformatie API
 * Deze API bevat alle reisinformatie bronnen voor de NS App
 *
 * OpenAPI spec version: 1.0
 * Contact: mlab@ns.nl
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */


const BASE_PATH = "https://gateway.apiportal.ns.nl/reisinformatie-api".replace(
  /\/+$/,
  "",
);


/**
 *
 * @export
 * @interface FetchAPI
 */
export interface FetchAPI {
  (url: string, init?: any): Promise<Response>;
}

/**
 *
 * @export
 * @interface FetchArgs
 */
export interface FetchArgs {
  url: string;
  options: any;
}

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
  name = "RequiredError";
  constructor(
    public field: string,
    msg?: string,
  ) {
    super(msg);
  }
}

/**
 *
 * @export
 * @interface APIError
 */
export interface APIError {
  /**
   *
   * @type {Date}
   * @memberof APIError
   */
  timestamp: Date;
  /**
   *
   * @type {number}
   * @memberof APIError
   */
  code: number;
  /**
   *
   * @type {string}
   * @memberof APIError
   */
  message: string;
  /**
   *
   * @type {string}
   * @memberof APIError
   */
  path: string;
  /**
   *
   * @type {string}
   * @memberof APIError
   */
  exception?: string;
  /**
   *
   * @type {Array<LocalizedErrorDetail>}
   * @memberof APIError
   */
  errors?: Array<LocalizedErrorDetail>;
  /**
   *
   * @type {string}
   * @memberof APIError
   */
  requestId: string;
}
/**
 *
 * @export
 * @interface Arrival
 */
export interface Arrival {
  /**
   *
   * @type {string}
   * @memberof Arrival
   */
  origin?: string;
  /**
   *
   * @type {string}
   * @memberof Arrival
   */
  name: string;
  /**
   *
   * @type {Date}
   * @memberof Arrival
   */
  plannedDateTime?: Date;
  /**
   *
   * @type {number}
   * @memberof Arrival
   */
  plannedTimeZoneOffset?: number;
  /**
   *
   * @type {Date}
   * @memberof Arrival
   */
  actualDateTime?: Date;
  /**
   *
   * @type {number}
   * @memberof Arrival
   */
  actualTimeZoneOffset?: number;
  /**
   *
   * @type {string}
   * @memberof Arrival
   */
  plannedTrack?: string;
  /**
   *
   * @type {string}
   * @memberof Arrival
   */
  actualTrack?: string;
  /**
   *
   * @type {Product}
   * @memberof Arrival
   */
  product: Product;
  /**
   *
   * @type {string}
   * @memberof Arrival
   */
  trainCategory: string;
  /**
   *
   * @type {boolean}
   * @memberof Arrival
   */
  cancelled: boolean;
  /**
   *
   * @type {string}
   * @memberof Arrival
   */
  journeyDetailRef?: string;
  /**
   *
   * @type {Array<Message>}
   * @memberof Arrival
   */
  messages: Array<Message>;
  /**
   *
   * @type {string}
   * @memberof Arrival
   */
  arrivalStatus: Arrival.ArrivalStatusEnum;
}

/**
 * @export
 * @namespace Arrival
 */
export namespace Arrival {
  /**
   * @export
   * @enum {string}
   */
  export enum ArrivalStatusEnum {
    ONSTATION = <any>"ON_STATION",
    INCOMING = <any>"INCOMING",
    DEPARTED = <any>"DEPARTED",
    UNKNOWN = <any>"UNKNOWN",
  }
}
/**
 *
 * @export
 * @interface ArrivalOrDeparture
 */
export interface ArrivalOrDeparture {
  /**
   *
   * @type {Product}
   * @memberof ArrivalOrDeparture
   */
  product: Product;
  /**
   *
   * @type {Station}
   * @memberof ArrivalOrDeparture
   */
  origin?: Station;
  /**
   *
   * @type {Station}
   * @memberof ArrivalOrDeparture
   */
  destination?: Station;
  /**
   *
   * @type {Date}
   * @memberof ArrivalOrDeparture
   */
  plannedTime?: Date;
  /**
   *
   * @type {Date}
   * @memberof ArrivalOrDeparture
   */
  actualTime?: Date;
  /**
   *
   * @type {number}
   * @memberof ArrivalOrDeparture
   */
  delayInSeconds?: number;
  /**
   *
   * @type {string}
   * @memberof ArrivalOrDeparture
   */
  plannedTrack?: string;
  /**
   *
   * @type {string}
   * @memberof ArrivalOrDeparture
   */
  actualTrack?: string;
  /**
   *
   * @type {boolean}
   * @memberof ArrivalOrDeparture
   */
  cancelled: boolean;
  /**
   *
   * @type {number}
   * @memberof ArrivalOrDeparture
   */
  punctuality?: number;
  /**
   *
   * @type {string}
   * @memberof ArrivalOrDeparture
   */
  crowdForecast: ArrivalOrDeparture.CrowdForecastEnum;
  /**
   *
   * @type {string}
   * @memberof ArrivalOrDeparture
   */
  shorterStockClassification?: ArrivalOrDeparture.ShorterStockClassificationEnum;
  /**
   *
   * @type {Array<string>}
   * @memberof ArrivalOrDeparture
   */
  stockIdentifiers?: Array<string>;
}

/**
 * @export
 * @namespace ArrivalOrDeparture
 */
export namespace ArrivalOrDeparture {
  /**
   * @export
   * @enum {string}
   */
  export enum CrowdForecastEnum {
    UNKNOWN = <any>"UNKNOWN",
    LOW = <any>"LOW",
    MEDIUM = <any>"MEDIUM",
    HIGH = <any>"HIGH",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum ShorterStockClassificationEnum {
    BUSY = <any>"BUSY",
    EXTRABUSY = <any>"EXTRA_BUSY",
  }
}
/**
 *
 * @export
 * @interface ArrivalsPayload
 */
export interface ArrivalsPayload {
  /**
   *
   * @type {string}
   * @memberof ArrivalsPayload
   */
  source: string;
  /**
   *
   * @type {Array<Arrival>}
   * @memberof ArrivalsPayload
   */
  arrivals: Array<Arrival>;
}
/**
 *
 * @export
 * @interface BaseDisruption
 */
export interface BaseDisruption {
  /**
   *
   * @type {string}
   * @memberof BaseDisruption
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof BaseDisruption
   */
  type: BaseDisruption.TypeEnum;
  /**
   *
   * @type {boolean}
   * @memberof BaseDisruption
   */
  isActive: boolean;
  /**
   *
   * @type {string}
   * @memberof BaseDisruption
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof BaseDisruption
   */
  topic?: string;
}

/**
 * @export
 * @namespace BaseDisruption
 */
export namespace BaseDisruption {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    CALAMITY = <any>"CALAMITY",
    DISRUPTION = <any>"DISRUPTION",
    MAINTENANCE = <any>"MAINTENANCE",
  }
}
/**
 *
 * @export
 * @interface CalamitiesResourceCalamity
 */
export interface CalamitiesResourceCalamity {
  /**
   *
   * @type {string}
   * @memberof CalamitiesResourceCalamity
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof CalamitiesResourceCalamity
   */
  titel?: string;
  /**
   *
   * @type {string}
   * @memberof CalamitiesResourceCalamity
   */
  beschrijving?: string;
  /**
   *
   * @type {number}
   * @memberof CalamitiesResourceCalamity
   */
  lastModified?: number;
  /**
   *
   * @type {string}
   * @memberof CalamitiesResourceCalamity
   */
  type?: CalamitiesResourceCalamity.TypeEnum;
  /**
   *
   * @type {string}
   * @memberof CalamitiesResourceCalamity
   */
  url?: string;
  /**
   *
   * @type {string}
   * @memberof CalamitiesResourceCalamity
   */
  buttonPositie?: CalamitiesResourceCalamity.ButtonPositieEnum;
  /**
   *
   * @type {number}
   * @memberof CalamitiesResourceCalamity
   */
  laatstGewijzigd?: number;
  /**
   *
   * @type {number}
   * @memberof CalamitiesResourceCalamity
   */
  volgendeUpdate?: number;
  /**
   *
   * @type {Array<CallToActionButton>}
   * @memberof CalamitiesResourceCalamity
   */
  calltoactionbuttons?: Array<CallToActionButton>;
  /**
   *
   * @type {Array<CalamityBodyItem>}
   * @memberof CalamitiesResourceCalamity
   */
  bodyitems?: Array<CalamityBodyItem>;
}

/**
 * @export
 * @namespace CalamitiesResourceCalamity
 */
export namespace CalamitiesResourceCalamity {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    Informatie = <any>"informatie",
    Waarschuwing = <any>"waarschuwing",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum ButtonPositieEnum {
    Boven = <any>"boven",
    Onder = <any>"onder",
    Beide = <any>"beide",
  }
}
/**
 *
 * @export
 * @interface CalamitiesResponse
 */
export interface CalamitiesResponse {
  /**
   *
   * @type {CalamitiesResourceCalamity}
   * @memberof CalamitiesResponse
   */
  calamiteit?: CalamitiesResourceCalamity;
  /**
   *
   * @type {Array<CalamitiesResourceCalamity>}
   * @memberof CalamitiesResponse
   */
  meldingen?: Array<CalamitiesResourceCalamity>;
}
/**
 *
 * @export
 * @interface CalamityBodyItem
 */
export interface CalamityBodyItem {
  /**
   *
   * @type {string}
   * @memberof CalamityBodyItem
   */
  objectType: string;
  /**
   *
   * @type {string}
   * @memberof CalamityBodyItem
   */
  content?: string;
  /**
   *
   * @type {string}
   * @memberof CalamityBodyItem
   */
  titel?: string;
  /**
   *
   * @type {Array<Download>}
   * @memberof CalamityBodyItem
   */
  downloads?: Array<Download>;
  /**
   *
   * @type {Array<Link>}
   * @memberof CalamityBodyItem
   */
  links?: Array<Link>;
}
/**
 *
 * @export
 * @interface CallToActionButton
 */
export interface CallToActionButton {
  /**
   *
   * @type {string}
   * @memberof CallToActionButton
   */
  callToAction?: string;
  /**
   *
   * @type {string}
   * @memberof CallToActionButton
   */
  url?: string;
  /**
   *
   * @type {string}
   * @memberof CallToActionButton
   */
  type?: CallToActionButton.TypeEnum;
  /**
   *
   * @type {string}
   * @memberof CallToActionButton
   */
  voorleestitel?: string;
}

/**
 * @export
 * @namespace CallToActionButton
 */
export namespace CallToActionButton {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    Primary = <any>"button--primary",
    Secondary = <any>"button--secondary",
    Buy = <any>"button--buy",
    Print = <any>"button--print",
  }
}
/**
 *
 * @export
 * @interface CoachCrowdForecast
 */
export interface CoachCrowdForecast {
  /**
   *
   * @type {number}
   * @memberof CoachCrowdForecast
   */
  paddingLeft: number;
  /**
   *
   * @type {number}
   * @memberof CoachCrowdForecast
   */
  width: number;
  /**
   *
   * @type {string}
   * @memberof CoachCrowdForecast
   */
  classification: CoachCrowdForecast.ClassificationEnum;
}

/**
 * @export
 * @namespace CoachCrowdForecast
 */
export namespace CoachCrowdForecast {
  /**
   * @export
   * @enum {string}
   */
  export enum ClassificationEnum {
    UNKNOWN = <any>"UNKNOWN",
    LOW = <any>"LOW",
    MEDIUM = <any>"MEDIUM",
    HIGH = <any>"HIGH",
  }
}
/**
 *
 * @export
 * @interface Coordinate
 */
export interface Coordinate {
  /**
   *
   * @type {number}
   * @memberof Coordinate
   */
  lat: number;
  /**
   *
   * @type {number}
   * @memberof Coordinate
   */
  lng: number;
}
/**
 *
 * @export
 * @interface Departure
 */
export interface Departure {
  /**
   *
   * @type {string}
   * @memberof Departure
   */
  direction?: string;
  /**
   *
   * @type {string}
   * @memberof Departure
   */
  name: string;
  /**
   *
   * @type {Date}
   * @memberof Departure
   */
  plannedDateTime?: Date;
  /**
   *
   * @type {number}
   * @memberof Departure
   */
  plannedTimeZoneOffset?: number;
  /**
   *
   * @type {Date}
   * @memberof Departure
   */
  actualDateTime?: Date;
  /**
   *
   * @type {number}
   * @memberof Departure
   */
  actualTimeZoneOffset?: number;
  /**
   *
   * @type {string}
   * @memberof Departure
   */
  plannedTrack?: string;
  /**
   *
   * @type {string}
   * @memberof Departure
   */
  actualTrack?: string;
  /**
   *
   * @type {Product}
   * @memberof Departure
   */
  product: Product;
  /**
   *
   * @type {string}
   * @memberof Departure
   */
  trainCategory: string;
  /**
   *
   * @type {boolean}
   * @memberof Departure
   */
  cancelled: boolean;
  /**
   *
   * @type {string}
   * @memberof Departure
   */
  journeyDetailRef?: string;
  /**
   *
   * @type {Array<RouteStation>}
   * @memberof Departure
   */
  routeStations: Array<RouteStation>;
  /**
   *
   * @type {Array<Message>}
   * @memberof Departure
   */
  messages: Array<Message>;
  /**
   *
   * @type {string}
   * @memberof Departure
   */
  departureStatus: Departure.DepartureStatusEnum;
}

/**
 * @export
 * @namespace Departure
 */
export namespace Departure {
  /**
   * @export
   * @enum {string}
   */
  export enum DepartureStatusEnum {
    ONSTATION = <any>"ON_STATION",
    INCOMING = <any>"INCOMING",
    DEPARTED = <any>"DEPARTED",
    UNKNOWN = <any>"UNKNOWN",
  }
}
/**
 *
 * @export
 * @interface DeparturesPayload
 */
export interface DeparturesPayload {
  /**
   *
   * @type {string}
   * @memberof DeparturesPayload
   */
  source: string;
  /**
   *
   * @type {Array<Departure>}
   * @memberof DeparturesPayload
   */
  departures: Array<Departure>;
}
/**
 *
 * @export
 * @interface Download
 */
export interface Download {
  /**
   *
   * @type {string}
   * @memberof Download
   */
  titel?: string;
  /**
   *
   * @type {DownloadFile}
   * @memberof Download
   */
  bestand?: DownloadFile;
}
/**
 *
 * @export
 * @interface DownloadFile
 */
export interface DownloadFile {
  /**
   *
   * @type {string}
   * @memberof DownloadFile
   */
  url?: string;
  /**
   *
   * @type {number}
   * @memberof DownloadFile
   */
  length?: number;
  /**
   *
   * @type {string}
   * @memberof DownloadFile
   */
  mimeType?: string;
  /**
   *
   * @type {number}
   * @memberof DownloadFile
   */
  lastModified?: number;
}
/**
 *
 * @export
 * @interface Eco
 */
export interface Eco {
  /**
   *
   * @type {number}
   * @memberof Eco
   */
  co2kg: number;
}
/**
 *
 * @export
 * @interface EticketNotBuyableReason
 */
export interface EticketNotBuyableReason {
  /**
   *
   * @type {string}
   * @memberof EticketNotBuyableReason
   */
  reason: EticketNotBuyableReason.ReasonEnum;
  /**
   *
   * @type {string}
   * @memberof EticketNotBuyableReason
   */
  description?: string;
}

/**
 * @export
 * @namespace EticketNotBuyableReason
 */
export namespace EticketNotBuyableReason {
  /**
   * @export
   * @enum {string}
   */
  export enum ReasonEnum {
    UNKNOWNPRICE = <any>"UNKNOWN_PRICE",
    TOOMANYSEPARATEPARTS = <any>"TOO_MANY_SEPARATE_PARTS",
    TOOFARINPAST = <any>"TOO_FAR_IN_PAST",
    TOOFARINFUTURE = <any>"TOO_FAR_IN_FUTURE",
    STATIONNOTOPENYET = <any>"STATION_NOT_OPEN_YET",
    TRIPISNOTDOMESTIC = <any>"TRIP_IS_NOT_DOMESTIC",
    VIASTATIONREQUESTED = <any>"VIA_STATION_REQUESTED",
    NOTRAINLEGSINTRIP = <any>"NO_TRAIN_LEGS_IN_TRIP",
  }
}
/**
 *
 * @export
 * @interface FareLeg
 */
export interface FareLeg {
  /**
   *
   * @type {TripOriginDestination}
   * @memberof FareLeg
   */
  origin: TripOriginDestination;
  /**
   *
   * @type {TripOriginDestination}
   * @memberof FareLeg
   */
  destination: TripOriginDestination;
  /**
   *
   * @type {string}
   * @memberof FareLeg
   */
  operator?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof FareLeg
   */
  productTypes: Array<FareLeg.ProductTypesEnum>;
  /**
   *
   * @type {Array<TripTravelFare>}
   * @memberof FareLeg
   */
  fares: Array<TripTravelFare>;
}

/**
 * @export
 * @namespace FareLeg
 */
export namespace FareLeg {
  /**
   * @export
   * @enum {string}
   */
  export enum ProductTypesEnum {
    TRAIN = <any>"TRAIN",
    BUS = <any>"BUS",
    TRAM = <any>"TRAM",
    METRO = <any>"METRO",
    FERRY = <any>"FERRY",
    WALK = <any>"WALK",
    BIKE = <any>"BIKE",
    CAR = <any>"CAR",
    TAXI = <any>"TAXI",
    SHAREDMODALITY = <any>"SHARED_MODALITY",
    UNKNOWN = <any>"UNKNOWN",
  }
}
/**
 *
 * @export
 * @interface FareLegStop
 */
export interface FareLegStop {
  /**
   *
   * @type {number}
   * @memberof FareLegStop
   */
  varCode: number;
  /**
   *
   * @type {string}
   * @memberof FareLegStop
   */
  name?: string;
}
/**
 *
 * @export
 * @interface FareRoute
 */
export interface FareRoute {
  /**
   *
   * @type {string}
   * @memberof FareRoute
   */
  routeId?: string;
  /**
   *
   * @type {FareLegStop}
   * @memberof FareRoute
   */
  origin: FareLegStop;
  /**
   *
   * @type {FareLegStop}
   * @memberof FareRoute
   */
  destination: FareLegStop;
}
/**
 *
 * @export
 * @interface Journey
 */
export interface Journey {
  /**
   *
   * @type {Array<Note>}
   * @memberof Journey
   */
  notes: Array<Note>;
  /**
   *
   * @type {Array<string>}
   * @memberof Journey
   */
  productNumbers: Array<string>;
  /**
   *
   * @type {Array<JourneyStop>}
   * @memberof Journey
   */
  stops: Array<JourneyStop>;
  /**
   *
   * @type {boolean}
   * @memberof Journey
   */
  allowCrowdReporting: boolean;
  /**
   *
   * @type {string}
   * @memberof Journey
   */
  source: string;
}
/**
 *
 * @export
 * @interface JourneyDetailLink
 */
export interface JourneyDetailLink {
  /**
   *
   * @type {string}
   * @memberof JourneyDetailLink
   */
  type: JourneyDetailLink.TypeEnum;
  /**
   *
   * @type {Link}
   * @memberof JourneyDetailLink
   */
  link: Link;
}

/**
 * @export
 * @namespace JourneyDetailLink
 */
export namespace JourneyDetailLink {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    BTM = <any>"BTM",
    TRAINXML = <any>"TRAIN_XML",
    TRAINJSON = <any>"TRAIN_JSON",
  }
}
/**
 *
 * @export
 * @interface JourneyRegistrationParameters
 */
export interface JourneyRegistrationParameters {
  /**
   *
   * @type {string}
   * @memberof JourneyRegistrationParameters
   */
  url?: string;
  /**
   *
   * @type {string}
   * @memberof JourneyRegistrationParameters
   */
  searchUrl: string;
  /**
   *
   * @type {string}
   * @memberof JourneyRegistrationParameters
   */
  status: JourneyRegistrationParameters.StatusEnum;
  /**
   *
   * @type {boolean}
   * @memberof JourneyRegistrationParameters
   */
  bicycleReservationRequired: boolean;
  /**
   *
   * @type {RegistrationAvailability}
   * @memberof JourneyRegistrationParameters
   */
  availability?: RegistrationAvailability;
}

/**
 * @export
 * @namespace JourneyRegistrationParameters
 */
export namespace JourneyRegistrationParameters {
  /**
   * @export
   * @enum {string}
   */
  export enum StatusEnum {
    REGISTRATIONPOSSIBLE = <any>"REGISTRATION_POSSIBLE",
    NOTAVAILABLE = <any>"NOT_AVAILABLE",
    DATEINPAST = <any>"DATE_IN_PAST",
    DATETOOFARFUTURE = <any>"DATE_TOO_FAR_FUTURE",
    NOTNECESSARYOTHEROPERATOR = <any>"NOT_NECESSARY_OTHER_OPERATOR",
    UNKNOWN = <any>"UNKNOWN",
  }
}
/**
 *
 * @export
 * @interface JourneyStop
 */
export interface JourneyStop {
  /**
   *
   * @type {string}
   * @memberof JourneyStop
   */
  id: string;
  /**
   *
   * @type {Station}
   * @memberof JourneyStop
   */
  stop: Station;
  /**
   *
   * @type {Array<string>}
   * @memberof JourneyStop
   */
  previousStopId: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof JourneyStop
   */
  nextStopId: Array<string>;
  /**
   *
   * @type {string}
   * @memberof JourneyStop
   */
  destination?: string;
  /**
   *
   * @type {string}
   * @memberof JourneyStop
   */
  status?: JourneyStop.StatusEnum;
  /**
   *
   * @type {string}
   * @memberof JourneyStop
   */
  kind?: JourneyStop.KindEnum;
  /**
   *
   * @type {Array<ArrivalOrDeparture>}
   * @memberof JourneyStop
   */
  arrivals: Array<ArrivalOrDeparture>;
  /**
   *
   * @type {Array<ArrivalOrDeparture>}
   * @memberof JourneyStop
   */
  departures: Array<ArrivalOrDeparture>;
  /**
   *
   * @type {Stock}
   * @memberof JourneyStop
   */
  actualStock?: Stock;
  /**
   *
   * @type {Stock}
   * @memberof JourneyStop
   */
  plannedStock?: Stock;
  /**
   *
   * @type {Array<PlatformFeature>}
   * @memberof JourneyStop
   */
  platformFeatures?: Array<PlatformFeature>;
  /**
   *
   * @type {Array<CoachCrowdForecast>}
   * @memberof JourneyStop
   */
  coachCrowdForecast?: Array<CoachCrowdForecast>;
}

/**
 * @export
 * @namespace JourneyStop
 */
export namespace JourneyStop {
  /**
   * @export
   * @enum {string}
   */
  export enum StatusEnum {
    ORIGIN = <any>"ORIGIN",
    SPLIT = <any>"SPLIT",
    STOP = <any>"STOP",
    PASSING = <any>"PASSING",
    COMBINE = <any>"COMBINE",
    DESTINATION = <any>"DESTINATION",
    STOPCHANGEDORIGIN = <any>"STOP_CHANGED_ORIGIN",
    STOPCHANGEDDESTINATION = <any>"STOP_CHANGED_DESTINATION",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum KindEnum {
    DEPARTURE = <any>"DEPARTURE",
    ARRIVAL = <any>"ARRIVAL",
    TRANSFER = <any>"TRANSFER",
  }
}
/**
 *
 * @export
 * @interface LabelListItem
 */
export interface LabelListItem {
  /**
   *
   * @type {string}
   * @memberof LabelListItem
   */
  label: string;
  /**
   *
   * @type {string}
   * @memberof LabelListItem
   */
  stickerType: string;
  /**
   *
   * @type {string}
   * @memberof LabelListItem
   */
  salesOptionType?: LabelListItem.SalesOptionTypeEnum;
}

/**
 * @export
 * @namespace LabelListItem
 */
export namespace LabelListItem {
  /**
   * @export
   * @enum {string}
   */
  export enum SalesOptionTypeEnum {
    NSDEALDISCOUNT = <any>"NS_DEAL_DISCOUNT",
  }
}
/**
 *
 * @export
 * @interface Leg
 */
export interface Leg {
  /**
   *
   * @type {string}
   * @memberof Leg
   */
  idx?: string;
  /**
   *
   * @type {string}
   * @memberof Leg
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof Leg
   */
  travelType?: Leg.TravelTypeEnum;
  /**
   *
   * @type {string}
   * @memberof Leg
   */
  direction?: string;
  /**
   *
   * @type {boolean}
   * @memberof Leg
   */
  partCancelled: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Leg
   */
  cancelled: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Leg
   */
  changePossible: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Leg
   */
  alternativeTransport: boolean;
  /**
   *
   * @type {string}
   * @memberof Leg
   */
  journeyDetailRef?: string;
  /**
   *
   * @type {TripOriginDestination}
   * @memberof Leg
   */
  origin: TripOriginDestination;
  /**
   *
   * @type {TripOriginDestination}
   * @memberof Leg
   */
  destination: TripOriginDestination;
  /**
   *
   * @type {Product}
   * @memberof Leg
   */
  product?: Product;
  /**
   *
   * @type {SharedModality}
   * @memberof Leg
   */
  sharedModality?: SharedModality;
  /**
   *
   * @type {Array<Note>}
   * @memberof Leg
   */
  notes?: Array<Note>;
  /**
   *
   * @type {Array<Message>}
   * @memberof Leg
   */
  messages?: Array<Message>;
  /**
   *
   * @type {Array<TransferMessage>}
   * @memberof Leg
   */
  transferMessages?: Array<TransferMessage>;
  /**
   *
   * @type {Array<Stop>}
   * @memberof Leg
   */
  stops: Array<Stop>;
  /**
   *
   * @type {Array<Step>}
   * @memberof Leg
   */
  steps?: Array<Step>;
  /**
   *
   * @type {Array<Array<number>>}
   * @memberof Leg
   */
  coordinates?: Array<Array<number>>;
  /**
   *
   * @type {string}
   * @memberof Leg
   */
  crowdForecast?: Leg.CrowdForecastEnum;
  /**
   *
   * @type {number}
   * @memberof Leg
   */
  bicycleSpotCount?: number;
  /**
   *
   * @type {number}
   * @memberof Leg
   */
  punctuality?: number;
  /**
   *
   * @type {boolean}
   * @memberof Leg
   */
  crossPlatformTransfer?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Leg
   */
  shorterStock?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Leg
   */
  changeCouldBePossible?: boolean;
  /**
   *
   * @type {string}
   * @memberof Leg
   */
  shorterStockWarning?: string;
  /**
   *
   * @type {string}
   * @memberof Leg
   */
  shorterStockClassification?: Leg.ShorterStockClassificationEnum;
  /**
   *
   * @type {Array<JourneyDetailLink>}
   * @memberof Leg
   */
  journeyDetail?: Array<JourneyDetailLink>;
  /**
   *
   * @type {boolean}
   * @memberof Leg
   */
  reachable: boolean;
  /**
   *
   * @type {number}
   * @memberof Leg
   */
  plannedDurationInMinutes?: number;
  /**
   *
   * @type {ServiceBookingInfo}
   * @memberof Leg
   */
  travelAssistanceDeparture?: ServiceBookingInfo;
  /**
   *
   * @type {ServiceBookingInfo}
   * @memberof Leg
   */
  travelAssistanceArrival?: ServiceBookingInfo;
  /**
   *
   * @type {Array<Coordinate>}
   * @memberof Leg
   */
  overviewPolyLine?: Array<Coordinate>;
  /**
   *
   * @type {NesProperties}
   * @memberof Leg
   */
  nesProperties?: NesProperties;
}

/**
 * @export
 * @namespace Leg
 */
export namespace Leg {
  /**
   * @export
   * @enum {string}
   */
  export enum TravelTypeEnum {
    PUBLICTRANSIT = <any>"PUBLIC_TRANSIT",
    WALK = <any>"WALK",
    TRANSFER = <any>"TRANSFER",
    BIKE = <any>"BIKE",
    CAR = <any>"CAR",
    KISS = <any>"KISS",
    TAXI = <any>"TAXI",
    UNKNOWN = <any>"UNKNOWN",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum CrowdForecastEnum {
    UNKNOWN = <any>"UNKNOWN",
    LOW = <any>"LOW",
    MEDIUM = <any>"MEDIUM",
    HIGH = <any>"HIGH",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum ShorterStockClassificationEnum {
    BUSY = <any>"BUSY",
    EXTRABUSY = <any>"EXTRA_BUSY",
  }
}
/**
 *
 * @export
 * @interface Link
 */
export interface Link {
  /**
   *
   * @type {string}
   * @memberof Link
   */
  uri: string;
}
/**
 *
 * @export
 * @interface LocalizedErrorDetail
 */
export interface LocalizedErrorDetail {
  /**
   *
   * @type {string}
   * @memberof LocalizedErrorDetail
   */
  message: string;
  /**
   *
   * @type {Array<any>}
   * @memberof LocalizedErrorDetail
   */
  arguments: Array<any>;
  /**
   *
   * @type {string}
   * @memberof LocalizedErrorDetail
   */
  type: string;
  /**
   *
   * @type {string}
   * @memberof LocalizedErrorDetail
   */
  lang: string;
}
/**
 *
 * @export
 * @interface Location
 */
export interface Location {
  /**
   *
   * @type {string}
   * @memberof Location
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof Location
   */
  lat?: number;
  /**
   *
   * @type {number}
   * @memberof Location
   */
  lng?: number;
  /**
   *
   * @type {string}
   * @memberof Location
   */
  city?: string;
  /**
   *
   * @type {string}
   * @memberof Location
   */
  country?: string;
}
/**
 *
 * @export
 * @interface MeetingPointDetails
 */
export interface MeetingPointDetails {
  /**
   *
   * @type {string}
   * @memberof MeetingPointDetails
   */
  name: string;
  /**
   *
   * @type {number}
   * @memberof MeetingPointDetails
   */
  minutesBefore: number;
}
/**
 *
 * @export
 * @interface Message
 */
export interface Message {
  /**
   *
   * @type {string}
   * @memberof Message
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  externalId?: string;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  head?: string;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  text?: string;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  lead?: string;
  /**
   *
   * @type {number}
   * @memberof Message
   */
  routeIdxFrom?: number;
  /**
   *
   * @type {number}
   * @memberof Message
   */
  routeIdxTo?: number;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  type?: Message.TypeEnum;
  /**
   *
   * @type {NesProperties}
   * @memberof Message
   */
  nesProperties?: NesProperties;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  startDate?: string;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  endDate?: string;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  startTime?: string;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  endTime?: string;
  /**
   *
   * @type {string}
   * @memberof Message
   */
  phase?: Message.PhaseEnum;
}

/**
 * @export
 * @namespace Message
 */
export namespace Message {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    MAINTENANCE = <any>"MAINTENANCE",
    DISRUPTION = <any>"DISRUPTION",
    SHORTENED = <any>"SHORTENED",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum PhaseEnum {
    _1A = <any>"PHASE_1A",
    _1B = <any>"PHASE_1B",
    _2 = <any>"PHASE_2",
    _3 = <any>"PHASE_3",
    _4 = <any>"PHASE_4",
    _5 = <any>"PHASE_5",
  }
}
/**
 *
 * @export
 * @interface ModalityListItem
 */
export interface ModalityListItem {
  /**
   *
   * @type {string}
   * @memberof ModalityListItem
   */
  name: string;
  /**
   *
   * @type {NesProperties}
   * @memberof ModalityListItem
   */
  nameNesProperties: NesProperties;
  /**
   *
   * @type {NesProperties}
   * @memberof ModalityListItem
   */
  iconNesProperties?: NesProperties;
  /**
   *
   * @type {string}
   * @memberof ModalityListItem
   */
  actualTrack?: string;
  /**
   *
   * @type {string}
   * @memberof ModalityListItem
   */
  accessibilityName: string;
}
/**
 *
 * @export
 * @interface NearbyMeLocationId
 */
export interface NearbyMeLocationId {
  /**
   *
   * @type {string}
   * @memberof NearbyMeLocationId
   */
  value: string;
  /**
   *
   * @type {string}
   * @memberof NearbyMeLocationId
   */
  type: string;
}
/**
 *
 * @export
 * @interface NesProperties
 */
export interface NesProperties {
  /**
   *
   * @type {string}
   * @memberof NesProperties
   */
  color: string;
  /**
   *
   * @type {string}
   * @memberof NesProperties
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof NesProperties
   */
  icon?: string;
  /**
   *
   * @type {string}
   * @memberof NesProperties
   */
  scope?: NesProperties.ScopeEnum;
  /**
   *
   * @type {Styles}
   * @memberof NesProperties
   */
  styles?: Styles;
}

/**
 * @export
 * @namespace NesProperties
 */
export namespace NesProperties {
  /**
   * @export
   * @enum {string}
   */
  export enum ScopeEnum {
    LEGLINE = <any>"LEG_LINE",
    ENTIRELEG = <any>"ENTIRE_LEG",
  }
}
/**
 * notes is a List of Lists because this allows frontend clients to render the elements of every nested List on the same row
 * @export
 * @interface Note
 */
export interface Note {
  /**
   *
   * @type {string}
   * @memberof Note
   */
  value?: string;
  /**
   *
   * @type {string}
   * @memberof Note
   */
  shortValue?: string;
  /**
   *
   * @type {string}
   * @memberof Note
   */
  accessibilityValue?: string;
  /**
   *
   * @type {string}
   * @memberof Note
   */
  key?: string;
  /**
   *
   * @type {string}
   * @memberof Note
   */
  noteType?: Note.NoteTypeEnum;
  /**
   *
   * @type {number}
   * @memberof Note
   */
  priority?: number;
  /**
   *
   * @type {number}
   * @memberof Note
   */
  routeIdxFrom?: number;
  /**
   *
   * @type {number}
   * @memberof Note
   */
  routeIdxTo?: number;
  /**
   *
   * @type {Link}
   * @memberof Note
   */
  link?: Link;
  /**
   *
   * @type {boolean}
   * @memberof Note
   */
  isPresentationRequired: boolean;
  /**
   *
   * @type {string}
   * @memberof Note
   */
  category?: Note.CategoryEnum;
  /**
   *
   * @type {NesProperties}
   * @memberof Note
   */
  nesProperties?: NesProperties;
}

/**
 * @export
 * @namespace Note
 */
export namespace Note {
  /**
   * @export
   * @enum {string}
   */
  export enum NoteTypeEnum {
    UNKNOWN = <any>"UNKNOWN",
    ATTRIBUTE = <any>"ATTRIBUTE",
    INFOTEXT = <any>"INFOTEXT",
    REALTIME = <any>"REALTIME",
    TICKET = <any>"TICKET",
    HINT = <any>"HINT",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum CategoryEnum {
    PLATFORMINFORMATION = <any>"PLATFORM_INFORMATION",
    OVERCHECKINSTRUCTION = <any>"OVERCHECK_INSTRUCTION",
    UNKNOWN = <any>"UNKNOWN",
  }
}
/**
 *
 * @export
 * @interface NsiLink
 */
export interface NsiLink {
  /**
   * NSI journeyplanner url with pre-filled locations and time
   * @type {string}
   * @memberof NsiLink
   */
  url: string;
  /**
   * Whether to display an NS International banner
   * @type {boolean}
   * @memberof NsiLink
   */
  showInternationalBanner: boolean;
}
/**
 *
 * @export
 * @interface Part
 */
export interface Part {
  /**
   *
   * @type {string}
   * @memberof Part
   */
  stockIdentifier?: string;
  /**
   *
   * @type {Station}
   * @memberof Part
   */
  destination?: Station;
  /**
   *
   * @type {Array<string>}
   * @memberof Part
   */
  facilities: Array<string>;
  /**
   *
   * @type {StockPartLink}
   * @memberof Part
   */
  image?: StockPartLink;
}
/**
 *
 * @export
 * @interface PlatformFeature
 */
export interface PlatformFeature {
  /**
   *
   * @type {number}
   * @memberof PlatformFeature
   */
  paddingLeft: number;
  /**
   *
   * @type {number}
   * @memberof PlatformFeature
   */
  width: number;
  /**
   *
   * @type {string}
   * @memberof PlatformFeature
   */
  type: string;
  /**
   *
   * @type {string}
   * @memberof PlatformFeature
   */
  description: string;
}
/**
 *
 * @export
 * @interface Price
 */
export interface Price {
  /**
   *
   * @type {number}
   * @memberof Price
   */
  totalPriceInCents: number;
  /**
   *
   * @type {number}
   * @memberof Price
   */
  priceDifferenceInCentsBetweenFirstAndSecondClass?: number;
  /**
   *
   * @type {number}
   * @memberof Price
   */
  priceDifferenceInCentsBetweenJointJourneyDiscount?: number;
  /**
   *
   * @type {string}
   * @memberof Price
   */
  operatorName?: string;
  /**
   *
   * @type {string}
   * @memberof Price
   */
  travelDiscount: Price.TravelDiscountEnum;
  /**
   *
   * @type {string}
   * @memberof Price
   */
  travelClass: Price.TravelClassEnum;
  /**
   *
   * @type {Array<string>}
   * @memberof Price
   */
  travelProducts: Array<Price.TravelProductsEnum>;
}

/**
 * @export
 * @namespace Price
 */
export namespace Price {
  /**
   * @export
   * @enum {string}
   */
  export enum TravelDiscountEnum {
    NODISCOUNT = <any>"NO_DISCOUNT",
    DISCOUNT20 = <any>"DISCOUNT_20",
    DISCOUNT40 = <any>"DISCOUNT_40",
    NOCHARGE = <any>"NO_CHARGE",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum TravelClassEnum {
    FIRSTCLASS = <any>"FIRST_CLASS",
    SECONDCLASS = <any>"SECOND_CLASS",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum TravelProductsEnum {
    OVCHIPKAARTENKELEREIS = <any>"OVCHIPKAART_ENKELE_REIS",
    OVCHIPKAARTRETOUR = <any>"OVCHIPKAART_RETOUR",
    TRAJECTVRIJMAAND = <any>"TRAJECT_VRIJ_MAAND",
    TRAJECTVRIJJAAR = <any>"TRAJECT_VRIJ_JAAR",
    BUSINESSCARDTRAJECTVRIJJAAR = <any>"BUSINESS_CARD_TRAJECT_VRIJ_JAAR",
    RAILRUNNER = <any>"RAILRUNNER",
    ETICKETENKELEREIS = <any>"ETICKET_ENKELE_REIS",
    ETICKETRETOUR = <any>"ETICKET_RETOUR",
  }
}
/**
 *
 * @export
 * @interface PriceV3
 */
export interface PriceV3 {
  /**
   * Total price
   * @type {number}
   * @memberof PriceV3
   */
  totalPriceInCents: number;
  /**
   * Price per adult
   * @type {number}
   * @memberof PriceV3
   */
  pricePerAdultInCents: number;
  /**
   * Discount price compared to total price without any discount
   * @type {number}
   * @memberof PriceV3
   */
  discountInCents?: number;
  /**
   * Name of the operator
   * @type {string}
   * @memberof PriceV3
   */
  operatorName?: string;
  /**
   * Type of discount
   * @type {string}
   * @memberof PriceV3
   */
  discountType: PriceV3.DiscountTypeEnum;
  /**
   * Traveling class
   * @type {string}
   * @memberof PriceV3
   */
  travelClass: PriceV3.TravelClassEnum;
  /**
   * Travel products types
   * @type {Array<Unit>}
   * @memberof PriceV3
   */
  travelProducts: Array<Unit>;
  /**
   * Denotes if the user can select this option
   * @type {boolean}
   * @memberof PriceV3
   */
  isSelectable: boolean;
  /**
   * Display name of product
   * @type {string}
   * @memberof PriceV3
   */
  displayName: string;
  /**
   * Header of conditions
   * @type {string}
   * @memberof PriceV3
   */
  conditionsHeader: string;
  /**
   * Conditions of product
   * @type {string}
   * @memberof PriceV3
   */
  conditionsText?: string;
  /**
   * Url to webpage with common conditions
   * @type {string}
   * @memberof PriceV3
   */
  conditionsUrl?: string;
  /**
   * Product ID used to buy ticket
   * @type {string}
   * @memberof PriceV3
   */
  productId: string;
  /**
   * Indicates if this price is the best option for client
   * @type {boolean}
   * @memberof PriceV3
   */
  isBestOption: boolean;
  /**
   * Price per child
   * @type {number}
   * @memberof PriceV3
   */
  pricePerChildInCents: number;
}

/**
 * @export
 * @namespace PriceV3
 */
export namespace PriceV3 {
  /**
   * @export
   * @enum {string}
   */
  export enum DiscountTypeEnum {
    NONE = <any>"NONE",
    EARLYBOOKING = <any>"EARLY_BOOKING",
    GROUP = <any>"GROUP",
    JOINTJOURNEY = <any>"JOINT_JOURNEY",
    RAILRUNNER = <any>"RAILRUNNER",
    NSDEAL = <any>"NS_DEAL",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum TravelClassEnum {
    FIRSTCLASS = <any>"FIRST_CLASS",
    SECONDCLASS = <any>"SECOND_CLASS",
  }
}
/**
 *
 * @export
 * @interface PricesResponseV3
 */
export interface PricesResponseV3 {
  /**
   *
   * @type {Array<PriceV3>}
   * @memberof PricesResponseV3
   */
  prices: Array<PriceV3>;
}
/**
 * Most important message to display
 * @export
 * @interface PrimaryMessage
 */
export interface PrimaryMessage {
  /**
   *
   * @type {string}
   * @memberof PrimaryMessage
   */
  title: string;
  /**
   *
   * @type {NesProperties}
   * @memberof PrimaryMessage
   */
  nesProperties: NesProperties;
  /**
   *
   * @type {Message}
   * @memberof PrimaryMessage
   */
  message?: Message;
  /**
   *
   * @type {string}
   * @memberof PrimaryMessage
   */
  type: PrimaryMessage.TypeEnum;
}

/**
 * @export
 * @namespace PrimaryMessage
 */
export namespace PrimaryMessage {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    TRIPCANCELLED = <any>"TRIP_CANCELLED",
    LEGCANCELLED = <any>"LEG_CANCELLED",
    LEGTRANSFERIMPOSSIBLE = <any>"LEG_TRANSFER_IMPOSSIBLE",
    ALTERNATIVETRANSPORT = <any>"ALTERNATIVE_TRANSPORT",
    DISRUPTION = <any>"DISRUPTION",
    MAINTENANCE = <any>"MAINTENANCE",
    REPLACEMENT = <any>"REPLACEMENT",
    ADDITIONAL = <any>"ADDITIONAL",
    SHORTENEDTRAIN = <any>"SHORTENED_TRAIN",
  }
}
/**
 *
 * @export
 * @interface Product
 */
export interface Product {
  /**
   *
   * @type {string}
   * @memberof Product
   */
  number?: string;
  /**
   *
   * @type {string}
   * @memberof Product
   */
  categoryCode?: string;
  /**
   *
   * @type {string}
   * @memberof Product
   */
  shortCategoryName?: string;
  /**
   *
   * @type {string}
   * @memberof Product
   */
  longCategoryName?: string;
  /**
   *
   * @type {string}
   * @memberof Product
   */
  operatorCode?: string;
  /**
   *
   * @type {string}
   * @memberof Product
   */
  operatorName?: string;
  /**
   *
   * @type {number}
   * @memberof Product
   */
  operatorAdministrativeCode?: number;
  /**
   *
   * @type {string}
   * @memberof Product
   */
  type: Product.TypeEnum;
  /**
   *
   * @type {string}
   * @memberof Product
   */
  displayName?: string;
  /**
   *
   * @type {NesProperties}
   * @memberof Product
   */
  nameNesProperties: NesProperties;
  /**
   *
   * @type {NesProperties}
   * @memberof Product
   */
  iconNesProperties?: NesProperties;
  /**
   * notes is a List of Lists because this allows frontend clients to render the elements of every nested List on the same row
   * @type {Array<Array<Note>>}
   * @memberof Product
   */
  notes: Array<Array<Note>>;
  /**
   *
   * @type {NesProperties}
   * @memberof Product
   */
  nesProperties?: NesProperties;
}

/**
 * @export
 * @namespace Product
 */
export namespace Product {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    TRAIN = <any>"TRAIN",
    BUS = <any>"BUS",
    TRAM = <any>"TRAM",
    METRO = <any>"METRO",
    FERRY = <any>"FERRY",
    WALK = <any>"WALK",
    BIKE = <any>"BIKE",
    CAR = <any>"CAR",
    TAXI = <any>"TAXI",
    SHAREDMODALITY = <any>"SHARED_MODALITY",
    UNKNOWN = <any>"UNKNOWN",
  }
}
/**
 *
 * @export
 * @interface RegistrationAvailability
 */
export interface RegistrationAvailability {
  /**
   *
   * @type {boolean}
   * @memberof RegistrationAvailability
   */
  seats: boolean;
  /**
   *
   * @type {number}
   * @memberof RegistrationAvailability
   */
  numberOfSeats?: number;
  /**
   *
   * @type {boolean}
   * @memberof RegistrationAvailability
   */
  bicycle: boolean;
  /**
   *
   * @type {number}
   * @memberof RegistrationAvailability
   */
  numberOfBicyclePlaces?: number;
}
/**
 *
 * @export
 * @interface RepresentationResponseArrivalsPayload
 */
export interface RepresentationResponseArrivalsPayload {
  /**
   *
   * @type {ArrivalsPayload}
   * @memberof RepresentationResponseArrivalsPayload
   */
  payload: ArrivalsPayload;
  /**
   *
   * @type {{ [key: string]: Link; }}
   * @memberof RepresentationResponseArrivalsPayload
   */
  links?: { [key: string]: Link };
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof RepresentationResponseArrivalsPayload
   */
  meta?: { [key: string]: any };
}
/**
 *
 * @export
 * @interface RepresentationResponseDeparturesPayload
 */
export interface RepresentationResponseDeparturesPayload {
  /**
   *
   * @type {DeparturesPayload}
   * @memberof RepresentationResponseDeparturesPayload
   */
  payload: DeparturesPayload;
  /**
   *
   * @type {{ [key: string]: Link; }}
   * @memberof RepresentationResponseDeparturesPayload
   */
  links?: { [key: string]: Link };
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof RepresentationResponseDeparturesPayload
   */
  meta?: { [key: string]: any };
}
/**
 *
 * @export
 * @interface RepresentationResponseJourney
 */
export interface RepresentationResponseJourney {
  /**
   *
   * @type {Journey}
   * @memberof RepresentationResponseJourney
   */
  payload: Journey;
  /**
   *
   * @type {{ [key: string]: Link; }}
   * @memberof RepresentationResponseJourney
   */
  links?: { [key: string]: Link };
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof RepresentationResponseJourney
   */
  meta?: { [key: string]: any };
}
/**
 *
 * @export
 * @interface RepresentationResponsePrice
 */
export interface RepresentationResponsePrice {
  /**
   *
   * @type {Price}
   * @memberof RepresentationResponsePrice
   */
  payload: Price;
  /**
   *
   * @type {{ [key: string]: Link; }}
   * @memberof RepresentationResponsePrice
   */
  links?: { [key: string]: Link };
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof RepresentationResponsePrice
   */
  meta?: { [key: string]: any };
}
/**
 *
 * @export
 * @interface RepresentationResponsePricesResponseV3
 */
export interface RepresentationResponsePricesResponseV3 {
  /**
   *
   * @type {PricesResponseV3}
   * @memberof RepresentationResponsePricesResponseV3
   */
  payload: PricesResponseV3;
  /**
   *
   * @type {{ [key: string]: Link; }}
   * @memberof RepresentationResponsePricesResponseV3
   */
  links?: { [key: string]: Link };
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof RepresentationResponsePricesResponseV3
   */
  meta?: { [key: string]: any };
}
/**
 *
 * @export
 * @interface RouteStation
 */
export interface RouteStation {
  /**
   *
   * @type {string}
   * @memberof RouteStation
   */
  uicCode?: string;
  /**
   *
   * @type {string}
   * @memberof RouteStation
   */
  mediumName?: string;
}
/**
 *
 * @export
 * @interface SalesOption
 */
export interface SalesOption {
  /**
   *
   * @type {string}
   * @memberof SalesOption
   */
  type: SalesOption.TypeEnum;
  /**
   *
   * @type {number}
   * @memberof SalesOption
   */
  permilleFullTariff?: number;
  /**
   *
   * @type {number}
   * @memberof SalesOption
   */
  priceInCents?: number;
  /**
   *
   * @type {number}
   * @memberof SalesOption
   */
  originalPrice?: number;
  /**
   *
   * @type {boolean}
   * @memberof SalesOption
   */
  betterOption: boolean;
  /**
   *
   * @type {string}
   * @memberof SalesOption
   */
  recommendationText?: string;
  /**
   *
   * @type {string}
   * @memberof SalesOption
   */
  labelText?: string;
}

/**
 * @export
 * @namespace SalesOption
 */
export namespace SalesOption {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    NSDEALDISCOUNT = <any>"NS_DEAL_DISCOUNT",
  }
}
/**
 *
 * @export
 * @interface ServiceBookingInfo
 */
export interface ServiceBookingInfo {
  /**
   *
   * @type {string}
   * @memberof ServiceBookingInfo
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof ServiceBookingInfo
   */
  tripLegIndex: string;
  /**
   *
   * @type {string}
   * @memberof ServiceBookingInfo
   */
  stationUic?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof ServiceBookingInfo
   */
  serviceTypeIds: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof ServiceBookingInfo
   */
  defaultAssistanceValue: boolean;
  /**
   *
   * @type {boolean}
   * @memberof ServiceBookingInfo
   */
  canChangeAssistance: boolean;
  /**
   *
   * @type {string}
   * @memberof ServiceBookingInfo
   */
  message?: string;
}
/**
 *
 * @export
 * @interface SharedModality
 */
export interface SharedModality {
  /**
   *
   * @type {string}
   * @memberof SharedModality
   */
  provider: string;
  /**
   *
   * @type {string}
   * @memberof SharedModality
   */
  name?: string;
  /**
   *
   * @type {boolean}
   * @memberof SharedModality
   */
  availability: boolean;
  /**
   *
   * @type {string}
   * @memberof SharedModality
   */
  nearByMeMapping: SharedModality.NearByMeMappingEnum;
  /**
   *
   * @type {string}
   * @memberof SharedModality
   */
  planIcon?: string;
}

/**
 * @export
 * @namespace SharedModality
 */
export namespace SharedModality {
  /**
   * @export
   * @enum {string}
   */
  export enum NearByMeMappingEnum {
    OVFIETS = <any>"OV_FIETS",
    SHAREDELECTRICALBIKE = <any>"SHARED_ELECTRICAL_BIKE",
    SHAREDBIKE = <any>"SHARED_BIKE",
    SHAREDSCOOTER = <any>"SHARED_SCOOTER",
    SHAREDCAR = <any>"SHARED_CAR",
    UNKNOWN = <any>"UNKNOWN",
  }
}
/**
 *
 * @export
 * @interface Station
 */
export interface Station {
  /**
   *
   * @type {string}
   * @memberof Station
   */
  uICCode: string;
  /**
   *
   * @type {string}
   * @memberof Station
   */
  stationType: string;
  /**
   *
   * @type {string}
   * @memberof Station
   */
  eVACode?: string;
  /**
   *
   * @type {string}
   * @memberof Station
   */
  code?: string;
  /**
   *
   * @type {number}
   * @memberof Station
   */
  cdCode?: number;
  /**
   *
   * @type {Array<Track>}
   * @memberof Station
   */
  sporen: Array<Track>;
  /**
   *
   * @type {Array<string>}
   * @memberof Station
   */
  synoniemen: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof Station
   */
  heeftFaciliteiten: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Station
   */
  heeftVertrektijden: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Station
   */
  heeftReisassistentie: boolean;
  /**
   *
   * @type {StationsNamen}
   * @memberof Station
   */
  namen?: StationsNamen;
  /**
   *
   * @type {string}
   * @memberof Station
   */
  land?: string;
  /**
   *
   * @type {number}
   * @memberof Station
   */
  lat?: number;
  /**
   *
   * @type {number}
   * @memberof Station
   */
  lng?: number;
  /**
   *
   * @type {number}
   * @memberof Station
   */
  radius?: number;
  /**
   *
   * @type {number}
   * @memberof Station
   */
  naderenRadius?: number;
  /**
   *
   * @type {number}
   * @memberof Station
   */
  distance?: number;
  /**
   *
   * @type {string}
   * @memberof Station
   */
  ingangsDatum?: string;
  /**
   *
   * @type {string}
   * @memberof Station
   */
  eindDatum?: string;
  /**
   *
   * @type {NearbyMeLocationId}
   * @memberof Station
   */
  nearbyMeLocationId?: NearbyMeLocationId;
}
/**
 *
 * @export
 * @interface StationResponse
 */
export interface StationResponse {
  /**
   *
   * @type {Array<Station>}
   * @memberof StationResponse
   */
  payload: Array<Station>;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof StationResponse
   */
  links?: { [key: string]: string };
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof StationResponse
   */
  meta?: { [key: string]: string };
}
/**
 *
 * @export
 * @interface StationsNamen
 */
export interface StationsNamen {
  /**
   *
   * @type {string}
   * @memberof StationsNamen
   */
  lang: string;
  /**
   *
   * @type {string}
   * @memberof StationsNamen
   */
  middel: string;
  /**
   *
   * @type {string}
   * @memberof StationsNamen
   */
  kort: string;
  /**
   *
   * @type {string}
   * @memberof StationsNamen
   */
  festive?: string;
}
/**
 *
 * @export
 * @interface Step
 */
export interface Step {
  /**
   *
   * @type {number}
   * @memberof Step
   */
  distanceInMeters: number;
  /**
   *
   * @type {number}
   * @memberof Step
   */
  durationInSeconds: number;
  /**
   *
   * @type {Location}
   * @memberof Step
   */
  startLocation: Location;
  /**
   *
   * @type {Location}
   * @memberof Step
   */
  endLocation: Location;
  /**
   *
   * @type {string}
   * @memberof Step
   */
  instructions: string;
}
/**
 *
 * @export
 * @interface Stock
 */
export interface Stock {
  /**
   *
   * @type {string}
   * @memberof Stock
   */
  trainType?: string;
  /**
   *
   * @type {number}
   * @memberof Stock
   */
  numberOfSeats: number;
  /**
   *
   * @type {number}
   * @memberof Stock
   */
  numberOfParts: number;
  /**
   *
   * @type {Array<Part>}
   * @memberof Stock
   */
  trainParts: Array<Part>;
  /**
   *
   * @type {boolean}
   * @memberof Stock
   */
  hasSignificantChange: boolean;
}
/**
 *
 * @export
 * @interface StockPartLink
 */
export interface StockPartLink {
  /**
   *
   * @type {string}
   * @memberof StockPartLink
   */
  uri: string;
}
/**
 *
 * @export
 * @interface Stop
 */
export interface Stop {
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  uicCode?: string;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  lat?: number;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  lng?: number;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  countryCode?: string;
  /**
   *
   * @type {Array<StopNote>}
   * @memberof Stop
   */
  notes: Array<StopNote>;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  routeIdx?: number;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  departurePrognosisType?: string;
  /**
   *
   * @type {Date}
   * @memberof Stop
   */
  plannedDepartureDateTime?: Date;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  plannedDepartureTimeZoneOffset?: number;
  /**
   *
   * @type {Date}
   * @memberof Stop
   */
  actualDepartureDateTime?: Date;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  actualDepartureTimeZoneOffset?: number;
  /**
   *
   * @type {Date}
   * @memberof Stop
   */
  plannedArrivalDateTime?: Date;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  plannedArrivalTimeZoneOffset?: number;
  /**
   *
   * @type {Date}
   * @memberof Stop
   */
  actualArrivalDateTime?: Date;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  actualArrivalTimeZoneOffset?: number;
  /**
   *
   * @type {Date}
   * @memberof Stop
   */
  plannedPassingDateTime?: Date;
  /**
   *
   * @type {Date}
   * @memberof Stop
   */
  actualPassingDateTime?: Date;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  arrivalPrognosisType?: string;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  actualDepartureTrack?: string;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  plannedDepartureTrack?: string;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  plannedArrivalTrack?: string;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  actualArrivalTrack?: string;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  departureDelayInSeconds?: number;
  /**
   *
   * @type {number}
   * @memberof Stop
   */
  arrivalDelayInSeconds?: number;
  /**
   *
   * @type {boolean}
   * @memberof Stop
   */
  cancelled: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Stop
   */
  borderStop: boolean;
  /**
   *
   * @type {boolean}
   * @memberof Stop
   */
  passing: boolean;
  /**
   *
   * @type {string}
   * @memberof Stop
   */
  quayCode?: string;
}
/**
 *
 * @export
 * @interface StopNote
 */
export interface StopNote {
  /**
   *
   * @type {string}
   * @memberof StopNote
   */
  value: string;
  /**
   *
   * @type {string}
   * @memberof StopNote
   */
  key?: string;
  /**
   *
   * @type {string}
   * @memberof StopNote
   */
  type: StopNote.TypeEnum;
  /**
   *
   * @type {number}
   * @memberof StopNote
   */
  priority?: number;
}

/**
 * @export
 * @namespace StopNote
 */
export namespace StopNote {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    U = <any>"U",
    A = <any>"A",
    I = <any>"I",
    R = <any>"R",
    H = <any>"H",
  }
}
/**
 *
 * @export
 * @interface Styles
 */
export interface Styles {
  /**
   *
   * @type {string}
   * @memberof Styles
   */
  type: string;
}
/**
 *
 * @export
 * @interface Track
 */
export interface Track {
  /**
   *
   * @type {string}
   * @memberof Track
   */
  spoorNummer: string;
}
/**
 *
 * @export
 * @interface TransferMessage
 */
export interface TransferMessage {
  /**
   *
   * @type {string}
   * @memberof TransferMessage
   */
  message: string;
  /**
   *
   * @type {string}
   * @memberof TransferMessage
   */
  accessibilityMessage: string;
  /**
   *
   * @type {string}
   * @memberof TransferMessage
   */
  type: TransferMessage.TypeEnum;
  /**
   *
   * @type {NesProperties}
   * @memberof TransferMessage
   */
  messageNesProperties: NesProperties;
  /**
   *
   * @type {NesProperties}
   * @memberof TransferMessage
   */
  iconNesProperties?: NesProperties;
}

/**
 * @export
 * @namespace TransferMessage
 */
export namespace TransferMessage {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    IMPOSSIBLETRANSFER = <any>"IMPOSSIBLE_TRANSFER",
    SPECIAL = <any>"SPECIAL",
    CHECKOVERINSTRUCTION = <any>"CHECKOVER_INSTRUCTION",
    CROSSPLATFORM = <any>"CROSS_PLATFORM",
    TRANSFERTIME = <any>"TRANSFER_TIME",
  }
}
/**
 *
 * @export
 * @interface TravelAdvice
 */
export interface TravelAdvice {
  /**
   * Source system that has generated these travel advices
   * @type {string}
   * @memberof TravelAdvice
   */
  source: TravelAdvice.SourceEnum;
  /**
   * List of trips
   * @type {Array<Trip>}
   * @memberof TravelAdvice
   */
  trips: Array<Trip>;
  /**
   * Scroll context to use when scrolling back in time. Can be used in scrollContext query parameter
   * @type {string}
   * @memberof TravelAdvice
   */
  scrollRequestBackwardContext?: string;
  /**
   * Scroll context to use when scrolling forward in time. Can be used in scrollContext query parameter
   * @type {string}
   * @memberof TravelAdvice
   */
  scrollRequestForwardContext?: string;
  /**
   * Optional message indicating why the list of trips is empty.
   * @type {string}
   * @memberof TravelAdvice
   */
  message?: string;
}

/**
 * @export
 * @namespace TravelAdvice
 */
export namespace TravelAdvice {
  /**
   * @export
   * @enum {string}
   */
  export enum SourceEnum {
    HARP = <any>"HARP",
    NEGENTWEE = <any>"NEGENTWEE",
    GOOGLE = <any>"GOOGLE",
    PAS = <any>"PAS",
  }
}
/**
 *
 * @export
 * @interface TravelAssistanceInfo
 */
export interface TravelAssistanceInfo {
  /**
   *
   * @type {string}
   * @memberof TravelAssistanceInfo
   */
  termsAndConditionsLink?: string;
  /**
   *
   * @type {number}
   * @memberof TravelAssistanceInfo
   */
  tripRequestId: number;
  /**
   *
   * @type {boolean}
   * @memberof TravelAssistanceInfo
   */
  isAssistanceRequired: boolean;
}
/**
 *
 * @export
 * @interface Trip
 */
export interface Trip {
  /**
   * Unique identifier for this trip
   * @type {string}
   * @memberof Trip
   */
  uid: string;
  /**
   * Reconstruction context for this trip. Can be used to reconstruct this exact trip with the v3/trips/trip endpoint
   * @type {string}
   * @memberof Trip
   */
  ctxRecon: string;
  /**
   * Reconstruction context for this trip set by the travel advice source system. Can be used to interact follow-up requests with the source system, like booking a trip with travel assistance (NSRA). Can be null if the source doesn't provide a ctxRecon
   * @type {string}
   * @memberof Trip
   */
  sourceCtxRecon?: string;
  /**
   * Planned duration of this trip in minutes
   * @type {number}
   * @memberof Trip
   */
  plannedDurationInMinutes?: number;
  /**
   * Actual duration of this trip in minutes, or the planned duration if no realtime information about this trip is available.
   * @type {number}
   * @memberof Trip
   */
  actualDurationInMinutes?: number;
  /**
   * Number of public transit transfers
   * @type {number}
   * @memberof Trip
   */
  transfers: number;
  /**
   * Status of this trip
   * @type {string}
   * @memberof Trip
   */
  status: Trip.StatusEnum;
  /**
   *
   * @type {PrimaryMessage}
   * @memberof Trip
   */
  primaryMessage?: PrimaryMessage;
  /**
   * List of messages regarding maintenance or disruption that influences this trip.
   * @type {Array<Message>}
   * @memberof Trip
   */
  messages?: Array<Message>;
  /**
   *
   * @type {Array<Leg>}
   * @memberof Trip
   */
  legs: Array<Leg>;
  /**
   *
   * @type {Array<Coordinate>}
   * @memberof Trip
   */
  overviewPolyLine?: Array<Coordinate>;
  /**
   *
   * @type {string}
   * @memberof Trip
   */
  crowdForecast?: Trip.CrowdForecastEnum;
  /**
   *
   * @type {number}
   * @memberof Trip
   */
  punctuality?: number;
  /**
   * Whether or not this trip is regarded the best possible option of all returned trips
   * @type {boolean}
   * @memberof Trip
   */
  optimal: boolean;
  /**
   *
   * @type {FareRoute}
   * @memberof Trip
   */
  fareRoute?: FareRoute;
  /**
   *
   * @type {Array<TripSalesFare>}
   * @memberof Trip
   */
  fares?: Array<TripSalesFare>;
  /**
   *
   * @type {Array<FareLeg>}
   * @memberof Trip
   */
  fareLegs?: Array<FareLeg>;
  /**
   *
   * @type {TripTravelFare}
   * @memberof Trip
   */
  productFare?: TripTravelFare;
  /**
   *
   * @type {TripFareOptions}
   * @memberof Trip
   */
  fareOptions?: TripFareOptions;
  /**
   *
   * @type {Link}
   * @memberof Trip
   */
  bookingUrl?: Link;
  /**
   *
   * @type {NsiLink}
   * @memberof Trip
   */
  nsiLink?: NsiLink;
  /**
   *
   * @type {string}
   * @memberof Trip
   */
  type: Trip.TypeEnum;
  /**
   *
   * @type {Link}
   * @memberof Trip
   */
  shareUrl?: Link;
  /**
   *
   * @type {boolean}
   * @memberof Trip
   */
  realtime: boolean;
  /**
   *
   * @type {TravelAssistanceInfo}
   * @memberof Trip
   */
  travelAssistanceInfo?: TravelAssistanceInfo;
  /**
   *
   * @type {string}
   * @memberof Trip
   */
  routeId?: string;
  /**
   *
   * @type {JourneyRegistrationParameters}
   * @memberof Trip
   */
  registerJourney?: JourneyRegistrationParameters;
  /**
   *
   * @type {Eco}
   * @memberof Trip
   */
  eco?: Eco;
  /**
   *
   * @type {Array<ModalityListItem>}
   * @memberof Trip
   */
  modalityListItems?: Array<ModalityListItem>;
  /**
   *
   * @type {Array<LabelListItem>}
   * @memberof Trip
   */
  labelListItems?: Array<LabelListItem>;
}

/**
 * @export
 * @namespace Trip
 */
export namespace Trip {
  /**
   * @export
   * @enum {string}
   */
  export enum StatusEnum {
    CANCELLED = <any>"CANCELLED",
    CHANGENOTPOSSIBLE = <any>"CHANGE_NOT_POSSIBLE",
    ALTERNATIVETRANSPORT = <any>"ALTERNATIVE_TRANSPORT",
    DISRUPTION = <any>"DISRUPTION",
    MAINTENANCE = <any>"MAINTENANCE",
    UNCERTAIN = <any>"UNCERTAIN",
    REPLACEMENT = <any>"REPLACEMENT",
    ADDITIONAL = <any>"ADDITIONAL",
    SPECIAL = <any>"SPECIAL",
    NORMAL = <any>"NORMAL",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum CrowdForecastEnum {
    UNKNOWN = <any>"UNKNOWN",
    LOW = <any>"LOW",
    MEDIUM = <any>"MEDIUM",
    HIGH = <any>"HIGH",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    NS = <any>"NS",
    NSACCESSIBLE = <any>"NS_ACCESSIBLE",
    NEGENTWEE = <any>"NEGENTWEE",
    GOOGLE = <any>"GOOGLE",
    PAS = <any>"PAS",
  }
}
/**
 *
 * @export
 * @interface TripFareOptions
 */
export interface TripFareOptions {
  /**
   *
   * @type {boolean}
   * @memberof TripFareOptions
   */
  isInternationalBookable: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TripFareOptions
   */
  isInternational: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TripFareOptions
   */
  isEticketBuyable: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TripFareOptions
   */
  isPossibleWithOvChipkaart: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TripFareOptions
   */
  isTotalPriceUnknown: boolean;
  /**
   *
   * @type {Array<TripFareSupplement>}
   * @memberof TripFareOptions
   */
  supplementsBasedOnSelectedFare?: Array<TripFareSupplement>;
  /**
   *
   * @type {EticketNotBuyableReason}
   * @memberof TripFareOptions
   */
  reasonEticketNotBuyable?: EticketNotBuyableReason;
  /**
   *
   * @type {Array<SalesOption>}
   * @memberof TripFareOptions
   */
  salesOptions?: Array<SalesOption>;
}
/**
 *
 * @export
 * @interface TripFareSupplement
 */
export interface TripFareSupplement {
  /**
   *
   * @type {number}
   * @memberof TripFareSupplement
   */
  supplementPriceInCents: number;
  /**
   *
   * @type {string}
   * @memberof TripFareSupplement
   */
  fromUICCode?: string;
  /**
   *
   * @type {string}
   * @memberof TripFareSupplement
   */
  toUICCode?: string;
  /**
   *
   * @type {Link}
   * @memberof TripFareSupplement
   */
  link?: Link;
}
/**
 *
 * @export
 * @interface TripOriginDestination
 */
export interface TripOriginDestination {
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof TripOriginDestination
   */
  lng?: number;
  /**
   *
   * @type {number}
   * @memberof TripOriginDestination
   */
  lat?: number;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  city?: string;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  countryCode?: string;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  uicCode?: string;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  stationCode?: string;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  type?: TripOriginDestination.TypeEnum;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  prognosisType?: string;
  /**
   *
   * @type {number}
   * @memberof TripOriginDestination
   */
  plannedTimeZoneOffset?: number;
  /**
   *
   * @type {Date}
   * @memberof TripOriginDestination
   */
  plannedDateTime?: string;
  /**
   *
   * @type {number}
   * @memberof TripOriginDestination
   */
  actualTimeZoneOffset?: number;
  /**
   *
   * @type {Date}
   * @memberof TripOriginDestination
   */
  actualDateTime?: string;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  plannedTrack?: string;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  actualTrack?: string;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  exitSide?: TripOriginDestination.ExitSideEnum;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  checkinStatus?: TripOriginDestination.CheckinStatusEnum;
  /**
   *
   * @type {ServiceBookingInfo}
   * @memberof TripOriginDestination
   */
  travelAssistanceBookingInfo?: ServiceBookingInfo;
  /**
   *
   * @type {Array<string>}
   * @memberof TripOriginDestination
   */
  travelAssistanceMeetingPoints?: Array<string>;
  /**
   *
   * @type {Array<MeetingPointDetails>}
   * @memberof TripOriginDestination
   */
  travelAssistanceMeetingPointDetails?: Array<MeetingPointDetails>;
  /**
   *
   * @type {Array<Note>}
   * @memberof TripOriginDestination
   */
  notes?: Array<Note>;
  /**
   *
   * @type {string}
   * @memberof TripOriginDestination
   */
  quayCode?: string;
}

/**
 * @export
 * @namespace TripOriginDestination
 */
export namespace TripOriginDestination {
  /**
   * @export
   * @enum {string}
   */
  export enum TypeEnum {
    STATION = <any>"STATION",
    ADDRESS = <any>"ADDRESS",
    POINTOFINTEREST = <any>"POINT_OF_INTEREST",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum ExitSideEnum {
    LEFT = <any>"LEFT",
    RIGHT = <any>"RIGHT",
    UNKNOWN = <any>"UNKNOWN",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum CheckinStatusEnum {
    CHECKIN = <any>"CHECKIN",
    CHECKOUT = <any>"CHECKOUT",
    OVERCHECK = <any>"OVERCHECK",
    DETOUR = <any>"DETOUR",
    REQUIREDCHECKOUTIN = <any>"REQUIRED_CHECK_OUT_IN",
    NOTHING = <any>"NOTHING",
  }
}
/**
 *
 * @export
 * @interface TripSalesFare
 */
export interface TripSalesFare {
  /**
   *
   * @type {number}
   * @memberof TripSalesFare
   */
  priceInCents?: number;
  /**
   *
   * @type {string}
   * @memberof TripSalesFare
   */
  product?: TripSalesFare.ProductEnum;
  /**
   *
   * @type {string}
   * @memberof TripSalesFare
   */
  travelClass?: TripSalesFare.TravelClassEnum;
  /**
   *
   * @type {number}
   * @memberof TripSalesFare
   */
  priceInCentsExcludingSupplement?: number;
  /**
   *
   * @type {string}
   * @memberof TripSalesFare
   */
  discountType?: TripSalesFare.DiscountTypeEnum;
  /**
   *
   * @type {number}
   * @memberof TripSalesFare
   */
  supplementInCents?: number;
  /**
   *
   * @type {string}
   * @memberof TripSalesFare
   */
  link?: string;
}

/**
 * @export
 * @namespace TripSalesFare
 */
export namespace TripSalesFare {
  /**
   * @export
   * @enum {string}
   */
  export enum ProductEnum {
    OVCHIPKAARTENKELEREIS = <any>"OVCHIPKAART_ENKELE_REIS",
    OVCHIPKAARTRETOUR = <any>"OVCHIPKAART_RETOUR",
    TRAJECTVRIJMAAND = <any>"TRAJECT_VRIJ_MAAND",
    TRAJECTVRIJJAAR = <any>"TRAJECT_VRIJ_JAAR",
    BUSINESSCARDTRAJECTVRIJJAAR = <any>"BUSINESS_CARD_TRAJECT_VRIJ_JAAR",
    ETICKETENKELEREIS = <any>"ETICKET_ENKELE_REIS",
    ETICKETRETOUR = <any>"ETICKET_RETOUR",
    ETICKETJOINTJOURNEYDISCOUNTRETOUR = <any>(
      "ETICKET_JOINT_JOURNEY_DISCOUNT_RETOUR"
    ),
    ETICKETJOINTJOURNEYDISCOUNTENKELEREIS = <any>(
      "ETICKET_JOINT_JOURNEY_DISCOUNT_ENKELE_REIS"
    ),
    EARLYBOOKINGDISCOUNTENKELEREIS = <any>"EARLY_BOOKING_DISCOUNT_ENKELE_REIS",
    EARLYBOOKINGDISCOUNTRETOUR = <any>"EARLY_BOOKING_DISCOUNT_RETOUR",
    GROUPOFFPEAK = <any>"GROUP_OFF_PEAK",
    NSDEALDISCOUNTENKELEREIS = <any>"NS_DEAL_DISCOUNT_ENKELE_REIS",
    RAILRUNNER = <any>"RAILRUNNER",
    ICESUPPLEMENT = <any>"ICE_SUPPLEMENT",
    ICDSUPPLEMENT = <any>"ICD_SUPPLEMENT",
    NSI = <any>"NSI",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum TravelClassEnum {
    FIRSTCLASS = <any>"FIRST_CLASS",
    SECONDCLASS = <any>"SECOND_CLASS",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum DiscountTypeEnum {
    NODISCOUNT = <any>"NO_DISCOUNT",
    DISCOUNT20PERCENT = <any>"DISCOUNT_20_PERCENT",
    DISCOUNT40PERCENT = <any>"DISCOUNT_40_PERCENT",
    NOCHARGE = <any>"NO_CHARGE",
    OTHER = <any>"OTHER",
  }
}
/**
 *
 * @export
 * @interface TripTravelFare
 */
export interface TripTravelFare {
  /**
   *
   * @type {number}
   * @memberof TripTravelFare
   */
  priceInCents?: number;
  /**
   *
   * @type {number}
   * @memberof TripTravelFare
   */
  priceInCentsExcludingSupplement?: number;
  /**
   *
   * @type {number}
   * @memberof TripTravelFare
   */
  supplementInCents?: number;
  /**
   *
   * @type {number}
   * @memberof TripTravelFare
   */
  buyableTicketPriceInCents?: number;
  /**
   *
   * @type {number}
   * @memberof TripTravelFare
   */
  buyableTicketPriceInCentsExcludingSupplement?: number;
  /**
   *
   * @type {number}
   * @memberof TripTravelFare
   */
  buyableTicketSupplementPriceInCents?: number;
  /**
   *
   * @type {string}
   * @memberof TripTravelFare
   */
  product?: TripTravelFare.ProductEnum;
  /**
   *
   * @type {string}
   * @memberof TripTravelFare
   */
  travelClass?: TripTravelFare.TravelClassEnum;
  /**
   *
   * @type {string}
   * @memberof TripTravelFare
   */
  discountType: TripTravelFare.DiscountTypeEnum;
  /**
   *
   * @type {string}
   * @memberof TripTravelFare
   */
  link?: string;
}

/**
 * @export
 * @namespace TripTravelFare
 */
export namespace TripTravelFare {
  /**
   * @export
   * @enum {string}
   */
  export enum ProductEnum {
    GEEN = <any>"GEEN",
    OVCHIPKAARTENKELEREIS = <any>"OVCHIPKAART_ENKELE_REIS",
    OVCHIPKAARTRETOUR = <any>"OVCHIPKAART_RETOUR",
    DALVOORDEEL = <any>"DAL_VOORDEEL",
    ALTIJDVOORDEEL = <any>"ALTIJD_VOORDEEL",
    DALVRIJ = <any>"DAL_VRIJ",
    WEEKENDVRIJ = <any>"WEEKEND_VRIJ",
    ALTIJDVRIJ = <any>"ALTIJD_VRIJ",
    BUSINESSCARD = <any>"BUSINESSCARD",
    BUSINESSCARDDAL = <any>"BUSINESSCARD_DAL",
    STUDENTWEEK = <any>"STUDENT_WEEK",
    STUDENTWEEKEND = <any>"STUDENT_WEEKEND",
    VDU = <any>"VDU",
    SAMENREISKORTING = <any>"SAMENREISKORTING",
    TRAJECTVRIJ = <any>"TRAJECT_VRIJ",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum TravelClassEnum {
    FIRSTCLASS = <any>"FIRST_CLASS",
    SECONDCLASS = <any>"SECOND_CLASS",
  }
  /**
   * @export
   * @enum {string}
   */
  export enum DiscountTypeEnum {
    NODISCOUNT = <any>"NO_DISCOUNT",
    DISCOUNT20PERCENT = <any>"DISCOUNT_20_PERCENT",
    DISCOUNT40PERCENT = <any>"DISCOUNT_40_PERCENT",
    NOCHARGE = <any>"NO_CHARGE",
    OTHER = <any>"OTHER",
  }
}

export interface Unit {}
