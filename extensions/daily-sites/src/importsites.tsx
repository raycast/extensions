import React from "react";
import { Form, ActionPanel, Action, showToast, Toast, getPreferenceValues } from "@raycast/api";
import fs from "fs";
import type { Preferences } from "./types";
import { parseSitesXml, loadSites, saveSites } from "./utils";

interface ImportSitesFormProps {
  onDone: () => void;
}

export function ImportSitesForm({ onDone }: ImportSitesFormProps) {
  // read the xmlFolder preference
  const { xmlFolder } = getPreferenceValues<Preferences>();

  async function handleSubmit(values: { file: string[] }) {
    try {
      const xmlPath = values.file[0]; /* or `${xmlFolder}/yourfile.xml` */
      const xml = await fs.promises.readFile(xmlPath, "utf-8");
      const imported = parseSitesXml(xml);
      const existing = await loadSites();
      const urls = new Set(existing.map((s) => s.url));
      const newSites = imported.filter((s) => !urls.has(s.url));
      await saveSites([...existing, ...newSites]);
      await showToast(Toast.Style.Success, `Imported ${newSites.length} new site(s)`);
      onDone();
    } catch (e) {
      console.error(e);
      await showToast(Toast.Style.Failure, "Import failed");
    }
  }

  return (
    <Form
      navigationTitle="Import Sites"
      actions={
        <ActionPanel>
          <Action.SubmitForm title="Import" onSubmit={handleSubmit} />
        </ActionPanel>
      }
    >
      <Form.FilePicker
        id="file"
        title="Choose XML File"
        allowMultipleSelection={false}
        canChooseFiles={true}
        canChooseDirectories={false}
        defaultValue={xmlFolder ? [xmlFolder] : undefined}
        info="This is expecting a file formatted like the one generated by Export Sites."
      />
    </Form>
  );
}

// Default command export that provides a dummy onDone
export default function ImportSitesCommand() {
  return <ImportSitesForm onDone={() => {}} />;
}
