{
  "$schema": "https://www.raycast.com/schemas/extension.json",
  "name": "iterm",
  "title": "iTerm",
  "description": "Control iTerm with Raycast",
  "icon": "command-icon.png",
  "author": "ron-myers",
  "contributors": [
    "flops",
    "papey",
    "jose-elias-alvarez",
    "luka_nola",
    "thomas"
  ],
  "license": "MIT",
  "categories": [
    "Applications",
    "Developer Tools",
    "Productivity",
    "System"
  ],
  "commands": [
    {
      "name": "new-iterm-window",
      "title": "New iTerm Window",
      "description": "Launch new window in iTerm",
      "mode": "view"
    },
    {
      "name": "new-iterm-tab",
      "title": "New iTerm Tab",
      "description": "Launch new tab in iTerm",
      "mode": "view"
    },
    {
      "name": "split-iterm-horizontally",
      "title": "Split iTerm Horizontally",
      "description": "Split Horizontally with Current Profile",
      "mode": "view"
    },
    {
      "name": "split-iterm-vertically",
      "title": "Split iTerm Vertically",
      "description": "Split Vertically with Current Profile",
      "mode": "view"
    },
    {
      "name": "edit-in-iterm",
      "title": "Edit in iTerm",
      "description": "Edit the selected file(s) in iTerm using $EDITOR",
      "mode": "view"
    },
    {
      "name": "open-iterm-here",
      "title": "Open iTerm Here",
      "description": "Open iTerm in the currently selected folder(s)",
      "mode": "view"
    }
  ],
  "tools": [
    {
      "name": "read-contents",
      "title": "Read Contents",
      "description": "Returns the visible contents of the session. Each row is terminated with a newline."
    },
    {
      "name": "write-contents",
      "title": "Write Contents",
      "description": "Writes text to the session, as though the user had typed it."
    }
  ],
  "ai": {
    "evals": [
      {
        "input": "@iterm check git status",
        "mocks": {
          "read-contents": "➜ git status \nOn branch master \nYour branch is up to date with 'origin/master'. \n \nnothing to commit, working tree clean \n \nraycast-macos on  master [$]",
          "write-contents": "Successfully called \"write-contents\""
        },
        "expected": [
          {
            "callsTool": {
              "name": "write-contents",
              "arguments": {
                "text": "git status\n"
              }
            }
          },
          {
            "callsTool": {
              "arguments": {},
              "name": "read-contents"
            }
          }
        ]
      },
      {
        "input": "@iterm install ffmpeg with brew",
        "mocks": {
          "write-contents": "Successfully called \"write-contents\""
        },
        "expected": [
          {
            "callsTool": {
              "arguments": {
                "text": "brew install ffmpeg\n"
              },
              "name": "write-contents"
            }
          }
        ]
      }
    ]
  },
  "dependencies": {
    "@raycast/api": "^1.79.0",
    "file-url": "^4.0.0",
    "run-applescript": "^6.1.0"
  },
  "devDependencies": {
    "@raycast/eslint-config": "^1.0.11",
    "@types/node": "^20.8.10",
    "@types/react": "^18.3.3",
    "eslint": "^7.32.0",
    "prettier": "^2.5.1",
    "react": "^18.2.0",
    "typescript": "^4.4.3"
  },
  "scripts": {
    "build": "ray build -e dist",
    "dev": "ray develop",
    "fix-lint": "ray lint --fix",
    "lint": "ray lint",
    "publish": "ray publish"
  }
}