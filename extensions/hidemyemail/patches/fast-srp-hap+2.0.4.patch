diff --git a/node_modules/fast-srp-hap/.DS_Store b/node_modules/fast-srp-hap/.DS_Store
new file mode 100644
index 0000000..f92bcd6
Binary files /dev/null and b/node_modules/fast-srp-hap/.DS_Store differ
diff --git a/node_modules/fast-srp-hap/lib/srp.d.ts b/node_modules/fast-srp-hap/lib/srp.d.ts
index a93dfd6..a560abb 100644
--- a/node_modules/fast-srp-hap/lib/srp.d.ts
+++ b/node_modules/fast-srp-hap/lib/srp.d.ts
@@ -146,6 +146,13 @@ export declare class SrpClient {
      * @return {Buffer}
      */
     computeM1(): Buffer;
+    /**
+     * Gets the M2 value.
+     * This requires setting the server's public key {@see Client.setB}.
+     *
+     * @return {Buffer}
+     */
+    computeM2(): Buffer;
     /**
      * Checks the server was able to calculate M2.
      * This requires setting the server's public key {@see Client.setB}.
diff --git a/node_modules/fast-srp-hap/lib/srp.d.ts.map b/node_modules/fast-srp-hap/lib/srp.d.ts.map
index 2952130..b86d12a 100644
--- a/node_modules/fast-srp-hap/lib/srp.d.ts.map
+++ b/node_modules/fast-srp-hap/lib/srp.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"srp.d.ts","sourceRoot":"","sources":["../src/srp.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"srp.d.ts","sourceRoot":"","sources":["../src/srp.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/srp.js b/node_modules/fast-srp-hap/lib/srp.js
index ecd7c08..d18f180 100644
--- a/node_modules/fast-srp-hap/lib/srp.js
+++ b/node_modules/fast-srp-hap/lib/srp.js
@@ -62,7 +62,7 @@ function getx(params, salt, I, P) {
     assertIsBuffer(I, "identity (I)");
     assertIsBuffer(P, "password (P)");
     const hashIP = crypto_1.default.createHash(params.hash)
-        .update(Buffer.concat([I, Buffer.from(":"), P]))
+        .update(Buffer.concat([Buffer.from(":"), P]))
         .digest();
     const hashX = crypto_1.default.createHash(params.hash)
         .update(salt)
@@ -263,8 +263,10 @@ function getM1(params, u_buf, s_buf, A_buf, B_buf, K_buf) {
         assertIsBuffer(A_buf, "client public key (A)");
         assertIsBuffer(B_buf, "server public key (B)");
         assertIsBuffer(K_buf, "session key (K)");
+        // For RFC 5054
+        const paddedG = padToN(params.g, params);
         const hN = crypto_1.default.createHash(params.hash).update(params.N.toBuffer(true)).digest();
-        const hG = crypto_1.default.createHash(params.hash).update(params.g.toBuffer(true)).digest();
+        const hG = crypto_1.default.createHash(params.hash).update(paddedG).digest();
         for (let i = 0; i < hN.length; i++) {
             hN[i] ^= hG[i];
         }
@@ -363,6 +365,18 @@ class SrpClient {
         }
         return this._M1;
     }
+    /**
+     * Gets the M2 value.
+     * This requires setting the server's public key {@see Client.setB}.
+     *
+     * @return {Buffer}
+     */
+    computeM2() {
+        if (this._M2 === undefined) {
+            throw new Error("incomplete protocol");
+        }
+        return this._M2;
+    }
     /**
      * Checks the server was able to calculate M2.
      * This requires setting the server's public key {@see Client.setB}.
diff --git a/node_modules/fast-srp-hap/lib/srp.js.map b/node_modules/fast-srp-hap/lib/srp.js.map
index 21790a7..325e6ef 100644
--- a/node_modules/fast-srp-hap/lib/srp.js.map
+++ b/node_modules/fast-srp-hap/lib/srp.js.map
@@ -1 +1 @@
-{"version":3,"file":"srp.js","sourceRoot":"","sources":["../src/srp.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"srp.js","sourceRoot":"","sources":["../src/srp.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/hap_test_data.d.ts b/node_modules/fast-srp-hap/lib/test/hap_test_data.d.ts
new file mode 100644
index 0000000..d0c42fc
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/hap_test_data.d.ts
@@ -0,0 +1,14 @@
+export declare const N: import("../../jsbn/jsbn");
+export declare const g: import("../../jsbn/jsbn");
+export declare const I = "alice";
+export declare const p = "password123";
+export declare const a: import("../../jsbn/jsbn");
+export declare const A: import("../../jsbn/jsbn");
+export declare const b: import("../../jsbn/jsbn");
+export declare const B: import("../../jsbn/jsbn");
+export declare const s: import("../../jsbn/jsbn");
+export declare const v: import("../../jsbn/jsbn");
+export declare const u: import("../../jsbn/jsbn");
+export declare const S: import("../../jsbn/jsbn");
+export declare const K: import("../../jsbn/jsbn");
+//# sourceMappingURL=hap_test_data.d.ts.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/hap_test_data.d.ts.map b/node_modules/fast-srp-hap/lib/test/hap_test_data.d.ts.map
new file mode 100644
index 0000000..b8fe793
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/hap_test_data.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"hap_test_data.d.ts","sourceRoot":"","sources":["../../src/test/hap_test_data.ts"],"names":[],"mappings":"AAGA,eAAO,MAAM,CAAC,2BAaZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAAY,CAAC;AAG3B,eAAO,MAAM,CAAC,UAAU,CAAC;AAGzB,eAAO,MAAM,CAAC,gBAAgB,CAAC;AAG/B,eAAO,MAAM,CAAC,2BAEZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAcZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAEZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAaZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAEZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAaZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAGZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAaZ,CAAC;AAGH,eAAO,MAAM,CAAC,2BAGZ,CAAC"}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/hap_test_data.js b/node_modules/fast-srp-hap/lib/test/hap_test_data.js
new file mode 100644
index 0000000..7878729
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/hap_test_data.js
@@ -0,0 +1,109 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.K = exports.S = exports.u = exports.v = exports.s = exports.B = exports.b = exports.A = exports.a = exports.p = exports.I = exports.g = exports.N = void 0;
+const params_1 = require("../params");
+// Modulus (N), as specified by the 3072-bit group of RFC 5054
+exports.N = (0, params_1.hex)(`
+    FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD1 29024E08 8A67CC74
+    020BBEA6 3B139B22 514A0879 8E3404DD EF9519B3 CD3A431B 302B0A6D F25F1437
+    4FE1356D 6D51C245 E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7ED
+    EE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3D C2007CB8 A163BF05
+    98DA4836 1C55D39A 69163FA8 FD24CF5F 83655D23 DCA3AD96 1C62F356 208552BB
+    9ED52907 7096966D 670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3B
+    E39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9 DE2BCBF6 95581718
+    3995497C EA956AE5 15D22618 98FA0510 15728E5A 8AAAC42D AD33170D 04507A33
+    A85521AB DF1CBA64 ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7
+    ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6B F12FFA06 D98A0864
+    D8760273 3EC86A64 521F2B18 177B200C BBE11757 7A615D6C 770988C0 BAD946E2
+    08E24FA0 74E5AB31 43DB5BFC E0FD108E 4B82D120 A93AD2CA FFFFFFFF FFFFFFFF
+`);
+// Generator (g), as specified by the 3072-bit group of RFC 5054
+exports.g = (0, params_1.hex)("05");
+// Username (I), as an ASCII string without quotes
+exports.I = "alice";
+// Password (p), as an ASCII string without quotes
+exports.p = "password123";
+// A private (a)
+exports.a = (0, params_1.hex)(`
+    60975527 035CF2AD 1989806F 0407210B C81EDC04 E2762A56 AFD529DD DA2D4393
+`);
+// A public (A)
+exports.A = (0, params_1.hex)(`
+    FAB6F5D2 615D1E32 3512E799 1CC37443 F487DA60 4CA8C923 0FCB04E5 41DCE628
+    0B27CA46 80B0374F 179DC3BD C7553FE6 2459798C 701AD864 A91390A2 8C93B644
+    ADBF9C00 745B942B 79F9012A 21B9B787 82319D83 A1F83628 66FBD6F4 6BFC0DDB
+
+    2E1AB6E4 B45A9906 B82E37F0 5D6F97F6 A3EB6E18 2079759C 4F684783 7B62321A
+    C1B4FA68 641FCB4B B98DD697 A0C73641 385F4BAB 25B79358 4CC39FC8 D48D4BD8
+    67A9A3C1 0F8EA121 70268E34 FE3BBE6F F89998D6 0DA2F3E4 283CBEC1 393D52AF
+    724A5723 0C604E9F BCE583D7 613E6BFF D67596AD 121A8707 EEC46944 95703368
+    6A155F64 4D5C5863 B48F61BD BF19A53E AB6DAD0A 186B8C15 2E5F5D8C AD4B0EF8
+    AA4EA500 8834C3CD 342E5E0F 167AD045 92CD8BD2 79639398 EF9E114D FAAAB919
+    E14E8509 89224DDD 98576D79 385D2210 902E9F9B 1F2D86CF A47EE244 635465F7
+    1058421A 0184BE51 DD10CC9D 079E6F16 04E7AA9B 7CF7883C 7D4CE12B 06EBE160
+    81E23F27 A231D184 32D7D1BB 55C28AE2 1FFCF005 F57528D1 5A88881B B3BBB7FE
+`);
+// B private (b)
+exports.b = (0, params_1.hex)(`
+    E487CB59 D31AC550 471E81F0 0F6928E0 1DDA08E9 74A004F4 9E61F5D1 05284D20
+`);
+// B public (B)
+exports.B = (0, params_1.hex)(`
+    40F57088 A482D4C7 733384FE 0D301FDD CA9080AD 7D4F6FDF 09A01006 C3CB6D56
+    2E41639A E8FA21DE 3B5DBA75 85B27558 9BDB2798 63C56280 7B2B9908 3CD1429C
+    DBE89E25 BFBD7E3C AD3173B2 E3C5A0B1 74DA6D53 91E6A06E 465F037A 40062548
+    39A56BF7 6DA84B1C 94E0AE20 8576156F E5C140A4 BA4FFC9E 38C3B07B 88845FC6
+    F7DDDA93 381FE0CA 6084C4CD 2D336E54 51C464CC B6EC65E7 D16E548A 273E8262
+    84AF2559 B6264274 215960FF F47BDD63 D3AFF064 D6137AF7 69661C9D 4FEE4738
+    2603C88E AA098058 1D077584 61B777E4 356DDA58 35198B51 FEEA308D 70F75450
+    B71675C0 8C7D8302 FD7539DD 1FF2A11C B4258AA7 0D234436 AA42B6A0 615F3F91
+    5D55CC3B 966B2716 B36E4D1A 06CE5E5D 2EA3BEE5 A1270E87 51DA45B6 0B997B0F
+    FDB0F996 2FEE4F03 BEE780BA 0A845B1D 92714217 83AE6601 A61EA2E3 42E4F2E8
+    BC935A40 9EAD19F2 21BD1B74 E2964DD1 9FC845F6 0EFC0933 8B60B6B2 56D8CAC8
+    89CCA306 CC370A0B 18C8B886 E95DA0AF 5235FEF4 393020D2 B7F30569 04759042
+`);
+// Salt (s)
+exports.s = (0, params_1.hex)(`
+    BEB25379 D1A8581E B5A72767 3A2441EE
+`);
+// Verifier (v)
+exports.v = (0, params_1.hex)(`
+    9B5E0617 01EA7AEB 39CF6E35 19655A85 3CF94C75 CAF2555E F1FAF759 BB79CB47
+    7014E04A 88D68FFC 05323891 D4C205B8 DE81C2F2 03D8FAD1 B24D2C10 9737F1BE
+    BBD71F91 2447C4A0 3C26B9FA D8EDB3E7 80778E30 2529ED1E E138CCFC 36D4BA31
+    3CC48B14 EA8C22A0 186B222E 655F2DF5 603FD75D F76B3B08 FF895006 9ADD03A7
+    54EE4AE8 8587CCE1 BFDE3679 4DBAE459 2B7B904F 442B041C B17AEBAD 1E3AEBE3
+    CBE99DE6 5F4BB1FA 00B0E7AF 06863DB5 3B02254E C66E781E 3B62A821 2C86BEB0
+    D50B5BA6 D0B478D8 C4E9BBCE C2176532 6FBD1405 8D2BBDE2 C33045F0 3873E539
+    48D78B79 4F0790E4 8C36AED6 E880F557 427B2FC0 6DB5E1E2 E1D7E661 AC482D18
+    E528D729 5EF74372 95FF1A72 D4027717 13F16876 DD050AE5 B7AD53CC B90855C9
+    39566483 58ADFD96 6422F524 98732D68 D1D7FBEF 10D78034 AB8DCB6F 0FCF885C
+    C2B2EA2C 3E6AC866 09EA058A 9DA8CC63 531DC915 414DF568 B09482DD AC1954DE
+    C7EB714F 6FF7D44C D5B86F6B D1158109 30637C01 D0F6013B C9740FA2 C633BA89
+`);
+// Random Scrambling Parameter (u)
+exports.u = (0, params_1.hex)(`
+    03AE5F3C 3FA9EFF1 A50D7DBB 8D2F60A1 EA66EA71 2D50AE97 6EE34641 A1CD0E51
+    C4683DA3 83E8595D 6CB56A15 D5FBC754 3E07FBDD D316217E 01A391A1 8EF06DFF
+`);
+// Premaster Secret (S)
+exports.S = (0, params_1.hex)(`
+    F1036FEC D017C823 9C0D5AF7 E0FCF0D4 08B009E3 6411618A 60B23AAB BFC38339
+    72682312 14BAACDC 94CA1C53 F442FB51 C1B027C3 18AE238E 16414D60 D1881B66
+    486ADE10 ED02BA33 D098F6CE 9BCF1BB0 C46CA2C4 7F2F174C 59A9C61E 2560899B
+    83EF6113 1E6FB30B 714F4E43 B735C9FE 6080477C 1B83E409 3E4D456B 9BCA492C
+    F9339D45 BC42E67C E6C02C24 3E49F5DA 42A869EC 855780E8 4207B8A1 EA6501C4
+    78AAC0DF D3D22614 F531A00D 826B7954 AE8B14A9 85A42931 5E6DD366 4CF47181
+    496A9432 9CDE8005 CAE63C2F 9CA4969B FE840019 24037C44 6559BDBB 9DB9D4DD
+    142FBCD7 5EEF2E16 2C843065 D99E8F05 762C4DB7 ABD9DB20 3D41AC85 A58C05BD
+    4E2DBF82 2A934523 D54E0653 D376CE8B 56DCB452 7DDDC1B9 94DC7509 463A7468
+    D7F02B1B EB168571 4CE1DD1E 71808A13 7F788847 B7C6B7BF A1364474 B3B7E894
+    78954F6A 8E68D45B 85A88E4E BFEC1336 8EC0891C 3BC86CF5 00978801 78D86135
+    E7287234 58538858 D715B7B2 47406222 C1019F53 603F0169 52D49710 0858824C
+`);
+// Session Key (K)
+exports.K = (0, params_1.hex)(`
+    5CBC219D B052138E E1148C71 CD449896 3D682549 CE91CA24 F098468F 06015BEB
+    6AF245C2 093F98C3 651BCA83 AB8CAB2B 580BBF02 184FEFDF 26142F73 DF95AC50
+`);
+//# sourceMappingURL=hap_test_data.js.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/hap_test_data.js.map b/node_modules/fast-srp-hap/lib/test/hap_test_data.js.map
new file mode 100644
index 0000000..77b5c1a
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/hap_test_data.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"hap_test_data.js","sourceRoot":"","sources":["../../src/test/hap_test_data.ts"],"names":[],"mappings":";;;AAAA,sCAAgC;AAEhC,8DAA8D;AACjD,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;;;;;;;;;;;;CAapB,CAAC,CAAC;AAEH,gEAAgE;AACnD,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC,IAAI,CAAC,CAAC;AAE3B,kDAAkD;AACrC,QAAA,CAAC,GAAG,OAAO,CAAC;AAEzB,kDAAkD;AACrC,QAAA,CAAC,GAAG,aAAa,CAAC;AAE/B,gBAAgB;AACH,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;CAEpB,CAAC,CAAC;AAEH,eAAe;AACF,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;;;;;;;;;;;;;CAcpB,CAAC,CAAC;AAEH,gBAAgB;AACH,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;CAEpB,CAAC,CAAC;AAEH,eAAe;AACF,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;;;;;;;;;;;;CAapB,CAAC,CAAC;AAEH,WAAW;AACE,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;CAEpB,CAAC,CAAC;AAEH,eAAe;AACF,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;;;;;;;;;;;;CAapB,CAAC,CAAC;AAEH,kCAAkC;AACrB,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;;CAGpB,CAAC,CAAC;AAEH,uBAAuB;AACV,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;;;;;;;;;;;;CAapB,CAAC,CAAC;AAEH,kBAAkB;AACL,QAAA,CAAC,GAAG,IAAA,YAAG,EAAC;;;CAGpB,CAAC,CAAC"}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_hap_vectors.d.ts b/node_modules/fast-srp-hap/lib/test/test_hap_vectors.d.ts
new file mode 100644
index 0000000..67e68c7
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_hap_vectors.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=test_hap_vectors.d.ts.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_hap_vectors.d.ts.map b/node_modules/fast-srp-hap/lib/test/test_hap_vectors.d.ts.map
new file mode 100644
index 0000000..f07d284
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_hap_vectors.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"test_hap_vectors.d.ts","sourceRoot":"","sources":["../../src/test/test_hap_vectors.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_hap_vectors.js b/node_modules/fast-srp-hap/lib/test/test_hap_vectors.js
new file mode 100644
index 0000000..f088f08
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_hap_vectors.js
@@ -0,0 +1,88 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+/* eslint-disable @typescript-eslint/ban-ts-comment */
+// @ts-ignore
+const vows_1 = __importDefault(require("vows"));
+const assert_1 = __importDefault(require("assert"));
+const srp_1 = require("../srp");
+const BigInteger = require("../../jsbn/jsbn");
+// eslint-disable-next-line @typescript-eslint/no-unused-vars
+const hap_test_data_1 = require("./hap_test_data");
+const params = srp_1.SRP.params.hap;
+const inputs = {
+    I: Buffer.from(hap_test_data_1.I, "ascii"),
+    P: Buffer.from(hap_test_data_1.p, "ascii"),
+    salt: hap_test_data_1.s.toBuffer(true),
+    // a and b are usually random. For testing, we force them to specific values.
+    a: hap_test_data_1.a.toBuffer(true),
+    b: hap_test_data_1.b.toBuffer(true),
+};
+const expected = {
+    // 'k' encodes the group (N and g), used in SRP-6a
+    k: Buffer.from("a9c2e2559bf0ebb53f0cbbf62282906bede7f2182f00678211fbd5bde5b285033a4993503b87397f9be5ec02080fedbc0835587ad039060879b8621e8c3659e0", "hex"),
+    // 'x' is derived from the salt and password
+    x: Buffer.from("b149ecb0946b0b206d77e73d95deb7c41bd12e86a5e2eea3893d5416591a002ff94bfea384dc0e1c550f7ed4d5a9d2ad1f1526f01c56b5c10577730cc4a4d709", "hex"),
+    // 'v' is the SRP verifier
+    v: hap_test_data_1.v.toBuffer(true),
+    // 'B' is the server's public message
+    B: hap_test_data_1.B.toBuffer(true),
+    // 'A' is the client's public message
+    A: hap_test_data_1.A.toBuffer(true),
+    // 'u' combines the two public messages
+    u: hap_test_data_1.u.toBuffer(true),
+    // 'S' is the shared secret
+    S: hap_test_data_1.S.toBuffer(true),
+    // 'K' is the shared derived key
+    K: hap_test_data_1.K.toBuffer(true),
+    // 'M1' is the client's proof that it knows the shared key
+    M1: Buffer.from("5f7c14ab57ed0e94fd1d78c6b4dd09ed7e340b7e05d419a9fd760f6b35e523d1310777a1ae1d2826f596f3a85116cc457c7c964d4f44ded5559da818c88b617f", "hex"),
+};
+function hexequal(a, b, msg) {
+    assert_1.default.strictEqual(a.length, b.length, msg);
+    assert_1.default.strictEqual(a.toString("hex"), b.toString("hex"), msg);
+}
+function numequal(a, b, msg) {
+    (0, assert_1.default)(a.compareTo(b) === 0, msg);
+}
+function checkVectors(params, inputs, expected, useVerifier = true) {
+    hexequal(inputs.I, Buffer.from("616c696365", "hex"), "I");
+    hexequal(srp_1.SRP.computeVerifier(params, inputs.salt, inputs.I, inputs.P), expected.v, "v");
+    const client = new srp_1.SrpClient(params, inputs.salt, inputs.I, inputs.P, inputs.a, true);
+    const server = useVerifier ?
+        new srp_1.SrpServer(params, { username: inputs.I, salt: inputs.salt, verifier: expected.v }, inputs.b) :
+        new srp_1.SrpServer(params, inputs.salt, inputs.I, inputs.P, inputs.b);
+    // @ts-ignore
+    numequal(client._k, new BigInteger(expected.k.toString("hex"), 16), "k");
+    // @ts-ignore
+    numequal(client._x, new BigInteger(expected.x.toString("hex"), 16), "x");
+    hexequal(client.computeA(), expected.A);
+    hexequal(server.computeB(), expected.B);
+    assert_1.default.throws(() => client.computeM1(), /incomplete protocol/);
+    assert_1.default.throws(() => client.computeK(), /incomplete protocol/);
+    assert_1.default.throws(() => server.checkM1(expected.M1), /incomplete protocol/);
+    assert_1.default.throws(() => server.computeK(), /incomplete protocol/);
+    assert_1.default.throws(() => server.computeM2(), /incomplete protocol/);
+    client.setB(expected.B);
+    // @ts-ignore
+    numequal(client._u, new BigInteger(expected.u.toString("hex"), 16));
+    // @ts-ignore
+    hexequal(client._S, expected.S);
+    hexequal(client.computeM1(), expected.M1);
+    hexequal(client.computeK(), expected.K);
+    server.setA(expected.A);
+    // @ts-ignore
+    numequal(server._u, new BigInteger(expected.u.toString("hex"), 16));
+    // @ts-ignore
+    hexequal(server._S, expected.S);
+    assert_1.default.throws(() => server.checkM1(Buffer.from("notM1")), /client did not use the same password/);
+    server.checkM1(expected.M1); // happy, not throwy
+    hexequal(server.computeK(), expected.K);
+}
+vows_1.default.describe("HomeKit vectors").addBatch({
+    "with verifier": () => checkVectors(params, inputs, expected),
+    "with password": () => checkVectors(params, inputs, expected, false),
+}).export(module);
+//# sourceMappingURL=test_hap_vectors.js.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_hap_vectors.js.map b/node_modules/fast-srp-hap/lib/test/test_hap_vectors.js.map
new file mode 100644
index 0000000..ccba3cd
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_hap_vectors.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"test_hap_vectors.js","sourceRoot":"","sources":["../../src/test/test_hap_vectors.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_picl_vectors.d.ts b/node_modules/fast-srp-hap/lib/test/test_picl_vectors.d.ts
new file mode 100644
index 0000000..2705896
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_picl_vectors.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=test_picl_vectors.d.ts.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_picl_vectors.d.ts.map b/node_modules/fast-srp-hap/lib/test/test_picl_vectors.d.ts.map
new file mode 100644
index 0000000..b1f0d11
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_picl_vectors.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"test_picl_vectors.d.ts","sourceRoot":"","sources":["../../src/test/test_picl_vectors.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_picl_vectors.js b/node_modules/fast-srp-hap/lib/test/test_picl_vectors.js
new file mode 100644
index 0000000..b484a76
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_picl_vectors.js
@@ -0,0 +1,322 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+/* eslint-disable @typescript-eslint/ban-ts-comment */
+// @ts-ignore
+const vows_1 = __importDefault(require("vows"));
+const assert_1 = __importDefault(require("assert"));
+const srp_1 = require("../srp");
+const BigInteger = require("../../jsbn/jsbn");
+/*
+ * Vectors from https://wiki.mozilla.org/Identity/AttachedServices/KeyServerProtocol
+ *
+ * Verify that we are inter-compatible with the SRP implementation used by
+ * Mozilla's Identity-Attached Services, aka PiCl (Profile in the Cloud).
+ *
+ * Note that P is the HKDF-stretched key, computed elsewhere.
+ */
+function hex(s) {
+    return Buffer.from(s.split(/\s/).join(""), "hex");
+}
+const params = srp_1.SRP.params[2048];
+/* inputs_1/expected_1 are the main PiCl test vectors. They were mechanically
+ * generated to force certain derived values (stretched-password "P", v, A,
+ * B, and S) to begin with a 0x00 byte (to exercise padding bugs).
+ */
+const inputs_1 = {
+    I: Buffer.from("andré@example.org", "utf8"),
+    P: hex("00f9b71800ab5337 d51177d8fbc682a3 653fa6dae5b87628 eeec43a18af59a9d"),
+    salt: hex("00f1000000000000000000000000000000000000000000000000000000000179"),
+    // a and b are usually random. For testing, we force them to specific values.
+    a: hex(`
+    00f2000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 000000000000d3d7
+  `),
+    b: hex(`
+    00f3000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 000000000000000f
+  `),
+};
+const expected_1 = {
+    // 'k' encodes the group (N and g), used in SRP-6a
+    k: hex("05b9e8ef059c6b32 ea59fc1d322d37f0 4aa30bae5aa9003b 8321e21ddb04e300"),
+    // 'x' is derived from the salt and password
+    // 'v' is the SRP verifier
+    x: hex("b5200337cc3f3f92 6cdddae0b2d31029 c069936a844aff58 779a545be89d0abe"),
+    v: hex(`
+    00173ffa0263e63c cfd6791b8ee2a40f 048ec94cd95aa8a3 125726f9805e0c82
+    83c658dc0b607fbb 25db68e68e93f265 8483049c68af7e82 14c49fde2712a775
+    b63e545160d64b00 189a86708c69657d a7a1678eda0cd79f 86b8560ebdb1ffc2
+    21db360eab901d64 3a75bf1205070a57 91230ae56466b8c3 c1eb656e19b794f1
+    ea0d2a077b3a7553 50208ea0118fec8c 4b2ec344a05c66ae 1449b32609ca7189
+    451c259d65bd15b3 4d8729afdb5faff8 af1f3437bbdc0c3d 0b069a8ab2a959c9
+    0c5a43d42082c774 90f3afcc10ef5648 625c0605cdaace6c 6fdc9e9a7e6635d6
+    19f50af773452247 0502cab26a52a198 f5b00a2798589165 07b0b4e9ef9524d6
+  `),
+    // 'B' is the server's public message
+    B: hex(`
+    0022ce5a7b9d8127 7172caa20b0f1efb 4643b3becc535664 73959b07b790d3c3
+    f08650d5531c19ad 30ebb67bdb481d1d 9cf61bf272f84398 48fdda58a4e6abc5
+    abb2ac496da5098d 5cbf90e29b4b110e 4e2c033c70af7392 5fa37457ee13ea3e
+    8fde4ab516dff1c2 ae8e57a6b264fb9d b637eeeae9b5e43d faba9b329d3b8770
+    ce89888709e02627 0e474eef822436e6 397562f284778673 a1a7bc12b6883d1c
+    21fbc27ffb3dbeb8 5efda279a69a1941 4969113f10451603 065f0a0126666456
+    51dde44a52f4d8de 113e2131321df1bf 4369d2585364f9e5 36c39a4dce33221b
+    e57d50ddccb4384e 3612bbfd03a268a3 6e4f7e01de651401 e108cc247db50392
+  `),
+    // 'A' is the client's public message
+    A: hex(`
+    007da76cb7e77af5 ab61f334dbd5a958 513afcdf0f47ab99 271fc5f7860fe213
+    2e5802ca79d2e5c0 64bb80a38ee08771 c98a937696698d87 8d78571568c98a1c
+    40cc6e7cb101988a 2f9ba3d65679027d 4d9068cb8aad6ebf f0101bab6d52b5fd
+    fa81d2ed48bba119 d4ecdb7f3f478bd2 36d5749f2275e948 4f2d0a9259d05e49
+    d78a23dd26c60bfb a04fd346e5146469 a8c3f010a627be81 c58ded1caaef2363
+    635a45f97ca0d895 cc92ace1d09a99d6 beb6b0dc0829535c 857a419e834db128
+    64cd6ee8a843563b 0240520ff0195735 cd9d316842d5d3f8 ef7209a0bb4b54ad
+    7374d73e79be2c39 75632de562c59647 0bb27bad79c3e2fc ddf194e1666cb9fc
+  `),
+    // 'u' combines the two public messages
+    u: hex("b284aa1064e87751 50da6b5e2147b47c a7df505bed94a6f4 bb2ad873332ad732"),
+    // 'S' is the shared secret
+    S: hex(`
+    0092aaf0f527906a a5e8601f5d707907 a03137e1b601e04b 5a1deb02a981f4be
+    037b39829a27dba5 0f1b27545ff2e287 29c2b79dcbdd32c9 d6b20d340affab91
+    a626a8075806c26f e39df91d0ad979f9 b2ee8aad1bc783e7 097407b63bfe58d9
+    118b9b0b2a7c5c4c debaf8e9a460f4bf 6247b0da34b760a5 9fac891757ddedca
+    f08eed823b090586 c63009b2d740cc9f 5397be89a2c32cdc fe6d6251ce11e44e
+    6ecbdd9b6d93f30e 90896d2527564c7e b9ff70aa91acc0ba c1740a11cd184ffb
+    989554ab58117c21 96b353d70c356160 100ef5f4c28d19f6 e59ea2508e8e8aac
+    6001497c27f362ed bafb25e0f045bfdf 9fb02db9c908f103 40a639fe84c31b27
+  `),
+    // 'K' is the shared derived key
+    K: hex("e68fd0112bfa31dc ffc8e9c96a1cbadb 4c3145978ff35c73 e5bf8d30bbc7499a"),
+    // 'M1' is the client's proof that it knows the shared key
+    M1: hex("27949ec1e0f16256 33436865edb037e2 3eb6bf5cb91873f2 a2729373c2039008"),
+};
+/* inputs_2/expected_2 have leading 0x00 bytes in 'x' and 'u' */
+const inputs_2 = {
+    I: inputs_1.I, P: inputs_1.P,
+    salt: hex("00f1000000000000000000000000000000000000000000000000000000000021"),
+    a: hex(`
+    00f2000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 000000000000000d
+  `),
+    b: hex(`
+    00f3000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000001
+  `),
+};
+const expected_2 = {
+    k: expected_1.k,
+    x: hex("009b2740fb49284d 69cab7c916d449ee d7dcabf41332b8b8 d6928f529bd1a94e"),
+    v: hex(`
+    1cd8b856685672ee 7a5895d897121234 6c17c3472f2696e4 8cdeec5533c06693
+    179bc24802b762bc c1e1f8fc8abe607a f2f44aac9172e7dd 0c0110e45cf3b700
+    f8db153b67fb0e76 3c6710b8c1c26baf c3b67a50652ee0d7 c6045a5c4b51ff33
+    d0135065dca5d6bb 7e150e07414bd572 a954471059c1b466 d0530b0a80bd2d0c
+    f1bedf5abfc05c3c f2736ac40b083dcf 62271e834042ecb0 d4882ddd35403c1e
+    d24bc4ffe274c5f6 be50ec9b85aa0cfa 26d97e086ec45e06 3c29174d3dbe5490
+    1d2a557b7eb46b18 9e17cc721fc098a0 baee2f364a2b409d 49d9372a9625db11
+    acfd74ba7f41285f 9c1916d3caaf5238 852694bbde2a13f7 8fcc92d16658dd04
+  `),
+    // 'B' is the server's public message
+    B: hex(`
+    485d56912c60d9c1 7af15494d4d50006 45eefa2d41f6bcb5 785e08efad0833a1
+    3cb43ee3869e78d4 c2006f42b9741782 a85c90a110cc9a74 4fc2a361d5535966
+    2dc5fa4a8d0c7c0e 63e0cf32a28af655 863dd5d66f550557 eacd3e3e64d90f9f
+    0d757403c9bbfb08 fcc9a35e1cb421d7 3bb93fa72d5b54ed bfa219d3867255ba
+    f96223eef038f085 722b2d14457a5a13 1857a56e66d3011b b5aa7504c4b9a346
+    8d0ebdd817d20105 be06ba261ea16740 723faa097f27ddc2 efe34cf8fe59451a
+    5bb3987d7161085f b8fc28d5cc28c466 6a3ca486ad0ca83d 1984248ac838574e
+    348fb9745ffd1163 f53b5566768a8971 237065d8f6e786be e15107125fb10df1
+  `),
+    // 'A' is the client's public message
+    A: hex(`
+    a4b17836b1e7d6f1 5b9901f644bcdf5e 119e7a861c6ee88d 006d8420a5066f22
+    d9bf5ccf3d380437 0d29d778ec40afcf c88de7bf22ec03fc 6ab12e0dd95d15e3
+    a6249c94393435b0 0d23b1b0439dabed cce1726b2b3cdea2 647c8790d604d87d
+    2ac890cfceec0dbe 434f09a9bc11d984 a1e1990f69956ae0 db6068992ad1715f
+    b4381516da83637a 73de4211908c8f2f f8b3a09e8535acf3 c2b8de4e9a632f89
+    9bfa08cee543b4ea 50d0aca0b3e4fbfa e49ffa2a1ab89a42 8bea928868828501
+    2e8af13fcdd444ad da9ad1d0ab4c2069 91919e5391bd2b1a ab8c2d006baceaf8
+    cdcb555a6b16e844 5b03e09776eba841 7576dac458afbbd5 2902dfb0282bed79
+  `),
+    // 'u' combines the two public messages
+    u: hex("000e4039be3989ad 088dc17d8ade899a 6409e7e57b3e8518 cee1cbc77e1de243"),
+    // 'S' is the shared secret
+    S: hex(`
+    5c7f591d134d19f9 fcedc2b4e3eecd3d 5deadfe7dd42bd59 b1c960516c65ab61
+    d007f8134e0a7ca3 0dd409128ef2c780 6784afd95985c8f3 c2d42cd73d26d315
+    541645d28aefabc9 980c9a6e5714b178 aa69e5321828ca00 f3d10d742776cfe4
+    4b7f5f5c0247addc 0ab0640b49b540ff 9bccea8702e1f996 49448680c00fb484
+    51919224d44236ba 1b1e5cf62a5946bd 637f189ff7b8eba9 7b719f18ad9251f0
+    a81c157604065388 d7bf4abbf774bfb2 d7b95ed8359b0d70 6ff5df0223992c81
+    4aac506e1bace002 d134ed5e41d74f93 a8f410dfe7dc5954 f70b6bafcd0ddfde
+    e75f0058f718ec14 f9bbeb29ff966e00 ddfdd2d38a1c7a68 ac455a57b972d528
+  `),
+    // 'K' is the shared derived key
+    K: hex("b637ede0b7a31c46 b2567e855eb8a7f7 a994937deee76479 62afbe35d6929709"),
+    // 'M1' is the client's proof that it knows the shared key
+    M1: hex("67c83797eb1a3987 e2d48d287e3bd772 d25db2b3cd86ea22 c8cf3ae932a1e45b"),
+};
+/* inputs_3/expected_3 have leading 0x00 bytes in 'x' and 'K' */
+const inputs_3 = {
+    I: inputs_2.I, P: inputs_2.P,
+    salt: hex("00f1000000000000000000000000000000000000000000000000000000000021"),
+    a: hex(`
+    00f2000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 00000000000001a0
+  `),
+    b: inputs_2.b,
+};
+const expected_3 = {
+    k: expected_2.k,
+    x: expected_2.x,
+    v: expected_2.v,
+    B: expected_2.B,
+    A: hex(`
+    87b6da9e4162843b 4d5ee60c403ae3e1 e9fdab64883f13ab 4a44b0718a9ea1b6
+    1ad17c675e0f0395 b37d58a046a2d5ab 1fb665a9777abe80 8077ccf6fd8ec583
+    854eab98deb257d9 10e5bf5cafed4955 2a5cd9927c0979f7 5a21654644000173
+    aef6f2244296439c 10b3c61a03e7146e f6c9c9564b1d2bf5 1ece84d115965f9c
+    c82006bdb7a124da 3304bcc24c8f3724 522b748fb19a0cb6 b60e355acbf649b5
+    40b4972e24077c29 32004a3ad9e59464 2e90a3bfc8de7085 f4a4efc195bd06c9
+    6c7011f3c979eaab 469f06465a5b7239 afaee535aedc5bd2 1a220546e0e6b70b
+    5b6f54db3fea46d5 7ebc7fe46156d793 c59e6290d3cf9bc2 4316528da34f4640
+  `),
+    u: hex("865d0efca6cf17d6 f489e129231f1a48 b20c83ec6581d11f 3a2fa48ea93cd305"),
+    S: hex(`
+    0ae26456e1a0dec1 ce162fb2e5bc7300 3c285e17c0b44f03 7ebbc57f8020ceae
+    5d10a9e6e44eab2a 6915b582ab5f6e7d 16002ce05e524015 e9bc7c56d5131da4
+    d4c4d7c3debaffcd b60e58468bd2c0da 5de95855480190a3 5258c79032001882
+    3d836ca91848c5b6 3ca4265c3329eb44 161af9ce64cf4468 ef0eb88a788a0d07
+    52a69821278c94ae 7193161b5c638b55 bf732e2a5996ccc5 16335f9f3d00dfa9
+    8ac1b1e4971c5417 d34eba1e2a90ed60 a07d1d8be5b9d773 d8f2cb03bfb75994
+    249f7734081aa42d 58dd54f8f725b245 175cf7d102e1086c eba4cfe7e49a2d27
+    ffd6aef7549d402f bfcea78b4f3398ac 9ab1ee199f70acb6 4d2a17e159ff500d
+  `),
+    K: hex("00217598a4008956 4b17196bd43422d6 03a0a88a545b61b3 98c42c9cbcc1d1b3"),
+    M1: hex("96d815ecece1dff4 254cd77517b37b97 65e741c1a57169ab af538e867444ec7f"),
+};
+/* inputs_4/expected_4 have leading 0x00 bytes in 'x' and 'M1' */
+const inputs_4 = {
+    I: inputs_2.I, P: inputs_2.P,
+    salt: hex("00f1000000000000000000000000000000000000000000000000000000000021"),
+    a: hex(`
+    00f2000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000000
+    0000000000000000 0000000000000000 0000000000000000 0000000000000190
+  `),
+    b: inputs_2.b,
+};
+const expected_4 = {
+    k: expected_2.k,
+    x: expected_2.x,
+    v: expected_2.v,
+    B: expected_2.B,
+    A: hex(`
+    4aee66beefb92d12 c8e341814809afcd 9ce083c11abcda70 0c03d5379c429cb9
+    acbde6bb42a628f3 7a2536c864c40f74 f48a9d9356029a8b fe0e10cb9cf5a8a4
+    2e591841f426d281 edf7c9b04112d8ef bf73f9768a4faace ddd351d3e9380bf1
+    dcd0590c7ab50a95 bd23e9617e303bea 6f8fbe8a657b6417 4b60cdf5c059ba67
+    1b6735324ae0c30a e7f3e361de8f273c af7b2513fa048ed1 0106c66ce460c5cc
+    78544c790f5ffcce 378b79d5f02ec361 3a457b03fa0cc39c 80d6fdd645e24f65
+    c690f9478d5b331d c00eef68670edbf3 629fd1a6c85267d2 cbb90f1670e7ba09
+    cf2b5a9b00be8e11 f33e47a1c1f04eca f35bccb61af1116e 4d0f9d475017bad2
+  `),
+    u: hex("d0913eb75b61e15a 87756ffa04d4f967 e492bd0b330a2b11 fe8976aada2bb1ee"),
+    S: hex(`
+    7ba3ce4a3d236b95 3c2d0fee42195c85 081664a44f55b82d a3abf66ac68bdbd7
+    ad82d5ad95090782 5241fb706de8fc58 0a29e4579fbbedf3 0bec0138b3f76e06
+    f9c86b16ad673890 3003ce8c86cb14ea 552db904a20970a9 7d9258a768087d30
+    47a6e77520d32968 de3f64e94cd8c463 92c13e194194745c 8e53a9bb15a79473
+    2a645068970fcdd9 a7c98b4aec19773a 5196802c2e932e71 d3a4a340e6f4fe16
+    9e7ccc687f7246fe 20edeaf88d1125da c812751317f7213c d84f9efe2313d701
+    d4a9bf0242bfe703 26fc19b68c90e83b 59b5cc21886ab602 f8bfa16fb50c3147
+    9aad5e31698abf67 863b7ca6b6ac25a7 09a24d8f94c80bbf 691e38c81beb3c72
+  `),
+    K: hex("bd2a167a93b8496e 68c7e24b37956924 672eb8249d25c281 13984912d5cf27a6"),
+    M1: hex("00cef66a047d506c bf941c236218e583 5343534ae08cf0cd 0fb7980bed242e05"),
+};
+function hexequal(a, b, msg) {
+    assert_1.default.strictEqual(a.length, b.length, msg);
+    assert_1.default.strictEqual(a.toString("hex"), b.toString("hex"), msg);
+}
+function numequal(a, b, msg) {
+    (0, assert_1.default)(a.compareTo(b) === 0, msg);
+}
+function checkVectors(params, inputs, expected) {
+    hexequal(inputs.I, Buffer.from("616e6472c3a9406578616d706c652e6f7267", "hex"), "I");
+    hexequal(srp_1.SRP.computeVerifier(params, inputs.salt, inputs.I, inputs.P), expected.v, "v");
+    const client = new srp_1.SrpClient(params, inputs.salt, inputs.I, inputs.P, inputs.a, false);
+    const server = new srp_1.SrpServer(params, expected.v, inputs.b);
+    // @ts-ignore
+    numequal(client._k, new BigInteger(expected.k.toString("hex"), 16), "k");
+    // @ts-ignore
+    numequal(client._x, new BigInteger(expected.x.toString("hex"), 16), "x");
+    hexequal(client.computeA(), expected.A);
+    hexequal(server.computeB(), expected.B);
+    assert_1.default.throws(() => client.computeM1(), /incomplete protocol/);
+    assert_1.default.throws(() => client.computeK(), /incomplete protocol/);
+    assert_1.default.throws(() => server.checkM1(expected.M1), /incomplete protocol/);
+    assert_1.default.throws(() => server.computeK(), /incomplete protocol/);
+    client.setB(expected.B);
+    // @ts-ignore
+    numequal(client._u, new BigInteger(expected.u.toString("hex"), 16));
+    // @ts-ignore
+    hexequal(client._S, expected.S);
+    hexequal(client.computeM1(), expected.M1);
+    hexequal(client.computeK(), expected.K);
+    server.setA(expected.A);
+    // @ts-ignore
+    numequal(server._u, new BigInteger(expected.u.toString("hex"), 16));
+    // @ts-ignore
+    hexequal(server._S, expected.S);
+    assert_1.default.throws(() => server.checkM1(Buffer.from("notM1")), /client did not use the same password/);
+    server.checkM1(expected.M1); // happy, not throwy
+    hexequal(server.computeK(), expected.K);
+}
+vows_1.default.describe("picl vectors").addBatch({
+    "vectors 1": () => checkVectors(params, inputs_1, expected_1),
+    "vectors 2": () => checkVectors(params, inputs_2, expected_2),
+    "vectors 3": () => checkVectors(params, inputs_3, expected_3),
+    "vectors 4": () => checkVectors(params, inputs_4, expected_4),
+}).export(module);
+//# sourceMappingURL=test_picl_vectors.js.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_picl_vectors.js.map b/node_modules/fast-srp-hap/lib/test/test_picl_vectors.js.map
new file mode 100644
index 0000000..6f0a29d
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_picl_vectors.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"test_picl_vectors.js","sourceRoot":"","sources":["../../src/test/test_picl_vectors.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_rfc_5054.d.ts b/node_modules/fast-srp-hap/lib/test/test_rfc_5054.d.ts
new file mode 100644
index 0000000..d76fecf
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_rfc_5054.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=test_rfc_5054.d.ts.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_rfc_5054.d.ts.map b/node_modules/fast-srp-hap/lib/test/test_rfc_5054.d.ts.map
new file mode 100644
index 0000000..54cf4f6
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_rfc_5054.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"test_rfc_5054.d.ts","sourceRoot":"","sources":["../../src/test/test_rfc_5054.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_rfc_5054.js b/node_modules/fast-srp-hap/lib/test/test_rfc_5054.js
new file mode 100644
index 0000000..6194b9b
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_rfc_5054.js
@@ -0,0 +1,103 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+/* eslint-disable @typescript-eslint/ban-ts-comment */
+// @ts-ignore
+const vows_1 = __importDefault(require("vows"));
+const assert_1 = __importDefault(require("assert"));
+const srp_1 = require("../srp");
+const params = srp_1.SRP.params[1024];
+/*
+ * http://tools.ietf.org/html/rfc5054#appendix-B
+ */
+function hex(h) {
+    return h.split(/\s/).join("");
+}
+const I = Buffer.from("alice");
+const P = Buffer.from("password123");
+const s = Buffer.from("beb25379d1a8581eb5a727673a2441ee", "hex");
+const k_expected = "7556aa045aef2cdd07abaf0f665c3e818913186f";
+const x_expected = "94b7555aabe9127cc58ccf4993db6cf84d16c124";
+const v_expected = hex(`
+  7e273de8 696ffc4f 4e337d05 b4b375be b0dde156 9e8fa00a 9886d812
+  9bada1f1 822223ca 1a605b53 0e379ba4 729fdc59 f105b478 7e5186f5
+  c671085a 1447b52a 48cf1970 b4fb6f84 00bbf4ce bfbb1681 52e08ab5
+  ea53d15c 1aff87b2 b9da6e04 e058ad51 cc72bfc9 033b564e 26480d78
+  e955a5e2 9e7ab245 db2be315 e2099afb
+`);
+const a = Buffer.from("60975527035cf2ad1989806f0407210bc81edc04e2762a56afd529ddda2d4393", "hex");
+const b = Buffer.from("e487cb59d31ac550471e81f00f6928e01dda08e974a004f49e61f5d105284d20", "hex");
+const A_expected = hex(`
+  61d5e490 f6f1b795 47b0704c 436f523d d0e560f0 c64115bb 72557ec4
+  4352e890 3211c046 92272d8b 2d1a5358 a2cf1b6e 0bfcf99f 921530ec
+  8e393561 79eae45e 42ba92ae aced8251 71e1e8b9 af6d9c03 e1327f44
+  be087ef0 6530e69f 66615261 eef54073 ca11cf58 58f0edfd fe15efea
+  b349ef5d 76988a36 72fac47b 0769447b
+`);
+const B_expected = hex(`
+  bd0c6151 2c692c0c b6d041fa 01bb152d 4916a1e7 7af46ae1 05393011
+  baf38964 dc46a067 0dd125b9 5a981652 236f99d9 b681cbf8 7837ec99
+  6c6da044 53728610 d0c6ddb5 8b318885 d7d82c7f 8deb75ce 7bd4fbaa
+  37089e6f 9c6059f3 88838e7a 00030b33 1eb76840 910440b1 b27aaeae
+  eb4012b7 d7665238 a8e3fb00 4b117b58
+`);
+const u_expected = "ce38b9593487da98554ed47d70a7ae5f462ef019";
+const S_expected = hex(`
+  b0dc82ba bcf30674 ae450c02 87745e79 90a3381f 63b387aa f271a10d
+  233861e3 59b48220 f7c4693c 9ae12b0a 6f67809f 0876e2d0 13800d6c
+  41bb59b6 d5979b5c 00a172b4 a2a5903a 0bdcaf8a 709585eb 2afafa8f
+  3499b200 210dcc1f 10eb3394 3cd67fc8 8a2f39a4 be5bec4e c0a3212d
+  c346d7e4 74b29ede 8a469ffe ca686e5a
+`);
+function asHex(num) {
+    return num.toString(16);
+}
+vows_1.default.describe("RFC 5054").addBatch({
+    "Test vectors": {
+        topic() {
+            return srp_1.SRP.computeVerifier(params, s, I, P);
+        },
+        "x"() {
+            const client = new srp_1.SrpClient(params, s, I, P, a, false);
+            // @ts-ignore
+            assert_1.default.strictEqual(asHex(client._x), x_expected);
+        },
+        "V"(v) {
+            assert_1.default.strictEqual(v.toString("hex"), v_expected);
+        },
+        "k"() {
+            const client = new srp_1.SrpClient(params, s, I, P, a, false);
+            // @ts-ignore
+            assert_1.default.strictEqual(asHex(client._k), k_expected);
+        },
+        "A"() {
+            const client = new srp_1.SrpClient(params, s, I, P, a, false);
+            assert_1.default.strictEqual(client.computeA().toString("hex"), A_expected);
+        },
+        "B"(v) {
+            const server = new srp_1.SrpServer(params, v, b);
+            assert_1.default.strictEqual(server.computeB().toString("hex"), B_expected);
+        },
+        "u"() {
+            const client = new srp_1.SrpClient(params, s, I, P, a, false);
+            client.setB(Buffer.from(B_expected, "hex"));
+            // @ts-ignore
+            assert_1.default.strictEqual(asHex(client._u), u_expected);
+        },
+        "S client"() {
+            const client = new srp_1.SrpClient(params, s, I, P, a, false);
+            client.setB(Buffer.from(B_expected, "hex"));
+            // @ts-ignore
+            assert_1.default.strictEqual(client._S.toString("hex"), S_expected);
+        },
+        "S server"(v) {
+            const server = new srp_1.SrpServer(params, v, b);
+            server.setA(Buffer.from(A_expected, "hex"));
+            // @ts-ignore
+            assert_1.default.strictEqual(server._S.toString("hex"), S_expected);
+        },
+    },
+}).export(module);
+//# sourceMappingURL=test_rfc_5054.js.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_rfc_5054.js.map b/node_modules/fast-srp-hap/lib/test/test_rfc_5054.js.map
new file mode 100644
index 0000000..9e0e87c
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_rfc_5054.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"test_rfc_5054.js","sourceRoot":"","sources":["../../src/test/test_rfc_5054.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_srp.d.ts b/node_modules/fast-srp-hap/lib/test/test_srp.d.ts
new file mode 100644
index 0000000..13011cf
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_srp.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=test_srp.d.ts.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_srp.d.ts.map b/node_modules/fast-srp-hap/lib/test/test_srp.d.ts.map
new file mode 100644
index 0000000..861bf6f
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_srp.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"test_srp.d.ts","sourceRoot":"","sources":["../../src/test/test_srp.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_srp.js b/node_modules/fast-srp-hap/lib/test/test_srp.js
new file mode 100644
index 0000000..71754e6
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_srp.js
@@ -0,0 +1,123 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+// eslint-disable-next-line @typescript-eslint/ban-ts-comment
+// @ts-ignore
+const vows_1 = __importDefault(require("vows"));
+const assert_1 = __importDefault(require("assert"));
+const srp_1 = require("../srp");
+const params = srp_1.SRP.params[4096];
+const salt = Buffer.from("salty");
+const identity = Buffer.from("alice");
+const password = Buffer.from("password123");
+(0, assert_1.default)(params, "missing parameters");
+let client, server;
+let a, A;
+let b, B;
+let verifier;
+// let S_client, S_server;
+vows_1.default.describe("srp.js").addBatch({
+    "create Verifier"() {
+        verifier = srp_1.SRP.computeVerifier(params, salt, identity, password);
+        assert_1.default.strictEqual(verifier.toString("hex"), "f0e47f50f5dead8db8d93a279e3b62d6ff50854b31fbd3474a886bef916261717e84dd4fb8b4d27feaa5146db7b1cbbc274fdf96a132b5029c2cd72527427a9b9809d5a4d018252928b4fc343bc17ce63c1859d5806f5466014fc361002d8890aeb4d6316ff37331fc2761be0144c91cdd8e00ed0138c0ce51534d1b9a9ba629d7be34d2742dd4097daabc9ecb7aaad89e53c342b038f1d2adae1f2410b7884a3e9a124c357e421bccd4524467e1922660e0a4460c5f7c38c0877b65f6e32f28296282a93fc11bbabb7bb69bf1b3f9391991d8a86dd05e15000b7e38ba38a536bb0bf59c808ec25e791b8944719488b8087df8bfd7ff20822997a53f6c86f3d45d004476d6303301376bb25a9f94b552cce5ed40de5dd7da8027d754fa5f66738c7e3fc4ef3e20d625df62cbe6e7adfc21e47880d8a6ada37e60370fd4d8fc82672a90c29f2e72f35652649d68348de6f36d0e435c8bd42dd00155d35d501becc0661b43e04cdb2da84ce92b8bf49935d73d75efcbd1176d7bbccc3cc4d4b5fefcc02d478614ee1681d2ff3c711a61a7686eb852ae06fb8227be21fb8802719b1271ba1c02b13bbf0a2c2e459d9bedcc8d1269f6a785cb4563aa791b38fb038269f63f58f47e9051499549789269cc7b8ec7026fc34ba73289c4af829d5a532e723967ce9b6c023ef0fd0cfe37f51f10f19463b6534159a09ddd2f51f3b30033");
+    },
+    "create a and b": {
+        // eslint-disable-next-line @typescript-eslint/no-explicit-any
+        topic() {
+            (async () => {
+                a = await srp_1.SRP.genKey(64);
+                b = await srp_1.SRP.genKey(32);
+                this.callback();
+            })();
+        },
+        "use a and b"() {
+            client = new srp_1.SrpClient(params, salt, identity, password, a, false);
+            // client produces A
+            A = client.computeA();
+            // create server
+            server = new srp_1.SrpServer(params, verifier, b);
+            // server produces B
+            B = server.computeB();
+            // server accepts A
+            server.setA(A);
+            // client doesn't produce M1 too early
+            assert_1.default.throws(() => client.computeM1(), /incomplete protocol/);
+            // client accepts B
+            client.setB(B);
+            // client produces M1 now
+            client.computeM1();
+            // server likes client's M1
+            server.checkM1(client.computeM1());
+            const serverM2 = server.computeM2();
+            // client and server agree on K
+            const client_K = client.computeK();
+            const server_K = server.computeK();
+            assert_1.default.strictEqual(client_K.toString("hex"), server_K.toString("hex"));
+            // server is authentic
+            assert_1.default.doesNotThrow(() => client.checkM2(serverM2), "M2 didn't check");
+        },
+        "server rejects wrong M1"() {
+            const bad_client = new srp_1.SrpClient(params, salt, identity, Buffer.from("bad"), a, false);
+            const server2 = new srp_1.SrpServer(params, verifier, b);
+            bad_client.setB(server2.computeB());
+            assert_1.default.throws(() => server.checkM1(bad_client.computeM1()), /client did not use the same password/);
+        },
+        "server rejects bad A"() {
+            // client's "A" must be 1..N-1 . Reject 0 and N and N+1. We should
+            // reject 2*N too, but our Buffer-length checks reject it before the
+            // number itself is examined.
+            const server2 = new srp_1.SrpServer(params, verifier, b);
+            const Azero = Buffer.alloc(params.N_length_bits / 8);
+            Azero.fill(0);
+            //!      var AN = params.N.toBuffer();
+            //!      var AN1 = params.N.add(1).toBuffer();
+            const AN = Buffer.from(params.N.toString(16), "hex");
+            const AN1 = Buffer.from(params.N.add(1).toString(16), "hex");
+            assert_1.default.throws(() => server2.setA(Azero), /invalid client-supplied "A"/);
+            assert_1.default.throws(() => server2.setA(AN), /invalid client-supplied "A"/);
+            assert_1.default.throws(() => server2.setA(AN1), /invalid client-supplied "A"/);
+        },
+        "client rejects bad B"() {
+            // server's "B" must be 1..N-1 . Reject 0 and N and N+1
+            const client2 = new srp_1.SrpClient(params, salt, identity, password, a, false);
+            const Bzero = Buffer.alloc(params.N_length_bits / 8);
+            Bzero.fill(0, 0, params.N_length_bits / 8);
+            //!      var BN = params.N.toBuffer();
+            //!      var BN1 = params.N.add(1).toBuffer();
+            const BN = Buffer.from(params.N.toString(16), "hex");
+            const BN1 = Buffer.from(params.N.add(1).toString(16), "hex");
+            assert_1.default.throws(() => client2.setB(Bzero), /invalid server-supplied "B"/);
+            assert_1.default.throws(() => client2.setB(BN), /invalid server-supplied "B"/);
+            assert_1.default.throws(() => client2.setB(BN1), /invalid server-supplied "B"/);
+        },
+        "client rejects bad M2"() {
+            client = new srp_1.SrpClient(params, salt, identity, password, a, false);
+            // client produces A
+            A = client.computeA();
+            // create server
+            server = new srp_1.SrpServer(params, verifier, b);
+            // server produces B
+            B = server.computeB();
+            // server accepts A
+            server.setA(A);
+            // client accepts B
+            client.setB(B);
+            // client produces M1 now
+            client.computeM1();
+            // server likes client's M1
+            server.checkM1(client.computeM1());
+            let serverM2 = server.computeM2();
+            // we tamper with the server's M2
+            serverM2 = Buffer.from("a");
+            // client and server agree on K
+            const client_K = client.computeK();
+            const server_K = server.computeK();
+            assert_1.default.strictEqual(client_K.toString("hex"), server_K.toString("hex"));
+            // server is NOT authentic
+            assert_1.default.throws(() => client.checkM2(serverM2), "M2 didn't check");
+        },
+    },
+}).export(module);
+//# sourceMappingURL=test_srp.js.map
\ No newline at end of file
diff --git a/node_modules/fast-srp-hap/lib/test/test_srp.js.map b/node_modules/fast-srp-hap/lib/test/test_srp.js.map
new file mode 100644
index 0000000..28b7330
--- /dev/null
+++ b/node_modules/fast-srp-hap/lib/test/test_srp.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"test_srp.js","sourceRoot":"","sources":["../../src/test/test_srp.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
