import { Form, ActionPanel, Action, showToast, Clipboard } from "@raycast/api";
import { useState, useEffect } from "react";

type Values = {
  text: string;
  style: string;
};

const maps = {
  boldSerif: {
    A: "𝐀",
    B: "𝐁",
    C: "𝐂",
    D: "𝐃",
    E: "𝐄",
    F: "𝐅",
    G: "𝐆",
    H: "𝐇",
    I: "𝐈",
    J: "𝐉",
    K: "𝐊",
    L: "𝐋",
    M: "𝐌",
    N: "𝐍",
    O: "𝐎",
    P: "𝐏",
    Q: "𝐐",
    R: "𝐑",
    S: "𝐒",
    T: "𝐓",
    U: "𝐔",
    V: "𝐕",
    W: "𝐖",
    X: "𝐗",
    Y: "𝐘",
    Z: "𝐙",
    a: "𝐚",
    b: "𝐛",
    c: "𝐜",
    d: "𝐝",
    e: "𝐞",
    f: "𝐟",
    g: "𝐠",
    h: "𝐡",
    i: "𝐢",
    j: "𝐣",
    k: "𝐤",
    l: "𝐥",
    m: "𝐦",
    n: "𝐧",
    o: "𝐨",
    p: "𝐩",
    q: "𝐪",
    r: "𝐫",
    s: "𝐬",
    t: "𝐭",
    u: "𝐮",
    v: "𝐯",
    w: "𝐰",
    x: "𝐱",
    y: "𝐲",
    z: "𝐳",
  },
  italicSerif: {
    A: "𝑨",
    B: "𝑩",
    C: "𝑪",
    D: "𝑫",
    E: "𝑬",
    F: "𝑭",
    G: "𝑮",
    H: "𝑯",
    I: "𝑰",
    J: "𝑱",
    K: "𝑲",
    L: "𝑳",
    M: "𝑴",
    N: "𝑵",
    O: "𝑶",
    P: "𝑷",
    Q: "𝑸",
    R: "𝑹",
    S: "𝑺",
    T: "𝑻",
    U: "𝑼",
    V: "𝑽",
    W: "𝑾",
    X: "𝑿",
    Y: "𝒀",
    Z: "𝒁",
    a: "𝒂",
    b: "𝒃",
    c: "𝒄",
    d: "𝒅",
    e: "𝒆",
    f: "𝒇",
    g: "𝒈",
    h: "𝒉",
    i: "𝒊",
    j: "𝒋",
    k: "𝒌",
    l: "𝒍",
    m: "𝒎",
    n: "𝒏",
    o: "𝒐",
    p: "𝒑",
    q: "𝒒",
    r: "𝒓",
    s: "𝒔",
    t: "𝒕",
    u: "𝒖",
    v: "𝒗",
    w: "𝒘",
    x: "𝒙",
    y: "𝒚",
    z: "𝒛",
  },
  boldSansSerif: {
    A: "𝗔",
    B: "𝗕",
    C: "𝗖",
    D: "𝗗",
    E: "𝗘",
    F: "𝗙",
    G: "𝗚",
    H: "𝗛",
    I: "𝗜",
    J: "𝗝",
    K: "𝗞",
    L: "𝗟",
    M: "𝗠",
    N: "𝗡",
    O: "𝗢",
    P: "𝗣",
    Q: "𝗤",
    R: "𝗥",
    S: "𝗦",
    T: "𝗧",
    U: "𝗨",
    V: "𝗩",
    W: "𝗪",
    X: "𝗫",
    Y: "𝗬",
    Z: "𝗭",
    a: "𝗮",
    b: "𝗯",
    c: "𝗰",
    d: "𝗱",
    e: "𝗲",
    f: "𝗳",
    g: "𝗴",
    h: "𝗵",
    i: "𝗶",
    j: "𝗷",
    k: "𝗸",
    l: "𝗹",
    m: "𝗺",
    n: "𝗻",
    o: "𝗼",
    p: "𝗽",
    q: "𝗾",
    r: "𝗿",
    s: "𝘀",
    t: "𝘁",
    u: "𝘂",
    v: "𝘃",
    w: "𝘄",
    x: "𝘅",
    y: "𝘆",
    z: "𝘇",
  },
  italicSansSerif: {
    A: "𝘼",
    B: "𝘽",
    C: "𝘾",
    D: "𝘿",
    E: "𝙀",
    F: "𝙁",
    G: "𝙂",
    H: "𝙃",
    I: "𝙄",
    J: "𝙅",
    K: "𝙆",
    L: "𝙇",
    M: "𝙈",
    N: "𝙉",
    O: "𝙊",
    P: "𝙋",
    Q: "𝙌",
    R: "𝙍",
    S: "𝙎",
    T: "𝙏",
    U: "𝙐",
    V: "𝙑",
    W: "𝙒",
    X: "𝙓",
    Y: "𝙔",
    Z: "𝙕",
    a: "𝙖",
    b: "𝙗",
    c: "𝙘",
    d: "𝙙",
    e: "𝙚",
    f: "𝙛",
    g: "𝙜",
    h: "𝙝",
    i: "𝙞",
    j: "𝙟",
    k: "𝙠",
    l: "𝙡",
    m: "𝙢",
    n: "𝙣",
    o: "𝙤",
    p: "𝙥",
    q: "𝙦",
    r: "𝙧",
    s: "𝙨",
    t: "𝙩",
    u: "𝙪",
    v: "𝙫",
    w: "𝙬",
    x: "𝙭",
    y: "𝙮",
    z: "𝙯",
  },
  strikethrough: {
    A: "A̶",
    B: "B̶",
    C: "C̶",
    D: "D̶",
    E: "E̶",
    F: "F̶",
    G: "G̶",
    H: "H̶",
    I: "I̶",
    J: "J̶",
    K: "K̶",
    L: "L̶",
    M: "M̶",
    N: "N̶",
    O: "O̶",
    P: "P̶",
    Q: "Q̶",
    R: "R̶",
    S: "S̶",
    T: "T̶",
    U: "U̶",
    V: "V̶",
    W: "W̶",
    X: "X̶",
    Y: "Y̶",
    Z: "Z̶",
    a: "a̶",
    b: "b̶",
    c: "c̶",
    d: "d̶",
    e: "e̶",
    f: "f̶",
    g: "g̶",
    h: "h̶",
    i: "i̶",
    j: "j̶",
    k: "k̶",
    l: "l̶",
    m: "m̶",
    n: "n̶",
    o: "o̶",
    p: "p̶",
    q: "q̶",
    r: "r̶",
    s: "s̶",
    t: "t̶",
    u: "u̶",
    v: "v̶",
    w: "w̶",
    x: "x̶",
    y: "y̶",
    z: "z̶",
  },
  monospace: {
    A: "𝙰",
    B: "𝙱",
    C: "𝙲",
    D: "𝙳",
    E: "𝙴",
    F: "𝙵",
    G: "𝙶",
    H: "𝙷",
    I: "𝙸",
    J: "𝙹",
    K: "𝙺",
    L: "𝙻",
    M: "𝙼",
    N: "𝙽",
    O: "𝙾",
    P: "𝙿",
    Q: "𝚀",
    R: "𝚁",
    S: "𝚂",
    T: "𝚃",
    U: "𝚄",
    V: "𝚅",
    W: "𝚆",
    X: "𝚇",
    Y: "𝚈",
    Z: "𝚉",
    a: "𝚊",
    b: "𝚋",
    c: "𝚌",
    d: "𝚍",
    e: "𝚎",
    f: "𝚏",
    g: "𝚐",
    h: "𝚑",
    i: "𝚒",
    j: "𝚓",
    k: "𝚔",
    l: "𝚕",
    m: "𝚖",
    n: "𝚗",
    o: "𝚘",
    p: "𝚙",
    q: "𝚚",
    r: "𝚛",
    s: "𝚜",
    t: "𝚝",
    u: "𝚞",
    v: "𝚟",
    w: "𝚠",
    x: "𝚡",
    y: "𝚢",
    z: "𝚣",
  },
  //   underline: {
  //   'A': 'A̲', 'B': 'B̲', 'C': 'C̲', 'D': 'D̲', 'E': 'E̲', 'F': 'F̲', 'G': 'G̲',
  //   'H': 'H̲', 'I': 'I̲', 'J': 'J̲', 'K': 'K̲', 'L': 'L̲', 'M': 'M̲', 'N': 'N̲',
  //   'O': 'O̲', 'P': 'P̲', 'Q': 'Q̲', 'R': 'R̲', 'S': 'S̲', 'T': 'T̲', 'U': 'U̲',
  //   'V': 'V̲', 'W': 'W̲', 'X': 'X̲', 'Y': 'Y̲', 'Z': 'Z̲',
  //   'a': 'a̲', 'b': 'b̲', 'c': 'c̲', 'd': 'd̲', 'e': 'e̲', 'f': 'f̲', 'g': 'g̲',
  //   'h': 'h̲', 'i': 'i̲', 'j': 'j̲', 'k': 'k̲', 'l': 'l̲', 'm': 'm̲', 'n': 'n̲',
  //   'o': 'o̲', 'p': 'p̲', 'q': 'q̲', 'r': 'r̲', 's': 's̲', 't': 't̲', 'u': 'u̲',
  //   'v': 'v̲', 'w': 'w̲', 'x': 'x̲', 'y': 'y̲', 'z': 'z̲'
  // },
  // doubleUnderline: {
  //   'A': 'A̳', 'B': 'B̳', 'C': 'C̳', 'D': 'D̳', 'E': 'E̳', 'F': 'F̳', 'G': 'G̳',
  //   'H': 'H̳', 'I': 'I̳', 'J': 'J̳', 'K': 'K̳', 'L': 'L̳', 'M': 'M̳', 'N': 'N̳',
  //   'O': 'O̳', 'P': 'P̳', 'Q': 'Q̳', 'R': 'R̳', 'S': 'S̳', 'T': 'T̳', 'U': 'U̳',
  //   'V': 'V̳', 'W': 'W̳', 'X': 'X̳', 'Y': 'Y̳', 'Z': 'Z̳',
  //   'a': 'a̳', 'b': 'b̳', 'c': 'c̳', 'd': 'd̳', 'e': 'e̳', 'f': 'f̳', 'g': 'g̳',
  //   'h': 'h̳', 'i': 'i̳', 'j': 'j̳', 'k': 'k̳', 'l': 'l̳', 'm': 'm̳', 'n': 'n̳',
  //   'o': 'o̳', 'p': 'p̳', 'q': 'q̳', 'r': 'r̳', 's': 's̳', 't': 't̳', 'u': 'u̳',
  //   'v': 'v̳', 'w': 'w̳', 'x': 'x̳', 'y': 'y̳', 'z': 'z̳'
  // },
  smallCaps: {
    A: "A",
    B: "B",
    C: "C",
    D: "D",
    E: "E",
    F: "F",
    G: "G",
    H: "H",
    I: "I",
    J: "J",
    K: "K",
    L: "L",
    M: "M",
    N: "N",
    O: "O",
    P: "P",
    Q: "Q",
    R: "R",
    S: "S",
    T: "T",
    U: "U",
    V: "V",
    W: "W",
    X: "X",
    Y: "Y",
    Z: "Z",
    a: "ᴀ",
    b: "ʙ",
    c: "ᴄ",
    d: "ᴅ",
    e: "ᴇ",
    f: "ꜰ",
    g: "ɢ",
    h: "ʜ",
    i: "ɪ",
    j: "ᴊ",
    k: "ᴋ",
    l: "ʟ",
    m: "ᴍ",
    n: "ɴ",
    o: "ᴏ",
    p: "ᴘ",
    q: "ꞯ",
    r: "ʀ",
    s: "ꜱ",
    t: "ᴛ",
    u: "ᴜ",
    v: "ᴠ",
    w: "ᴡ",
    x: "x",
    y: "ʏ",
    z: "ᴢ",
  },
};

function convertText(text: string, style: string): string {
  const map = maps[style as keyof typeof maps] as { [key: string]: string };
  return text
    .split("")
    .map((char) => map[char] || char)
    .join("");
}

export default function Command() {
  const [text, setText] = useState("");
  const [style, setStyle] = useState("boldSerif");
  const [preview, setPreview] = useState("");

  useEffect(() => {
    setPreview(convertText(text, style));
  }, [text, style]);

  async function handleSubmit(values: Values) {
    const { text, style } = values;
    const convertedText = convertText(text, style);
    await Clipboard.copy(convertedText);
    showToast({ title: "Converted Text", message: "Text copied to clipboard" });
  }

  return (
    <Form
      actions={
        <ActionPanel>
          <Action.SubmitForm onSubmit={handleSubmit} />
        </ActionPanel>
      }>
      <Form.Description text="Convert text to bold, italic, serif, or sans-serif." />
      <Form.TextField id="text" title="Text" placeholder="Enter text" onChange={setText} />
      <Form.Dropdown id="style" title="Style" onChange={setStyle}>
        <Form.Dropdown.Item value="boldSansSerif" title="𝗦𝗮𝗻𝘀-𝗦𝗲𝗿𝗶𝗳 𝗕𝗼𝗹𝗱" />
        <Form.Dropdown.Item value="italicSansSerif" title="𝘚𝘢𝘯𝘴-𝘚𝘦𝘳𝘪𝘧 𝘐𝘵𝘢𝘭𝘪𝘤" />
        <Form.Dropdown.Item value="boldSerif" title="𝐒𝐞𝐫𝐢𝐟 𝐁𝐨𝐥𝐝" />
        <Form.Dropdown.Item value="italicSerif" title="𝑆𝑒𝑟𝑖𝑓 𝐼𝑡𝑎𝑙𝑖𝑐" />
        <Form.Dropdown.Item value="strikethrough" title="S̶t̶r̶i̶k̶e̶t̶h̶r̶o̶u̶g̶h̶" />
        <Form.Dropdown.Item value="monospace" title="𝙼𝚘𝚗𝚘𝚜𝚙𝚊𝚌𝚎" />
        {/* <Form.Dropdown.Item value="underline" title="U͟n͟d͟e͟r͟l͟i͟n͟e͟" />
<Form.Dropdown.Item value="doubleUnderline" title="D̳o̳u̳b̳l̳e̳ ̳U̳n̳d̳e̳r̳l̳i̳n̳e̳" /> */}
        <Form.Dropdown.Item value="smallCaps" title="Sᴍᴀʟʟ Cᴀᴘs" />
      </Form.Dropdown>
      <Form.Description text={`Preview:\n\n${preview}`} />
    </Form>
  );
}
