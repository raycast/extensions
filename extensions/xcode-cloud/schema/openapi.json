{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "App Store Connect API",
    "version" : "2.3",
    "x-platform" : "app_store_connect_api"
  },
  "servers" : [ {
    "url" : "https://api.appstoreconnect.apple.com/"
  } ],
  "paths" : {
    "/v1/ageRatingDeclarations/{id}" : {
      "patch" : {
        "tags" : [ "AgeRatingDeclarations" ],
        "operationId" : "ageRatingDeclarations-update_instance",
        "requestBody" : {
          "description" : "AgeRatingDeclaration representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AgeRatingDeclarationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AgeRatingDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgeRatingDeclarationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appAvailabilities" : {
      "post" : {
        "tags" : [ "AppAvailabilities" ],
        "operationId" : "appAvailabilities-create_instance",
        "requestBody" : {
          "description" : "AppAvailability representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppAvailabilityCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppAvailability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppAvailabilityResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appAvailabilities/{id}" : {
      "get" : {
        "tags" : [ "AppAvailabilities" ],
        "operationId" : "appAvailabilities-get_instance",
        "parameters" : [ {
          "name" : "fields[appAvailabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appAvailabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "availableInNewTerritories", "availableTerritories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "availableTerritories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppAvailability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppAvailabilityResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCategories" : {
      "get" : {
        "tags" : [ "AppCategories" ],
        "operationId" : "appCategories-get_collection",
        "parameters" : [ {
          "name" : "filter[platforms]",
          "in" : "query",
          "description" : "filter by attribute 'platforms'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "exists[parent]",
          "in" : "query",
          "description" : "filter by existence or non-existence of related 'parent'",
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppCategories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCategories/{id}" : {
      "get" : {
        "tags" : [ "AppCategories" ],
        "operationId" : "appCategories-get_instance",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipAdvancedExperienceImages" : {
      "post" : {
        "tags" : [ "AppClipAdvancedExperienceImages" ],
        "operationId" : "appClipAdvancedExperienceImages-create_instance",
        "requestBody" : {
          "description" : "AppClipAdvancedExperienceImage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceImageCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppClipAdvancedExperienceImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAdvancedExperienceImageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipAdvancedExperienceImages/{id}" : {
      "get" : {
        "tags" : [ "AppClipAdvancedExperienceImages" ],
        "operationId" : "appClipAdvancedExperienceImages-get_instance",
        "parameters" : [ {
          "name" : "fields[appClipAdvancedExperienceImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAdvancedExperienceImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipAdvancedExperienceImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAdvancedExperienceImageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppClipAdvancedExperienceImages" ],
        "operationId" : "appClipAdvancedExperienceImages-update_instance",
        "requestBody" : {
          "description" : "AppClipAdvancedExperienceImage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceImageUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipAdvancedExperienceImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAdvancedExperienceImageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipAdvancedExperiences" : {
      "post" : {
        "tags" : [ "AppClipAdvancedExperiences" ],
        "operationId" : "appClipAdvancedExperiences-create_instance",
        "requestBody" : {
          "description" : "AppClipAdvancedExperience representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppClipAdvancedExperience",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAdvancedExperienceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipAdvancedExperiences/{id}" : {
      "get" : {
        "tags" : [ "AppClipAdvancedExperiences" ],
        "operationId" : "appClipAdvancedExperiences-get_instance",
        "parameters" : [ {
          "name" : "fields[appClipAdvancedExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAdvancedExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "businessCategory", "defaultLanguage", "headerImage", "isPoweredBy", "link", "localizations", "place", "placeStatus", "removed", "status", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClip", "headerImage", "localizations" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[localizations]",
          "in" : "query",
          "description" : "maximum number of related localizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipAdvancedExperience",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAdvancedExperienceResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppClipAdvancedExperiences" ],
        "operationId" : "appClipAdvancedExperiences-update_instance",
        "requestBody" : {
          "description" : "AppClipAdvancedExperience representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipAdvancedExperience",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAdvancedExperienceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipAppStoreReviewDetails" : {
      "post" : {
        "tags" : [ "AppClipAppStoreReviewDetails" ],
        "operationId" : "appClipAppStoreReviewDetails-create_instance",
        "requestBody" : {
          "description" : "AppClipAppStoreReviewDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipAppStoreReviewDetailCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppClipAppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipAppStoreReviewDetails/{id}" : {
      "get" : {
        "tags" : [ "AppClipAppStoreReviewDetails" ],
        "operationId" : "appClipAppStoreReviewDetails-get_instance",
        "parameters" : [ {
          "name" : "fields[appClipAppStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAppStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "invocationUrls" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipAppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppClipAppStoreReviewDetails" ],
        "operationId" : "appClipAppStoreReviewDetails-update_instance",
        "requestBody" : {
          "description" : "AppClipAppStoreReviewDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipAppStoreReviewDetailUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipAppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperienceLocalizations" : {
      "post" : {
        "tags" : [ "AppClipDefaultExperienceLocalizations" ],
        "operationId" : "appClipDefaultExperienceLocalizations-create_instance",
        "requestBody" : {
          "description" : "AppClipDefaultExperienceLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppClipDefaultExperienceLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipDefaultExperienceLocalizations/{id}" : {
      "get" : {
        "tags" : [ "AppClipDefaultExperienceLocalizations" ],
        "operationId" : "appClipDefaultExperienceLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "appClipHeaderImage", "locale", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "appClipHeaderImage" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appClipHeaderImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipHeaderImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperienceLocalization", "assetDeliveryState", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipDefaultExperienceLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppClipDefaultExperienceLocalizations" ],
        "operationId" : "appClipDefaultExperienceLocalizations-update_instance",
        "requestBody" : {
          "description" : "AppClipDefaultExperienceLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipDefaultExperienceLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppClipDefaultExperienceLocalizations" ],
        "operationId" : "appClipDefaultExperienceLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperiences" : {
      "post" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-create_instance",
        "requestBody" : {
          "description" : "AppClipDefaultExperience representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipDefaultExperienceCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppClipDefaultExperience",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipDefaultExperiences/{id}" : {
      "get" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-get_instance",
        "parameters" : [ {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appClipAppStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAppStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "invocationUrls" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "appClipHeaderImage", "locale", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appClipDefaultExperienceLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipDefaultExperience",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-update_instance",
        "requestBody" : {
          "description" : "AppClipDefaultExperience representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipDefaultExperienceUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipDefaultExperience",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipHeaderImages" : {
      "post" : {
        "tags" : [ "AppClipHeaderImages" ],
        "operationId" : "appClipHeaderImages-create_instance",
        "requestBody" : {
          "description" : "AppClipHeaderImage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipHeaderImageCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppClipHeaderImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipHeaderImageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appClipHeaderImages/{id}" : {
      "get" : {
        "tags" : [ "AppClipHeaderImages" ],
        "operationId" : "appClipHeaderImages-get_instance",
        "parameters" : [ {
          "name" : "fields[appClipHeaderImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipHeaderImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperienceLocalization", "assetDeliveryState", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperienceLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipHeaderImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipHeaderImageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppClipHeaderImages" ],
        "operationId" : "appClipHeaderImages-update_instance",
        "requestBody" : {
          "description" : "AppClipHeaderImage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipHeaderImageUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipHeaderImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipHeaderImageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppClipHeaderImages" ],
        "operationId" : "appClipHeaderImages-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClips/{id}" : {
      "get" : {
        "tags" : [ "AppClips" ],
        "operationId" : "appClips-get_instance",
        "parameters" : [ {
          "name" : "fields[appClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipAdvancedExperiences", "appClipDefaultExperiences", "bundleId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipDefaultExperiences" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appClipAdvancedExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAdvancedExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "businessCategory", "defaultLanguage", "headerImage", "isPoweredBy", "link", "localizations", "place", "placeStatus", "removed", "status", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "maximum number of related appClipDefaultExperiences returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClip",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPageLocalizations" : {
      "post" : {
        "tags" : [ "AppCustomProductPageLocalizations" ],
        "operationId" : "appCustomProductPageLocalizations-create_instance",
        "requestBody" : {
          "description" : "AppCustomProductPageLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppCustomProductPageLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCustomProductPageLocalizations/{id}" : {
      "get" : {
        "tags" : [ "AppCustomProductPageLocalizations" ],
        "operationId" : "appCustomProductPageLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appPreviewSets]",
          "in" : "query",
          "description" : "maximum number of related appPreviewSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appScreenshotSets]",
          "in" : "query",
          "description" : "maximum number of related appScreenshotSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCustomProductPageLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppCustomProductPageLocalizations" ],
        "operationId" : "appCustomProductPageLocalizations-update_instance",
        "requestBody" : {
          "description" : "AppCustomProductPageLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCustomProductPageLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppCustomProductPageLocalizations" ],
        "operationId" : "appCustomProductPageLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPageVersions" : {
      "post" : {
        "tags" : [ "AppCustomProductPageVersions" ],
        "operationId" : "appCustomProductPageVersions-create_instance",
        "requestBody" : {
          "description" : "AppCustomProductPageVersion representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppCustomProductPageVersionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppCustomProductPageVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageVersionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCustomProductPageVersions/{id}" : {
      "get" : {
        "tags" : [ "AppCustomProductPageVersions" ],
        "operationId" : "appCustomProductPageVersions-get_instance",
        "parameters" : [ {
          "name" : "fields[appCustomProductPageVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPage", "appCustomProductPageLocalizations", "state", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPage", "appCustomProductPageLocalizations" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appCustomProductPageLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCustomProductPageVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPages" : {
      "post" : {
        "tags" : [ "AppCustomProductPages" ],
        "operationId" : "appCustomProductPages-create_instance",
        "requestBody" : {
          "description" : "AppCustomProductPage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppCustomProductPageCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppCustomProductPage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appCustomProductPages/{id}" : {
      "get" : {
        "tags" : [ "AppCustomProductPages" ],
        "operationId" : "appCustomProductPages-get_instance",
        "parameters" : [ {
          "name" : "fields[appCustomProductPages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appCustomProductPageVersions", "appStoreVersionTemplate", "customProductPageTemplate", "name", "url", "visible" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appCustomProductPageVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appCustomProductPageVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPage", "appCustomProductPageLocalizations", "state", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appCustomProductPageVersions]",
          "in" : "query",
          "description" : "maximum number of related appCustomProductPageVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCustomProductPage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppCustomProductPages" ],
        "operationId" : "appCustomProductPages-update_instance",
        "requestBody" : {
          "description" : "AppCustomProductPage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppCustomProductPageUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCustomProductPage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppCustomProductPages" ],
        "operationId" : "appCustomProductPages-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarationDocuments" : {
      "post" : {
        "tags" : [ "AppEncryptionDeclarationDocuments" ],
        "operationId" : "appEncryptionDeclarationDocuments-create_instance",
        "requestBody" : {
          "description" : "AppEncryptionDeclarationDocument representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEncryptionDeclarationDocumentCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppEncryptionDeclarationDocument",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationDocumentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEncryptionDeclarationDocuments/{id}" : {
      "get" : {
        "tags" : [ "AppEncryptionDeclarationDocuments" ],
        "operationId" : "appEncryptionDeclarationDocuments-get_instance",
        "parameters" : [ {
          "name" : "fields[appEncryptionDeclarationDocuments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEncryptionDeclaration", "assetDeliveryState", "assetToken", "downloadUrl", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEncryptionDeclarationDocument",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationDocumentResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppEncryptionDeclarationDocuments" ],
        "operationId" : "appEncryptionDeclarationDocuments-update_instance",
        "requestBody" : {
          "description" : "AppEncryptionDeclarationDocument representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEncryptionDeclarationDocumentUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEncryptionDeclarationDocument",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationDocumentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations" : {
      "get" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-get_collection",
        "parameters" : [ {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appDescription", "appEncryptionDeclarationDocument", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "createdDate", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclarationDocument", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEncryptionDeclarationDocuments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEncryptionDeclaration", "assetDeliveryState", "assetToken", "downloadUrl", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppEncryptionDeclarations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEncryptionDeclarations/{id}" : {
      "get" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-get_instance",
        "parameters" : [ {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appDescription", "appEncryptionDeclarationDocument", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "createdDate", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclarationDocument", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEncryptionDeclarationDocuments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEncryptionDeclaration", "assetDeliveryState", "assetToken", "downloadUrl", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEncryptionDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEventLocalizations" : {
      "post" : {
        "tags" : [ "AppEventLocalizations" ],
        "operationId" : "appEventLocalizations-create_instance",
        "requestBody" : {
          "description" : "AppEventLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEventLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppEventLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEventLocalizations/{id}" : {
      "get" : {
        "tags" : [ "AppEventLocalizations" ],
        "operationId" : "appEventLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[appEventLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEvent", "appEventScreenshots", "appEventVideoClips", "locale", "longDescription", "name", "shortDescription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEvent", "appEventScreenshots", "appEventVideoClips" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEventScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventAssetType", "appEventLocalization", "assetDeliveryState", "assetToken", "fileName", "fileSize", "imageAsset", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEventVideoClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventVideoClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventAssetType", "appEventLocalization", "assetDeliveryState", "fileName", "fileSize", "previewFrameTimeCode", "previewImage", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appEventScreenshots]",
          "in" : "query",
          "description" : "maximum number of related appEventScreenshots returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appEventVideoClips]",
          "in" : "query",
          "description" : "maximum number of related appEventVideoClips returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEventLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppEventLocalizations" ],
        "operationId" : "appEventLocalizations-update_instance",
        "requestBody" : {
          "description" : "AppEventLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEventLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEventLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppEventLocalizations" ],
        "operationId" : "appEventLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEventScreenshots" : {
      "post" : {
        "tags" : [ "AppEventScreenshots" ],
        "operationId" : "appEventScreenshots-create_instance",
        "requestBody" : {
          "description" : "AppEventScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEventScreenshotCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppEventScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEventScreenshots/{id}" : {
      "get" : {
        "tags" : [ "AppEventScreenshots" ],
        "operationId" : "appEventScreenshots-get_instance",
        "parameters" : [ {
          "name" : "fields[appEventScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventAssetType", "appEventLocalization", "assetDeliveryState", "assetToken", "fileName", "fileSize", "imageAsset", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEventScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppEventScreenshots" ],
        "operationId" : "appEventScreenshots-update_instance",
        "requestBody" : {
          "description" : "AppEventScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEventScreenshotUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEventScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppEventScreenshots" ],
        "operationId" : "appEventScreenshots-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEventVideoClips" : {
      "post" : {
        "tags" : [ "AppEventVideoClips" ],
        "operationId" : "appEventVideoClips-create_instance",
        "requestBody" : {
          "description" : "AppEventVideoClip representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEventVideoClipCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppEventVideoClip",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventVideoClipResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEventVideoClips/{id}" : {
      "get" : {
        "tags" : [ "AppEventVideoClips" ],
        "operationId" : "appEventVideoClips-get_instance",
        "parameters" : [ {
          "name" : "fields[appEventVideoClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventVideoClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventAssetType", "appEventLocalization", "assetDeliveryState", "fileName", "fileSize", "previewFrameTimeCode", "previewImage", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEventVideoClip",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventVideoClipResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppEventVideoClips" ],
        "operationId" : "appEventVideoClips-update_instance",
        "requestBody" : {
          "description" : "AppEventVideoClip representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEventVideoClipUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEventVideoClip",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventVideoClipResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppEventVideoClips" ],
        "operationId" : "appEventVideoClips-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEvents" : {
      "post" : {
        "tags" : [ "AppEvents" ],
        "operationId" : "appEvents-create_instance",
        "requestBody" : {
          "description" : "AppEvent representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEventCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppEvent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appEvents/{id}" : {
      "get" : {
        "tags" : [ "AppEvents" ],
        "operationId" : "appEvents-get_instance",
        "parameters" : [ {
          "name" : "fields[appEvents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEvents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "archivedTerritorySchedules", "badge", "deepLink", "eventState", "localizations", "primaryLocale", "priority", "purchaseRequirement", "purpose", "referenceName", "territorySchedules" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "localizations" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEventLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEvent", "appEventScreenshots", "appEventVideoClips", "locale", "longDescription", "name", "shortDescription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[localizations]",
          "in" : "query",
          "description" : "maximum number of related localizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEvent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppEvents" ],
        "operationId" : "appEvents-update_instance",
        "requestBody" : {
          "description" : "AppEvent representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEventUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEvent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppEvents" ],
        "operationId" : "appEvents-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfoLocalizations" : {
      "post" : {
        "tags" : [ "AppInfoLocalizations" ],
        "operationId" : "appInfoLocalizations-create_instance",
        "requestBody" : {
          "description" : "AppInfoLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppInfoLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppInfoLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appInfoLocalizations/{id}" : {
      "get" : {
        "tags" : [ "AppInfoLocalizations" ],
        "operationId" : "appInfoLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[appInfoLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfoLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo", "locale", "name", "privacyChoicesUrl", "privacyPolicyText", "privacyPolicyUrl", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppInfoLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppInfoLocalizations" ],
        "operationId" : "appInfoLocalizations-update_instance",
        "requestBody" : {
          "description" : "AppInfoLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppInfoLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppInfoLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppInfoLocalizations" ],
        "operationId" : "appInfoLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-get_instance",
        "parameters" : [ {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "brazilAgeRatingV2", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appInfoLocalizations", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "contests", "gambling", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "seventeenPlus", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appInfoLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfoLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo", "locale", "name", "privacyChoicesUrl", "privacyPolicyText", "privacyPolicyUrl", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appInfoLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appInfoLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppInfo",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-update_instance",
        "requestBody" : {
          "description" : "AppInfo representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppInfoUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppInfo",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreOrders" : {
      "post" : {
        "tags" : [ "AppPreOrders" ],
        "operationId" : "appPreOrders-create_instance",
        "requestBody" : {
          "description" : "AppPreOrder representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreOrderCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppPreOrder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreOrderResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPreOrders/{id}" : {
      "get" : {
        "tags" : [ "AppPreOrders" ],
        "operationId" : "appPreOrders-get_instance",
        "parameters" : [ {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreOrder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreOrderResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppPreOrders" ],
        "operationId" : "appPreOrders-update_instance",
        "requestBody" : {
          "description" : "AppPreOrder representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreOrderUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreOrder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreOrderResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppPreOrders" ],
        "operationId" : "appPreOrders-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreviewSets" : {
      "post" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-create_instance",
        "requestBody" : {
          "description" : "AppPreviewSet representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreviewSetCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppPreviewSet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPreviewSets/{id}" : {
      "get" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-get_instance",
        "parameters" : [ {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appPreviews]",
          "in" : "query",
          "description" : "maximum number of related appPreviews returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreviewSet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreviews" : {
      "post" : {
        "tags" : [ "AppPreviews" ],
        "operationId" : "appPreviews-create_instance",
        "requestBody" : {
          "description" : "AppPreview representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreviewCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppPreview",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPreviews/{id}" : {
      "get" : {
        "tags" : [ "AppPreviews" ],
        "operationId" : "appPreviews-get_instance",
        "parameters" : [ {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreview",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppPreviews" ],
        "operationId" : "appPreviews-update_instance",
        "requestBody" : {
          "description" : "AppPreview representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreviewUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreview",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppPreviews" ],
        "operationId" : "appPreviews-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v3/appPricePoints/{id}" : {
      "get" : {
        "tags" : [ "AppPricePoints" ],
        "operationId" : "appPricePoints-get_instance",
        "parameters" : [ {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "equalizations", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPricePoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointV3Response"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPricePoints" : {
      "get" : {
        "tags" : [ "AppPricePoints" ],
        "operationId" : "appPricePoints-get_collection",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "filter[priceTier]",
          "in" : "query",
          "description" : "filter by id(s) of related 'priceTier'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "priceTier", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPricePoints/{id}" : {
      "get" : {
        "tags" : [ "AppPricePoints" ],
        "operationId" : "appPricePoints-get_instance",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "priceTier", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPricePoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceSchedules" : {
      "post" : {
        "tags" : [ "AppPriceSchedules" ],
        "operationId" : "appPriceSchedules-create_instance",
        "requestBody" : {
          "description" : "AppPriceSchedule representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPriceScheduleCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppPriceSchedule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceScheduleResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPriceSchedules/{id}" : {
      "get" : {
        "tags" : [ "AppPriceSchedules" ],
        "operationId" : "appPriceSchedules-get_instance",
        "parameters" : [ {
          "name" : "fields[appPriceSchedules]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceSchedules",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "automaticPrices", "baseTerritory", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "automaticPrices", "baseTerritory", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPricePoint", "endDate", "manual", "startDate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[automaticPrices]",
          "in" : "query",
          "description" : "maximum number of related automaticPrices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[manualPrices]",
          "in" : "query",
          "description" : "maximum number of related manualPrices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPriceSchedule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceScheduleResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceTiers" : {
      "get" : {
        "tags" : [ "AppPriceTiers" ],
        "operationId" : "appPriceTiers-get_collection",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPriceTiers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceTiers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "limit[pricePoints]",
          "in" : "query",
          "description" : "maximum number of related pricePoints returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false,
          "deprecated" : true
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPriceTiers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceTiersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appPriceTiers/{id}" : {
      "get" : {
        "tags" : [ "AppPriceTiers" ],
        "operationId" : "appPriceTiers-get_instance",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "fields[appPriceTiers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceTiers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "limit[pricePoints]",
          "in" : "query",
          "description" : "maximum number of related pricePoints returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false,
          "deprecated" : true
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPriceTier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceTierResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPrices/{id}" : {
      "get" : {
        "tags" : [ "AppPrices" ],
        "operationId" : "appPrices-get_instance",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPrice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appScreenshotSets" : {
      "post" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-create_instance",
        "requestBody" : {
          "description" : "AppScreenshotSet representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppScreenshotSetCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppScreenshotSet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appScreenshotSets/{id}" : {
      "get" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-get_instance",
        "parameters" : [ {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appScreenshots]",
          "in" : "query",
          "description" : "maximum number of related appScreenshots returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppScreenshotSet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appScreenshots" : {
      "post" : {
        "tags" : [ "AppScreenshots" ],
        "operationId" : "appScreenshots-create_instance",
        "requestBody" : {
          "description" : "AppScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppScreenshotCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appScreenshots/{id}" : {
      "get" : {
        "tags" : [ "AppScreenshots" ],
        "operationId" : "appScreenshots-get_instance",
        "parameters" : [ {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppScreenshots" ],
        "operationId" : "appScreenshots-update_instance",
        "requestBody" : {
          "description" : "AppScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppScreenshotUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppScreenshots" ],
        "operationId" : "appScreenshots-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreReviewAttachments" : {
      "post" : {
        "tags" : [ "AppStoreReviewAttachments" ],
        "operationId" : "appStoreReviewAttachments-create_instance",
        "requestBody" : {
          "description" : "AppStoreReviewAttachment representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreReviewAttachmentCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreReviewAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreReviewAttachments/{id}" : {
      "get" : {
        "tags" : [ "AppStoreReviewAttachments" ],
        "operationId" : "appStoreReviewAttachments-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewAttachments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreReviewAttachments" ],
        "operationId" : "appStoreReviewAttachments-update_instance",
        "requestBody" : {
          "description" : "AppStoreReviewAttachment representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreReviewAttachmentUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewAttachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewAttachmentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreReviewAttachments" ],
        "operationId" : "appStoreReviewAttachments-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreReviewDetails" : {
      "post" : {
        "tags" : [ "AppStoreReviewDetails" ],
        "operationId" : "appStoreReviewDetails-create_instance",
        "requestBody" : {
          "description" : "AppStoreReviewDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreReviewDetailCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreReviewDetails/{id}" : {
      "get" : {
        "tags" : [ "AppStoreReviewDetails" ],
        "operationId" : "appStoreReviewDetails-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewAttachments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "maximum number of related appStoreReviewAttachments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreReviewDetails" ],
        "operationId" : "appStoreReviewDetails-update_instance",
        "requestBody" : {
          "description" : "AppStoreReviewDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreReviewDetailUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations" : {
      "post" : {
        "tags" : [ "AppStoreVersionExperimentTreatmentLocalizations" ],
        "operationId" : "appStoreVersionExperimentTreatmentLocalizations-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionExperimentTreatmentLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionExperimentTreatmentLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}" : {
      "get" : {
        "tags" : [ "AppStoreVersionExperimentTreatmentLocalizations" ],
        "operationId" : "appStoreVersionExperimentTreatmentLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appPreviewSets]",
          "in" : "query",
          "description" : "maximum number of related appPreviewSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appScreenshotSets]",
          "in" : "query",
          "description" : "maximum number of related appScreenshotSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionExperimentTreatmentLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersionExperimentTreatmentLocalizations" ],
        "operationId" : "appStoreVersionExperimentTreatmentLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperimentTreatments" : {
      "post" : {
        "tags" : [ "AppStoreVersionExperimentTreatments" ],
        "operationId" : "appStoreVersionExperimentTreatments-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionExperimentTreatment representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionExperimentTreatment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionExperimentTreatments/{id}" : {
      "get" : {
        "tags" : [ "AppStoreVersionExperimentTreatments" ],
        "operationId" : "appStoreVersionExperimentTreatments-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreVersionExperimentTreatments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appIcon", "appIconName", "appStoreVersionExperiment", "appStoreVersionExperimentTreatmentLocalizations", "name", "promotedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersionExperiment", "appStoreVersionExperimentTreatmentLocalizations" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionExperimentTreatmentLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionExperimentTreatment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersionExperimentTreatments" ],
        "operationId" : "appStoreVersionExperimentTreatments-update_instance",
        "requestBody" : {
          "description" : "AppStoreVersionExperimentTreatment representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionExperimentTreatment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersionExperimentTreatments" ],
        "operationId" : "appStoreVersionExperimentTreatments-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperiments" : {
      "post" : {
        "tags" : [ "AppStoreVersionExperiments" ],
        "operationId" : "appStoreVersionExperiments-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionExperiment representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionExperiment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionExperiments/{id}" : {
      "get" : {
        "tags" : [ "AppStoreVersionExperiments" ],
        "operationId" : "appStoreVersionExperiments-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperiments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments", "endDate", "name", "reviewRequired", "startDate", "started", "state", "trafficProportion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appIcon", "appIconName", "appStoreVersionExperiment", "appStoreVersionExperimentTreatmentLocalizations", "name", "promotedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appStoreVersionExperimentTreatments]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionExperimentTreatments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionExperiment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersionExperiments" ],
        "operationId" : "appStoreVersionExperiments-update_instance",
        "requestBody" : {
          "description" : "AppStoreVersionExperiment representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionExperiment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersionExperiments" ],
        "operationId" : "appStoreVersionExperiments-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionLocalizations" : {
      "post" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionLocalizations/{id}" : {
      "get" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appPreviewSets]",
          "in" : "query",
          "description" : "maximum number of related appPreviewSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appScreenshotSets]",
          "in" : "query",
          "description" : "maximum number of related appScreenshotSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-update_instance",
        "requestBody" : {
          "description" : "AppStoreVersionLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionPhasedReleases" : {
      "post" : {
        "tags" : [ "AppStoreVersionPhasedReleases" ],
        "operationId" : "appStoreVersionPhasedReleases-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionPhasedRelease representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionPhasedRelease",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionPhasedReleases/{id}" : {
      "patch" : {
        "tags" : [ "AppStoreVersionPhasedReleases" ],
        "operationId" : "appStoreVersionPhasedReleases-update_instance",
        "requestBody" : {
          "description" : "AppStoreVersionPhasedRelease representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionPhasedRelease",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersionPhasedReleases" ],
        "operationId" : "appStoreVersionPhasedReleases-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionPromotions" : {
      "post" : {
        "tags" : [ "AppStoreVersionPromotions" ],
        "operationId" : "appStoreVersionPromotions-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionPromotion representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionPromotionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionPromotion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionPromotionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionReleaseRequests" : {
      "post" : {
        "tags" : [ "AppStoreVersionReleaseRequests" ],
        "operationId" : "appStoreVersionReleaseRequests-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersionReleaseRequest representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionReleaseRequestCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionReleaseRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionReleaseRequestResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionSubmissions" : {
      "post" : {
        "tags" : [ "AppStoreVersionSubmissions" ],
        "operationId" : "appStoreVersionSubmissions-create_instance",
        "deprecated" : true,
        "requestBody" : {
          "description" : "AppStoreVersionSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionSubmissionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersionSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersionSubmissions/{id}" : {
      "delete" : {
        "tags" : [ "AppStoreVersionSubmissions" ],
        "operationId" : "appStoreVersionSubmissions-delete_instance",
        "deprecated" : true,
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions" : {
      "post" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-create_instance",
        "requestBody" : {
          "description" : "AppStoreVersion representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single AppStoreVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appStoreVersions/{id}" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-get_instance",
        "parameters" : [ {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "routingAppCoverage" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperiments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments", "endDate", "name", "reviewRequired", "startDate", "started", "state", "trafficProportion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "contests", "gambling", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "seventeenPlus", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[customerReviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "body", "createdDate", "rating", "response", "reviewerNickname", "territory", "title" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionPhasedReleases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionPhasedReleases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "currentDayNumber", "phasedReleaseState", "startDate", "totalPauseDuration" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionExperiments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-update_instance",
        "requestBody" : {
          "description" : "AppStoreVersion representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-get_collection",
        "parameters" : [ {
          "name" : "filter[appStoreVersions.appStoreState]",
          "in" : "query",
          "description" : "filter by attribute 'appStoreVersions.appStoreState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACCEPTED", "DEVELOPER_REMOVED_FROM_SALE", "DEVELOPER_REJECTED", "IN_REVIEW", "INVALID_BINARY", "METADATA_REJECTED", "PENDING_APPLE_RELEASE", "PENDING_CONTRACT", "PENDING_DEVELOPER_RELEASE", "PREPARE_FOR_SUBMISSION", "PREORDER_READY_FOR_SALE", "PROCESSING_FOR_APP_STORE", "READY_FOR_REVIEW", "READY_FOR_SALE", "REJECTED", "REMOVED_FROM_SALE", "WAITING_FOR_EXPORT_COMPLIANCE", "WAITING_FOR_REVIEW", "REPLACED_WITH_NEW_VERSION" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[appStoreVersions.platform]",
          "in" : "query",
          "description" : "filter by attribute 'appStoreVersions.platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[bundleId]",
          "in" : "query",
          "description" : "filter by attribute 'bundleId'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[sku]",
          "in" : "query",
          "description" : "filter by attribute 'sku'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[appStoreVersions]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersions'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "exists[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "filter by existence or non-existence of related 'gameCenterEnabledVersions'",
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "-bundleId", "name", "-name", "sku", "-sku" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClips", "appCustomProductPages", "appEvents", "appInfos", "appStoreVersions", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "builds", "ciProduct", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "preOrder", "preReleaseVersions", "prices", "promotedPurchases", "reviewSubmissions", "subscriptionGracePeriod", "subscriptionGroups" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPriceSchedules]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceSchedules",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "automaticPrices", "baseTerritory", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[reviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "canceled", "items", "platform", "state", "submitted", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appAvailabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appAvailabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "availableInNewTerritories", "availableTerritories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[customerReviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "body", "createdDate", "rating", "response", "reviewerNickname", "territory", "title" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEvents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEvents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "archivedTerritorySchedules", "badge", "deepLink", "eventState", "localizations", "primaryLocale", "priority", "purchaseRequirement", "purpose", "referenceName", "territorySchedules" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipAdvancedExperiences", "appClipDefaultExperiences", "bundleId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "brazilAgeRatingV2", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "equalizations", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "referenceName", "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionGracePeriods]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGracePeriods",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "optIn", "renewalType", "sandboxOptIn" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appCustomProductPages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appCustomProductPageVersions", "appStoreVersionTemplate", "customProductPageTemplate", "name", "url", "visible" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[perfPowerMetrics]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type perfPowerMetrics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceType", "metricType", "platform" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appClips]",
          "in" : "query",
          "description" : "maximum number of related appClips returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appCustomProductPages]",
          "in" : "query",
          "description" : "maximum number of related appCustomProductPages returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appEvents]",
          "in" : "query",
          "description" : "maximum number of related appEvents returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appInfos]",
          "in" : "query",
          "description" : "maximum number of related appInfos returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appStoreVersions]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaAppLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaAppLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "maximum number of related gameCenterEnabledVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[inAppPurchases]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchases returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[inAppPurchasesV2]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchasesV2 returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[preReleaseVersions]",
          "in" : "query",
          "description" : "maximum number of related preReleaseVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "limit[promotedPurchases]",
          "in" : "query",
          "description" : "maximum number of related promotedPurchases returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[reviewSubmissions]",
          "in" : "query",
          "description" : "maximum number of related reviewSubmissions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[subscriptionGroups]",
          "in" : "query",
          "description" : "maximum number of related subscriptionGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Apps",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/apps/{id}" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-get_instance",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClips", "appCustomProductPages", "appEvents", "appInfos", "appStoreVersions", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "builds", "ciProduct", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "preOrder", "preReleaseVersions", "prices", "promotedPurchases", "reviewSubmissions", "subscriptionGracePeriod", "subscriptionGroups" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPriceSchedules]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceSchedules",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "automaticPrices", "baseTerritory", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[reviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "canceled", "items", "platform", "state", "submitted", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appAvailabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appAvailabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "availableInNewTerritories", "availableTerritories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[customerReviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "body", "createdDate", "rating", "response", "reviewerNickname", "territory", "title" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEvents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEvents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "archivedTerritorySchedules", "badge", "deepLink", "eventState", "localizations", "primaryLocale", "priority", "purchaseRequirement", "purpose", "referenceName", "territorySchedules" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipAdvancedExperiences", "appClipDefaultExperiences", "bundleId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "brazilAgeRatingV2", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "equalizations", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "referenceName", "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionGracePeriods]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGracePeriods",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "optIn", "renewalType", "sandboxOptIn" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appCustomProductPages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appCustomProductPageVersions", "appStoreVersionTemplate", "customProductPageTemplate", "name", "url", "visible" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "fields[perfPowerMetrics]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type perfPowerMetrics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceType", "metricType", "platform" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[appClips]",
          "in" : "query",
          "description" : "maximum number of related appClips returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appCustomProductPages]",
          "in" : "query",
          "description" : "maximum number of related appCustomProductPages returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appEvents]",
          "in" : "query",
          "description" : "maximum number of related appEvents returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appInfos]",
          "in" : "query",
          "description" : "maximum number of related appInfos returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[appStoreVersions]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaAppLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaAppLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "maximum number of related gameCenterEnabledVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[inAppPurchases]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchases returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[inAppPurchasesV2]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchasesV2 returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[preReleaseVersions]",
          "in" : "query",
          "description" : "maximum number of related preReleaseVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false,
          "deprecated" : true
        }, {
          "name" : "limit[promotedPurchases]",
          "in" : "query",
          "description" : "maximum number of related promotedPurchases returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[reviewSubmissions]",
          "in" : "query",
          "description" : "maximum number of related reviewSubmissions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[subscriptionGroups]",
          "in" : "query",
          "description" : "maximum number of related subscriptionGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-update_instance",
        "requestBody" : {
          "description" : "App representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppClipInvocationLocalizations" : {
      "post" : {
        "tags" : [ "BetaAppClipInvocationLocalizations" ],
        "operationId" : "betaAppClipInvocationLocalizations-create_instance",
        "requestBody" : {
          "description" : "BetaAppClipInvocationLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppClipInvocationLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaAppClipInvocationLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppClipInvocationLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppClipInvocationLocalizations/{id}" : {
      "patch" : {
        "tags" : [ "BetaAppClipInvocationLocalizations" ],
        "operationId" : "betaAppClipInvocationLocalizations-update_instance",
        "requestBody" : {
          "description" : "BetaAppClipInvocationLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppClipInvocationLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppClipInvocationLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppClipInvocationLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaAppClipInvocationLocalizations" ],
        "operationId" : "betaAppClipInvocationLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppClipInvocations" : {
      "post" : {
        "tags" : [ "BetaAppClipInvocations" ],
        "operationId" : "betaAppClipInvocations-create_instance",
        "requestBody" : {
          "description" : "BetaAppClipInvocation representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppClipInvocationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaAppClipInvocation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppClipInvocationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppClipInvocations/{id}" : {
      "get" : {
        "tags" : [ "BetaAppClipInvocations" ],
        "operationId" : "betaAppClipInvocations-get_instance",
        "parameters" : [ {
          "name" : "fields[betaAppClipInvocations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppClipInvocations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaAppClipInvocationLocalizations", "buildBundle", "url" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaAppClipInvocationLocalizations" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaAppClipInvocationLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaAppClipInvocationLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppClipInvocation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppClipInvocationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaAppClipInvocations" ],
        "operationId" : "betaAppClipInvocations-update_instance",
        "requestBody" : {
          "description" : "BetaAppClipInvocation representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppClipInvocationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppClipInvocation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppClipInvocationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaAppClipInvocations" ],
        "operationId" : "betaAppClipInvocations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppLocalizations" : {
      "get" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-get_collection",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaAppLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-create_instance",
        "requestBody" : {
          "description" : "BetaAppLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaAppLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppLocalizations/{id}" : {
      "get" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-update_instance",
        "requestBody" : {
          "description" : "BetaAppLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewDetails" : {
      "get" : {
        "tags" : [ "BetaAppReviewDetails" ],
        "operationId" : "betaAppReviewDetails-get_collection",
        "parameters" : [ {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaAppReviewDetails",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppReviewDetails/{id}" : {
      "get" : {
        "tags" : [ "BetaAppReviewDetails" ],
        "operationId" : "betaAppReviewDetails-get_instance",
        "parameters" : [ {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaAppReviewDetails" ],
        "operationId" : "betaAppReviewDetails-update_instance",
        "requestBody" : {
          "description" : "BetaAppReviewDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppReviewDetailUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewSubmissions" : {
      "get" : {
        "tags" : [ "BetaAppReviewSubmissions" ],
        "operationId" : "betaAppReviewSubmissions-get_collection",
        "parameters" : [ {
          "name" : "filter[betaReviewState]",
          "in" : "query",
          "description" : "filter by attribute 'betaReviewState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[build]",
          "in" : "query",
          "description" : "filter by id(s) of related 'build'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaAppReviewSubmissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewSubmissionsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaAppReviewSubmissions" ],
        "operationId" : "betaAppReviewSubmissions-create_instance",
        "requestBody" : {
          "description" : "BetaAppReviewSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaAppReviewSubmissionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaAppReviewSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaAppReviewSubmissions/{id}" : {
      "get" : {
        "tags" : [ "BetaAppReviewSubmissions" ],
        "operationId" : "betaAppReviewSubmissions-get_instance",
        "parameters" : [ {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppReviewSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaBuildLocalizations" : {
      "get" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-get_collection",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[build]",
          "in" : "query",
          "description" : "filter by id(s) of related 'build'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaBuildLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-create_instance",
        "requestBody" : {
          "description" : "BetaBuildLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaBuildLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaBuildLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaBuildLocalizations/{id}" : {
      "get" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaBuildLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-update_instance",
        "requestBody" : {
          "description" : "BetaBuildLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaBuildLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaBuildLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-get_collection",
        "parameters" : [ {
          "name" : "filter[isInternalGroup]",
          "in" : "query",
          "description" : "filter by attribute 'isInternalGroup'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[publicLink]",
          "in" : "query",
          "description" : "filter by attribute 'publicLink'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[publicLinkEnabled]",
          "in" : "query",
          "description" : "filter by attribute 'publicLinkEnabled'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[publicLinkLimitEnabled]",
          "in" : "query",
          "description" : "filter by attribute 'publicLinkLimitEnabled'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "createdDate", "-createdDate", "name", "-name", "publicLinkEnabled", "-publicLinkEnabled", "publicLinkLimit", "-publicLinkLimit" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaTesters]",
          "in" : "query",
          "description" : "maximum number of related betaTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 1000
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaGroups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-create_instance",
        "requestBody" : {
          "description" : "BetaGroup representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaGroups/{id}" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-get_instance",
        "parameters" : [ {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaTesters]",
          "in" : "query",
          "description" : "maximum number of related betaTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 1000
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-update_instance",
        "requestBody" : {
          "description" : "BetaGroup representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaLicenseAgreements" : {
      "get" : {
        "tags" : [ "BetaLicenseAgreements" ],
        "operationId" : "betaLicenseAgreements-get_collection",
        "parameters" : [ {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaLicenseAgreements",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaLicenseAgreementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaLicenseAgreements/{id}" : {
      "get" : {
        "tags" : [ "BetaLicenseAgreements" ],
        "operationId" : "betaLicenseAgreements-get_instance",
        "parameters" : [ {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BetaLicenseAgreements" ],
        "operationId" : "betaLicenseAgreements-update_instance",
        "requestBody" : {
          "description" : "BetaLicenseAgreement representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaLicenseAgreementUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaLicenseAgreementResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesterInvitations" : {
      "post" : {
        "tags" : [ "BetaTesterInvitations" ],
        "operationId" : "betaTesterInvitations-create_instance",
        "requestBody" : {
          "description" : "BetaTesterInvitation representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterInvitationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaTesterInvitation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterInvitationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaTesters" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-get_collection",
        "parameters" : [ {
          "name" : "filter[email]",
          "in" : "query",
          "description" : "filter by attribute 'email'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[firstName]",
          "in" : "query",
          "description" : "filter by attribute 'firstName'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[inviteType]",
          "in" : "query",
          "description" : "filter by attribute 'inviteType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EMAIL", "PUBLIC_LINK" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[lastName]",
          "in" : "query",
          "description" : "filter by attribute 'lastName'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[apps]",
          "in" : "query",
          "description" : "filter by id(s) of related 'apps'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[betaGroups]",
          "in" : "query",
          "description" : "filter by id(s) of related 'betaGroups'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "email", "-email", "firstName", "-firstName", "inviteType", "-inviteType", "lastName", "-lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[apps]",
          "in" : "query",
          "description" : "maximum number of related apps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaTesters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTestersResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-create_instance",
        "requestBody" : {
          "description" : "BetaTester representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BetaTester",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/betaTesters/{id}" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-get_instance",
        "parameters" : [ {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[apps]",
          "in" : "query",
          "description" : "maximum number of related apps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaTester",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted for future completion"
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBetaDetails" : {
      "get" : {
        "tags" : [ "BuildBetaDetails" ],
        "operationId" : "buildBetaDetails-get_collection",
        "parameters" : [ {
          "name" : "filter[build]",
          "in" : "query",
          "description" : "filter by id(s) of related 'build'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BuildBetaDetails",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/buildBetaDetails/{id}" : {
      "get" : {
        "tags" : [ "BuildBetaDetails" ],
        "operationId" : "buildBetaDetails-get_instance",
        "parameters" : [ {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BuildBetaDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BuildBetaDetails" ],
        "operationId" : "buildBetaDetails-update_instance",
        "requestBody" : {
          "description" : "BuildBetaDetail representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBetaDetailUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BuildBetaDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBetaNotifications" : {
      "post" : {
        "tags" : [ "BuildBetaNotifications" ],
        "operationId" : "buildBetaNotifications-create_instance",
        "requestBody" : {
          "description" : "BuildBetaNotification representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBetaNotificationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BuildBetaNotification",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaNotificationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/builds" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-get_collection",
        "parameters" : [ {
          "name" : "filter[betaAppReviewSubmission.betaReviewState]",
          "in" : "query",
          "description" : "filter by attribute 'betaAppReviewSubmission.betaReviewState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[buildAudienceType]",
          "in" : "query",
          "description" : "filter by attribute 'buildAudienceType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "INTERNAL_ONLY", "APP_STORE_ELIGIBLE" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[expired]",
          "in" : "query",
          "description" : "filter by attribute 'expired'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[preReleaseVersion.platform]",
          "in" : "query",
          "description" : "filter by attribute 'preReleaseVersion.platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[preReleaseVersion.version]",
          "in" : "query",
          "description" : "filter by attribute 'preReleaseVersion.version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[processingState]",
          "in" : "query",
          "description" : "filter by attribute 'processingState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PROCESSING", "FAILED", "INVALID", "VALID" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[usesNonExemptEncryption]",
          "in" : "query",
          "description" : "filter by attribute 'usesNonExemptEncryption'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[version]",
          "in" : "query",
          "description" : "filter by attribute 'version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[appStoreVersion]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersion'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[betaGroups]",
          "in" : "query",
          "description" : "filter by id(s) of related 'betaGroups'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[preReleaseVersion]",
          "in" : "query",
          "description" : "filter by id(s) of related 'preReleaseVersion'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "preReleaseVersion", "-preReleaseVersion", "uploadedDate", "-uploadedDate", "version", "-version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "buildBundles", "icons", "individualTesters", "preReleaseVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[diagnosticSignatures]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type diagnosticSignatures",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "diagnosticType", "logs", "signature", "weight" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildIcons]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildIcons",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "iconAsset", "iconType", "name" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appDescription", "appEncryptionDeclarationDocument", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "createdDate", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[perfPowerMetrics]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type perfPowerMetrics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceType", "metricType", "platform" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaBuildLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaBuildLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[buildBundles]",
          "in" : "query",
          "description" : "maximum number of related buildBundles returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[icons]",
          "in" : "query",
          "description" : "maximum number of related icons returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[individualTesters]",
          "in" : "query",
          "description" : "maximum number of related individualTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Builds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/builds/{id}" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-get_instance",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "buildBundles", "icons", "individualTesters", "preReleaseVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[diagnosticSignatures]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type diagnosticSignatures",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "diagnosticType", "logs", "signature", "weight" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildIcons]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildIcons",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "iconAsset", "iconType", "name" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appDescription", "appEncryptionDeclarationDocument", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "createdDate", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[perfPowerMetrics]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type perfPowerMetrics",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceType", "metricType", "platform" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[betaBuildLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaBuildLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[buildBundles]",
          "in" : "query",
          "description" : "maximum number of related buildBundles returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[icons]",
          "in" : "query",
          "description" : "maximum number of related icons returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[individualTesters]",
          "in" : "query",
          "description" : "maximum number of related individualTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Build",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-update_instance",
        "requestBody" : {
          "description" : "Build representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Build",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIdCapabilities" : {
      "post" : {
        "tags" : [ "BundleIdCapabilities" ],
        "operationId" : "bundleIdCapabilities-create_instance",
        "requestBody" : {
          "description" : "BundleIdCapability representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleIdCapabilityCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BundleIdCapability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdCapabilityResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/bundleIdCapabilities/{id}" : {
      "patch" : {
        "tags" : [ "BundleIdCapabilities" ],
        "operationId" : "bundleIdCapabilities-update_instance",
        "requestBody" : {
          "description" : "BundleIdCapability representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleIdCapabilityUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BundleIdCapability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdCapabilityResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BundleIdCapabilities" ],
        "operationId" : "bundleIdCapabilities-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-get_collection",
        "parameters" : [ {
          "name" : "filter[identifier]",
          "in" : "query",
          "description" : "filter by attribute 'identifier'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[seedId]",
          "in" : "query",
          "description" : "filter by attribute 'seedId'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "-id", "identifier", "-identifier", "name", "-name", "platform", "-platform", "seedId", "-seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "profiles" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIdCapabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIdCapabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "capabilityType", "settings" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[bundleIdCapabilities]",
          "in" : "query",
          "description" : "maximum number of related bundleIdCapabilities returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[profiles]",
          "in" : "query",
          "description" : "maximum number of related profiles returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BundleIds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-create_instance",
        "requestBody" : {
          "description" : "BundleId representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleIdCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single BundleId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/bundleIds/{id}" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-get_instance",
        "parameters" : [ {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "profiles" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIdCapabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIdCapabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "capabilityType", "settings" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[bundleIdCapabilities]",
          "in" : "query",
          "description" : "maximum number of related bundleIdCapabilities returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[profiles]",
          "in" : "query",
          "description" : "maximum number of related profiles returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BundleId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-update_instance",
        "requestBody" : {
          "description" : "BundleId representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BundleIdUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BundleId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/certificates" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "operationId" : "certificates-get_collection",
        "parameters" : [ {
          "name" : "filter[certificateType]",
          "in" : "query",
          "description" : "filter by attribute 'certificateType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS_DEVELOPMENT", "IOS_DISTRIBUTION", "MAC_APP_DISTRIBUTION", "MAC_INSTALLER_DISTRIBUTION", "MAC_APP_DEVELOPMENT", "DEVELOPER_ID_KEXT", "DEVELOPER_ID_APPLICATION", "DEVELOPMENT", "DISTRIBUTION", "PASS_TYPE_ID", "PASS_TYPE_ID_WITH_NFC" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[displayName]",
          "in" : "query",
          "description" : "filter by attribute 'displayName'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[serialNumber]",
          "in" : "query",
          "description" : "filter by attribute 'serialNumber'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateType", "-certificateType", "displayName", "-displayName", "id", "-id", "serialNumber", "-serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Certificates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificatesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Certificates" ],
        "operationId" : "certificates-create_instance",
        "requestBody" : {
          "description" : "Certificate representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single Certificate",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/certificates/{id}" : {
      "get" : {
        "tags" : [ "Certificates" ],
        "operationId" : "certificates-get_instance",
        "parameters" : [ {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Certificate",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Certificates" ],
        "operationId" : "certificates-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciArtifacts/{id}" : {
      "get" : {
        "tags" : [ "CiArtifacts" ],
        "operationId" : "ciArtifacts-get_instance",
        "parameters" : [ {
          "name" : "fields[ciArtifacts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciArtifacts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "downloadUrl", "fileName", "fileSize", "fileType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiArtifact",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiArtifactResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}" : {
      "get" : {
        "tags" : [ "CiBuildActions" ],
        "operationId" : "ciBuildActions-get_instance",
        "parameters" : [ {
          "name" : "fields[ciBuildActions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildActions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actionType", "artifacts", "buildRun", "completionStatus", "executionProgress", "finishedDate", "isRequiredToPass", "issueCounts", "issues", "name", "startedDate", "testResults" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "buildRun" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciIssues]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciIssues",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "category", "fileSource", "issueType", "message" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciTestResults]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciTestResults",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "className", "destinationTestResults", "fileSource", "message", "name", "status" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciArtifacts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciArtifacts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "downloadUrl", "fileName", "fileSize", "fileType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiBuildAction",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiBuildActionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildRuns" : {
      "post" : {
        "tags" : [ "CiBuildRuns" ],
        "operationId" : "ciBuildRuns-create_instance",
        "requestBody" : {
          "description" : "CiBuildRun representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CiBuildRunCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single CiBuildRun",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiBuildRunResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciBuildRuns/{id}" : {
      "get" : {
        "tags" : [ "CiBuildRuns" ],
        "operationId" : "ciBuildRuns-get_instance",
        "parameters" : [ {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "builds", "destinationBranch", "product", "pullRequest", "sourceBranchOrTag", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciBuildActions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildActions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actionType", "artifacts", "buildRun", "completionStatus", "executionProgress", "finishedDate", "isRequiredToPass", "issueCounts", "issues", "name", "startedDate", "testResults" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiBuildRun",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiBuildRunResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciIssues/{id}" : {
      "get" : {
        "tags" : [ "CiIssues" ],
        "operationId" : "ciIssues-get_instance",
        "parameters" : [ {
          "name" : "fields[ciIssues]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciIssues",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "category", "fileSource", "issueType", "message" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiIssue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiIssueResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciMacOsVersions" : {
      "get" : {
        "tags" : [ "CiMacOsVersions" ],
        "operationId" : "ciMacOsVersions-get_collection",
        "parameters" : [ {
          "name" : "fields[ciMacOsVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciMacOsVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "version", "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciXcodeVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciXcodeVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions", "name", "testDestinations", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[xcodeVersions]",
          "in" : "query",
          "description" : "maximum number of related xcodeVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiMacOsVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiMacOsVersionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciMacOsVersions/{id}" : {
      "get" : {
        "tags" : [ "CiMacOsVersions" ],
        "operationId" : "ciMacOsVersions-get_instance",
        "parameters" : [ {
          "name" : "fields[ciMacOsVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciMacOsVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "version", "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciXcodeVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciXcodeVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions", "name", "testDestinations", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[xcodeVersions]",
          "in" : "query",
          "description" : "maximum number of related xcodeVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiMacOsVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiMacOsVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts" : {
      "get" : {
        "tags" : [ "CiProducts" ],
        "operationId" : "ciProducts-get_collection",
        "parameters" : [ {
          "name" : "filter[productType]",
          "in" : "query",
          "description" : "filter by attribute 'productType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "APP", "FRAMEWORK" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleId", "primaryRepositories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciWorkflows]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciWorkflows",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "branchStartCondition", "buildRuns", "clean", "containerFilePath", "description", "isEnabled", "isLockedForEditing", "lastModifiedDate", "macOsVersion", "name", "product", "pullRequestStartCondition", "repository", "scheduledStartCondition", "tagStartCondition", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[primaryRepositories]",
          "in" : "query",
          "description" : "maximum number of related primaryRepositories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiProducts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiProductsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciProducts/{id}" : {
      "get" : {
        "tags" : [ "CiProducts" ],
        "operationId" : "ciProducts-get_instance",
        "parameters" : [ {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleId", "primaryRepositories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciWorkflows]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciWorkflows",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "branchStartCondition", "buildRuns", "clean", "containerFilePath", "description", "isEnabled", "isLockedForEditing", "lastModifiedDate", "macOsVersion", "name", "product", "pullRequestStartCondition", "repository", "scheduledStartCondition", "tagStartCondition", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[primaryRepositories]",
          "in" : "query",
          "description" : "maximum number of related primaryRepositories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiProduct",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiProductResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CiProducts" ],
        "operationId" : "ciProducts-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciTestResults/{id}" : {
      "get" : {
        "tags" : [ "CiTestResults" ],
        "operationId" : "ciTestResults-get_instance",
        "parameters" : [ {
          "name" : "fields[ciTestResults]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciTestResults",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "className", "destinationTestResults", "fileSource", "message", "name", "status" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiTestResult",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiTestResultResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciWorkflows" : {
      "post" : {
        "tags" : [ "CiWorkflows" ],
        "operationId" : "ciWorkflows-create_instance",
        "requestBody" : {
          "description" : "CiWorkflow representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CiWorkflowCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single CiWorkflow",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiWorkflowResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciWorkflows/{id}" : {
      "get" : {
        "tags" : [ "CiWorkflows" ],
        "operationId" : "ciWorkflows-get_instance",
        "parameters" : [ {
          "name" : "fields[ciWorkflows]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciWorkflows",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "branchStartCondition", "buildRuns", "clean", "containerFilePath", "description", "isEnabled", "isLockedForEditing", "lastModifiedDate", "macOsVersion", "name", "product", "pullRequestStartCondition", "repository", "scheduledStartCondition", "tagStartCondition", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersion", "product", "repository", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiWorkflow",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiWorkflowResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "CiWorkflows" ],
        "operationId" : "ciWorkflows-update_instance",
        "requestBody" : {
          "description" : "CiWorkflow representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CiWorkflowUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiWorkflow",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiWorkflowResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CiWorkflows" ],
        "operationId" : "ciWorkflows-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciXcodeVersions" : {
      "get" : {
        "tags" : [ "CiXcodeVersions" ],
        "operationId" : "ciXcodeVersions-get_collection",
        "parameters" : [ {
          "name" : "fields[ciXcodeVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciXcodeVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions", "name", "testDestinations", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciMacOsVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciMacOsVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "version", "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[macOsVersions]",
          "in" : "query",
          "description" : "maximum number of related macOsVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiXcodeVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiXcodeVersionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ciXcodeVersions/{id}" : {
      "get" : {
        "tags" : [ "CiXcodeVersions" ],
        "operationId" : "ciXcodeVersions-get_instance",
        "parameters" : [ {
          "name" : "fields[ciXcodeVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciXcodeVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions", "name", "testDestinations", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[ciMacOsVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciMacOsVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "version", "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[macOsVersions]",
          "in" : "query",
          "description" : "maximum number of related macOsVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiXcodeVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiXcodeVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/customerReviewResponses" : {
      "post" : {
        "tags" : [ "CustomerReviewResponses" ],
        "operationId" : "customerReviewResponses-create_instance",
        "requestBody" : {
          "description" : "CustomerReviewResponse representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomerReviewResponseV1CreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single CustomerReviewResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerReviewResponseV1Response"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customerReviewResponses/{id}" : {
      "get" : {
        "tags" : [ "CustomerReviewResponses" ],
        "operationId" : "customerReviewResponses-get_instance",
        "parameters" : [ {
          "name" : "fields[customerReviewResponses]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviewResponses",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "lastModifiedDate", "responseBody", "review", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "review" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CustomerReviewResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerReviewResponseV1Response"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CustomerReviewResponses" ],
        "operationId" : "customerReviewResponses-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/customerReviews/{id}" : {
      "get" : {
        "tags" : [ "CustomerReviews" ],
        "operationId" : "customerReviews-get_instance",
        "parameters" : [ {
          "name" : "fields[customerReviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "body", "createdDate", "rating", "response", "reviewerNickname", "territory", "title" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "response" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[customerReviewResponses]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviewResponses",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "lastModifiedDate", "responseBody", "review", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CustomerReview",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerReviewResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/devices" : {
      "get" : {
        "tags" : [ "Devices" ],
        "operationId" : "devices-get_collection",
        "parameters" : [ {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[status]",
          "in" : "query",
          "description" : "filter by attribute 'status'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ENABLED", "DISABLED" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[udid]",
          "in" : "query",
          "description" : "filter by attribute 'udid'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "-id", "name", "-name", "platform", "-platform", "status", "-status", "udid", "-udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Devices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Devices" ],
        "operationId" : "devices-create_instance",
        "requestBody" : {
          "description" : "Device representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single Device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/devices/{id}" : {
      "get" : {
        "tags" : [ "Devices" ],
        "operationId" : "devices-get_instance",
        "parameters" : [ {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Devices" ],
        "operationId" : "devices-update_instance",
        "requestBody" : {
          "description" : "Device representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Device",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/endUserLicenseAgreements" : {
      "post" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-create_instance",
        "requestBody" : {
          "description" : "EndUserLicenseAgreement representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EndUserLicenseAgreementCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single EndUserLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/endUserLicenseAgreements/{id}" : {
      "get" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-get_instance",
        "parameters" : [ {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[territories]",
          "in" : "query",
          "description" : "maximum number of related territories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single EndUserLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-update_instance",
        "requestBody" : {
          "description" : "EndUserLicenseAgreement representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EndUserLicenseAgreementUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single EndUserLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/financeReports" : {
      "get" : {
        "tags" : [ "FinanceReports" ],
        "operationId" : "financeReports-get_collection",
        "parameters" : [ {
          "name" : "filter[regionCode]",
          "in" : "query",
          "description" : "filter by attribute 'regionCode'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[reportDate]",
          "in" : "query",
          "description" : "filter by attribute 'reportDate'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[reportType]",
          "in" : "query",
          "description" : "filter by attribute 'reportType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "FINANCIAL", "FINANCE_DETAIL" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[vendorNumber]",
          "in" : "query",
          "description" : "filter by attribute 'vendorNumber'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of FinanceReports",
            "content" : {
              "application/a-gzip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gzip"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseAppStoreReviewScreenshots" : {
      "post" : {
        "tags" : [ "InAppPurchaseAppStoreReviewScreenshots" ],
        "operationId" : "inAppPurchaseAppStoreReviewScreenshots-create_instance",
        "requestBody" : {
          "description" : "InAppPurchaseAppStoreReviewScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single InAppPurchaseAppStoreReviewScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseAppStoreReviewScreenshots/{id}" : {
      "get" : {
        "tags" : [ "InAppPurchaseAppStoreReviewScreenshots" ],
        "operationId" : "inAppPurchaseAppStoreReviewScreenshots-get_instance",
        "parameters" : [ {
          "name" : "fields[inAppPurchaseAppStoreReviewScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "inAppPurchaseV2", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchaseAppStoreReviewScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "InAppPurchaseAppStoreReviewScreenshots" ],
        "operationId" : "inAppPurchaseAppStoreReviewScreenshots-update_instance",
        "requestBody" : {
          "description" : "InAppPurchaseAppStoreReviewScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchaseAppStoreReviewScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "InAppPurchaseAppStoreReviewScreenshots" ],
        "operationId" : "inAppPurchaseAppStoreReviewScreenshots-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchaseAvailabilities" : {
      "post" : {
        "tags" : [ "InAppPurchaseAvailabilities" ],
        "operationId" : "inAppPurchaseAvailabilities-create_instance",
        "requestBody" : {
          "description" : "InAppPurchaseAvailability representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchaseAvailabilityCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single InAppPurchaseAvailability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseAvailabilityResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseAvailabilities/{id}" : {
      "get" : {
        "tags" : [ "InAppPurchaseAvailabilities" ],
        "operationId" : "inAppPurchaseAvailabilities-get_instance",
        "parameters" : [ {
          "name" : "fields[inAppPurchaseAvailabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseAvailabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "availableInNewTerritories", "availableTerritories", "inAppPurchase" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "availableTerritories" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchaseAvailability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseAvailabilityResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchaseContents/{id}" : {
      "get" : {
        "tags" : [ "InAppPurchaseContents" ],
        "operationId" : "inAppPurchaseContents-get_instance",
        "parameters" : [ {
          "name" : "fields[inAppPurchaseContents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseContents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "fileName", "fileSize", "inAppPurchaseV2", "lastModifiedDate", "url" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchaseContent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseContentResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchaseLocalizations" : {
      "post" : {
        "tags" : [ "InAppPurchaseLocalizations" ],
        "operationId" : "inAppPurchaseLocalizations-create_instance",
        "requestBody" : {
          "description" : "InAppPurchaseLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchaseLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single InAppPurchaseLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchaseLocalizations/{id}" : {
      "get" : {
        "tags" : [ "InAppPurchaseLocalizations" ],
        "operationId" : "inAppPurchaseLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[inAppPurchaseLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "description", "inAppPurchaseV2", "locale", "name", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchaseLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "InAppPurchaseLocalizations" ],
        "operationId" : "inAppPurchaseLocalizations-update_instance",
        "requestBody" : {
          "description" : "InAppPurchaseLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchaseLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchaseLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "InAppPurchaseLocalizations" ],
        "operationId" : "inAppPurchaseLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchasePriceSchedules" : {
      "post" : {
        "tags" : [ "InAppPurchasePriceSchedules" ],
        "operationId" : "inAppPurchasePriceSchedules-create_instance",
        "requestBody" : {
          "description" : "InAppPurchasePriceSchedule representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchasePriceScheduleCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single InAppPurchasePriceSchedule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasePriceScheduleResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchasePriceSchedules/{id}" : {
      "get" : {
        "tags" : [ "InAppPurchasePriceSchedules" ],
        "operationId" : "inAppPurchasePriceSchedules-get_instance",
        "parameters" : [ {
          "name" : "fields[inAppPurchasePriceSchedules]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePriceSchedules",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "automaticPrices", "baseTerritory", "inAppPurchase", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "automaticPrices", "baseTerritory", "inAppPurchase", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchasePrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "endDate", "inAppPurchasePricePoint", "inAppPurchaseV2", "manual", "startDate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[automaticPrices]",
          "in" : "query",
          "description" : "maximum number of related automaticPrices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[manualPrices]",
          "in" : "query",
          "description" : "maximum number of related manualPrices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchasePriceSchedule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasePriceScheduleResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchaseSubmissions" : {
      "post" : {
        "tags" : [ "InAppPurchaseSubmissions" ],
        "operationId" : "inAppPurchaseSubmissions-create_instance",
        "requestBody" : {
          "description" : "InAppPurchaseSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchaseSubmissionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single InAppPurchaseSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/inAppPurchases/{id}" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-get_instance",
        "parameters" : [ {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[apps]",
          "in" : "query",
          "description" : "maximum number of related apps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases" : {
      "post" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-create_instance",
        "requestBody" : {
          "description" : "InAppPurchase representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchaseV2CreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single InAppPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseV2Response"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/inAppPurchases/{id}" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-get_instance",
        "parameters" : [ {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "content", "iapPriceSchedule", "inAppPurchaseLocalizations", "pricePoints", "promotedPurchase" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchaseAppStoreReviewScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "inAppPurchaseV2", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchasePricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "inAppPurchaseV2", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchaseLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "description", "inAppPurchaseV2", "locale", "name", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchasePriceSchedules]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePriceSchedules",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "automaticPrices", "baseTerritory", "inAppPurchase", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[inAppPurchaseContents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseContents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "fileName", "fileSize", "inAppPurchaseV2", "lastModifiedDate", "url" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[inAppPurchaseLocalizations]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchaseLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[pricePoints]",
          "in" : "query",
          "description" : "maximum number of related pricePoints returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 8000
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseV2Response"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-update_instance",
        "requestBody" : {
          "description" : "InAppPurchase representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InAppPurchaseV2UpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseV2Response"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/preReleaseVersions" : {
      "get" : {
        "tags" : [ "PreReleaseVersions" ],
        "operationId" : "preReleaseVersions-get_collection",
        "parameters" : [ {
          "name" : "filter[builds.expired]",
          "in" : "query",
          "description" : "filter by attribute 'builds.expired'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds.processingState]",
          "in" : "query",
          "description" : "filter by attribute 'builds.processingState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PROCESSING", "FAILED", "INVALID", "VALID" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds.version]",
          "in" : "query",
          "description" : "filter by attribute 'builds.version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[version]",
          "in" : "query",
          "description" : "filter by attribute 'version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "version", "-version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of PreReleaseVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreReleaseVersionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/preReleaseVersions/{id}" : {
      "get" : {
        "tags" : [ "PreReleaseVersions" ],
        "operationId" : "preReleaseVersions-get_instance",
        "parameters" : [ {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PrereleaseVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrereleaseVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-get_collection",
        "parameters" : [ {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[profileState]",
          "in" : "query",
          "description" : "filter by attribute 'profileState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACTIVE", "INVALID" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[profileType]",
          "in" : "query",
          "description" : "filter by attribute 'profileType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS_APP_DEVELOPMENT", "IOS_APP_STORE", "IOS_APP_ADHOC", "IOS_APP_INHOUSE", "MAC_APP_DEVELOPMENT", "MAC_APP_STORE", "MAC_APP_DIRECT", "TVOS_APP_DEVELOPMENT", "TVOS_APP_STORE", "TVOS_APP_ADHOC", "TVOS_APP_INHOUSE", "MAC_CATALYST_APP_DEVELOPMENT", "MAC_CATALYST_APP_STORE", "MAC_CATALYST_APP_DIRECT" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "-id", "name", "-name", "profileState", "-profileState", "profileType", "-profileType" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "devices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[certificates]",
          "in" : "query",
          "description" : "maximum number of related certificates returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[devices]",
          "in" : "query",
          "description" : "maximum number of related devices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Profiles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfilesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-create_instance",
        "requestBody" : {
          "description" : "Profile representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProfileCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single Profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/profiles/{id}" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-get_instance",
        "parameters" : [ {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "devices" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[certificates]",
          "in" : "query",
          "description" : "maximum number of related certificates returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[devices]",
          "in" : "query",
          "description" : "maximum number of related devices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Profile",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfileResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/promotedPurchaseImages" : {
      "post" : {
        "tags" : [ "PromotedPurchaseImages" ],
        "operationId" : "promotedPurchaseImages-create_instance",
        "requestBody" : {
          "description" : "PromotedPurchaseImage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PromotedPurchaseImageCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single PromotedPurchaseImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseImageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotedPurchaseImages/{id}" : {
      "get" : {
        "tags" : [ "PromotedPurchaseImages" ],
        "operationId" : "promotedPurchaseImages-get_instance",
        "parameters" : [ {
          "name" : "fields[promotedPurchaseImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchaseImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "promotedPurchase", "sourceFileChecksum", "state", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "promotedPurchase" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PromotedPurchaseImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseImageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PromotedPurchaseImages" ],
        "operationId" : "promotedPurchaseImages-update_instance",
        "requestBody" : {
          "description" : "PromotedPurchaseImage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PromotedPurchaseImageUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PromotedPurchaseImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseImageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PromotedPurchaseImages" ],
        "operationId" : "promotedPurchaseImages-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/promotedPurchases" : {
      "post" : {
        "tags" : [ "PromotedPurchases" ],
        "operationId" : "promotedPurchases-create_instance",
        "requestBody" : {
          "description" : "PromotedPurchase representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PromotedPurchaseCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single PromotedPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/promotedPurchases/{id}" : {
      "get" : {
        "tags" : [ "PromotedPurchases" ],
        "operationId" : "promotedPurchases-get_instance",
        "parameters" : [ {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2", "promotionImages", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[promotedPurchaseImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchaseImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "promotedPurchase", "sourceFileChecksum", "state", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[promotionImages]",
          "in" : "query",
          "description" : "maximum number of related promotionImages returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PromotedPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "PromotedPurchases" ],
        "operationId" : "promotedPurchases-update_instance",
        "requestBody" : {
          "description" : "PromotedPurchase representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PromotedPurchaseUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PromotedPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PromotedPurchases" ],
        "operationId" : "promotedPurchases-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/reviewSubmissionItems" : {
      "post" : {
        "tags" : [ "ReviewSubmissionItems" ],
        "operationId" : "reviewSubmissionItems-create_instance",
        "requestBody" : {
          "description" : "ReviewSubmissionItem representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewSubmissionItemCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single ReviewSubmissionItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewSubmissionItemResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reviewSubmissionItems/{id}" : {
      "patch" : {
        "tags" : [ "ReviewSubmissionItems" ],
        "operationId" : "reviewSubmissionItems-update_instance",
        "requestBody" : {
          "description" : "ReviewSubmissionItem representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewSubmissionItemUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single ReviewSubmissionItem",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewSubmissionItemResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ReviewSubmissionItems" ],
        "operationId" : "reviewSubmissionItems-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/reviewSubmissions" : {
      "get" : {
        "tags" : [ "ReviewSubmissions" ],
        "operationId" : "reviewSubmissions-get_collection",
        "parameters" : [ {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "description" : "filter by attribute 'state'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "UNRESOLVED_ISSUES", "CANCELING", "COMPLETING", "COMPLETE" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "fields[reviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "canceled", "items", "platform", "state", "submitted", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "items" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[reviewSubmissionItems]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissionItems",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appEvent", "appStoreVersion", "appStoreVersionExperiment", "removed", "resolved", "reviewSubmission", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[items]",
          "in" : "query",
          "description" : "maximum number of related items returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ReviewSubmissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewSubmissionsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ReviewSubmissions" ],
        "operationId" : "reviewSubmissions-create_instance",
        "requestBody" : {
          "description" : "ReviewSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewSubmissionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single ReviewSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reviewSubmissions/{id}" : {
      "get" : {
        "tags" : [ "ReviewSubmissions" ],
        "operationId" : "reviewSubmissions-get_instance",
        "parameters" : [ {
          "name" : "fields[reviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "canceled", "items", "platform", "state", "submitted", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "items" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[reviewSubmissionItems]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissionItems",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appEvent", "appStoreVersion", "appStoreVersionExperiment", "removed", "resolved", "reviewSubmission", "state" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[items]",
          "in" : "query",
          "description" : "maximum number of related items returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single ReviewSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "ReviewSubmissions" ],
        "operationId" : "reviewSubmissions-update_instance",
        "requestBody" : {
          "description" : "ReviewSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReviewSubmissionUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single ReviewSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/routingAppCoverages" : {
      "post" : {
        "tags" : [ "RoutingAppCoverages" ],
        "operationId" : "routingAppCoverages-create_instance",
        "requestBody" : {
          "description" : "RoutingAppCoverage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoutingAppCoverageCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single RoutingAppCoverage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/routingAppCoverages/{id}" : {
      "get" : {
        "tags" : [ "RoutingAppCoverages" ],
        "operationId" : "routingAppCoverages-get_instance",
        "parameters" : [ {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single RoutingAppCoverage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "RoutingAppCoverages" ],
        "operationId" : "routingAppCoverages-update_instance",
        "requestBody" : {
          "description" : "RoutingAppCoverage representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RoutingAppCoverageUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single RoutingAppCoverage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RoutingAppCoverages" ],
        "operationId" : "routingAppCoverages-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/salesReports" : {
      "get" : {
        "tags" : [ "SalesReports" ],
        "operationId" : "salesReports-get_collection",
        "parameters" : [ {
          "name" : "filter[frequency]",
          "in" : "query",
          "description" : "filter by attribute 'frequency'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DAILY", "WEEKLY", "MONTHLY", "YEARLY" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[reportDate]",
          "in" : "query",
          "description" : "filter by attribute 'reportDate'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[reportSubType]",
          "in" : "query",
          "description" : "filter by attribute 'reportSubType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SUMMARY", "DETAILED" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[reportType]",
          "in" : "query",
          "description" : "filter by attribute 'reportType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SALES", "PRE_ORDER", "NEWSSTAND", "SUBSCRIPTION", "SUBSCRIPTION_EVENT", "SUBSCRIBER", "SUBSCRIPTION_OFFER_CODE_REDEMPTION" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[vendorNumber]",
          "in" : "query",
          "description" : "filter by attribute 'vendorNumber'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : true
        }, {
          "name" : "filter[version]",
          "in" : "query",
          "description" : "filter by attribute 'version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SalesReports",
            "content" : {
              "application/a-gzip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/gzip"
                }
              }
            }
          }
        }
      }
    },
    "/v2/sandboxTesters" : {
      "get" : {
        "tags" : [ "SandboxTesters" ],
        "operationId" : "sandboxTesters-get_collection",
        "parameters" : [ {
          "name" : "fields[sandboxTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type sandboxTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "acAccountName", "applePayCompatible", "firstName", "interruptPurchases", "lastName", "subscriptionRenewalRate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SandboxTesters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SandboxTestersV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/v2/sandboxTesters/{id}" : {
      "patch" : {
        "tags" : [ "SandboxTesters" ],
        "operationId" : "sandboxTesters-update_instance",
        "requestBody" : {
          "description" : "SandboxTester representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SandboxTesterV2UpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SandboxTester",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SandboxTesterV2Response"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/sandboxTestersClearPurchaseHistoryRequest" : {
      "post" : {
        "tags" : [ "SandboxTestersClearPurchaseHistoryRequest" ],
        "operationId" : "sandboxTestersClearPurchaseHistoryRequest-create_instance",
        "requestBody" : {
          "description" : "SandboxTestersClearPurchaseHistoryRequest representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SandboxTestersClearPurchaseHistoryRequestV2CreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SandboxTestersClearPurchaseHistoryRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SandboxTestersClearPurchaseHistoryRequestV2Response"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scmGitReferences/{id}" : {
      "get" : {
        "tags" : [ "ScmGitReferences" ],
        "operationId" : "scmGitReferences-get_instance",
        "parameters" : [ {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repository" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single ScmGitReference",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmGitReferenceResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmProviders" : {
      "get" : {
        "tags" : [ "ScmProviders" ],
        "operationId" : "scmProviders-get_collection",
        "parameters" : [ {
          "name" : "fields[scmProviders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmProviders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repositories", "scmProviderType", "url" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ScmProviders",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmProvidersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scmProviders/{id}" : {
      "get" : {
        "tags" : [ "ScmProviders" ],
        "operationId" : "scmProviders-get_instance",
        "parameters" : [ {
          "name" : "fields[scmProviders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmProviders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repositories", "scmProviderType", "url" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single ScmProvider",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmProviderResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmPullRequests/{id}" : {
      "get" : {
        "tags" : [ "ScmPullRequests" ],
        "operationId" : "scmPullRequests-get_instance",
        "parameters" : [ {
          "name" : "fields[scmPullRequests]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmPullRequests",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "destinationBranchName", "destinationRepositoryName", "destinationRepositoryOwner", "isClosed", "isCrossRepository", "number", "repository", "sourceBranchName", "sourceRepositoryName", "sourceRepositoryOwner", "title", "webUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repository" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single ScmPullRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmPullRequestResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmRepositories" : {
      "get" : {
        "tags" : [ "ScmRepositories" ],
        "operationId" : "scmRepositories-get_collection",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "scmProvider" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmPullRequests]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmPullRequests",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "destinationBranchName", "destinationRepositoryName", "destinationRepositoryOwner", "isClosed", "isCrossRepository", "number", "repository", "sourceBranchName", "sourceRepositoryName", "sourceRepositoryOwner", "title", "webUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ScmRepositories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmRepositoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scmRepositories/{id}" : {
      "get" : {
        "tags" : [ "ScmRepositories" ],
        "operationId" : "scmRepositories-get_instance",
        "parameters" : [ {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "scmProvider" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[scmPullRequests]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmPullRequests",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "destinationBranchName", "destinationRepositoryName", "destinationRepositoryOwner", "isClosed", "isCrossRepository", "number", "repository", "sourceBranchName", "sourceRepositoryName", "sourceRepositoryOwner", "title", "webUrl" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single ScmRepository",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmRepositoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionAppStoreReviewScreenshots" : {
      "post" : {
        "tags" : [ "SubscriptionAppStoreReviewScreenshots" ],
        "operationId" : "subscriptionAppStoreReviewScreenshots-create_instance",
        "requestBody" : {
          "description" : "SubscriptionAppStoreReviewScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshotCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionAppStoreReviewScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionAppStoreReviewScreenshots/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionAppStoreReviewScreenshots" ],
        "operationId" : "subscriptionAppStoreReviewScreenshots-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionAppStoreReviewScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionAppStoreReviewScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "subscription", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionAppStoreReviewScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionAppStoreReviewScreenshots" ],
        "operationId" : "subscriptionAppStoreReviewScreenshots-update_instance",
        "requestBody" : {
          "description" : "SubscriptionAppStoreReviewScreenshot representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshotUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionAppStoreReviewScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshotResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SubscriptionAppStoreReviewScreenshots" ],
        "operationId" : "subscriptionAppStoreReviewScreenshots-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionAvailabilities" : {
      "post" : {
        "tags" : [ "SubscriptionAvailabilities" ],
        "operationId" : "subscriptionAvailabilities-create_instance",
        "requestBody" : {
          "description" : "SubscriptionAvailability representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionAvailabilityCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionAvailability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionAvailabilityResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionAvailabilities/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionAvailabilities" ],
        "operationId" : "subscriptionAvailabilities-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionAvailabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionAvailabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "availableInNewTerritories", "availableTerritories", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "availableTerritories", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionAvailability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionAvailabilityResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionGracePeriods/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionGracePeriods" ],
        "operationId" : "subscriptionGracePeriods-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionGracePeriods]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGracePeriods",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "optIn", "renewalType", "sandboxOptIn" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionGracePeriod",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGracePeriodResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionGracePeriods" ],
        "operationId" : "subscriptionGracePeriods-update_instance",
        "requestBody" : {
          "description" : "SubscriptionGracePeriod representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionGracePeriodUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionGracePeriod",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGracePeriodResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionGroupLocalizations" : {
      "post" : {
        "tags" : [ "SubscriptionGroupLocalizations" ],
        "operationId" : "subscriptionGroupLocalizations-create_instance",
        "requestBody" : {
          "description" : "SubscriptionGroupLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionGroupLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionGroupLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionGroupLocalizations/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionGroupLocalizations" ],
        "operationId" : "subscriptionGroupLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionGroupLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroupLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customAppName", "locale", "name", "state", "subscriptionGroup" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionGroup" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionGroupLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionGroupLocalizations" ],
        "operationId" : "subscriptionGroupLocalizations-update_instance",
        "requestBody" : {
          "description" : "SubscriptionGroupLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionGroupLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionGroupLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SubscriptionGroupLocalizations" ],
        "operationId" : "subscriptionGroupLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionGroupSubmissions" : {
      "post" : {
        "tags" : [ "SubscriptionGroupSubmissions" ],
        "operationId" : "subscriptionGroupSubmissions-create_instance",
        "requestBody" : {
          "description" : "SubscriptionGroupSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionGroupSubmissionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionGroupSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionGroups" : {
      "post" : {
        "tags" : [ "SubscriptionGroups" ],
        "operationId" : "subscriptionGroups-create_instance",
        "requestBody" : {
          "description" : "SubscriptionGroup representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionGroupCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionGroups/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionGroups" ],
        "operationId" : "subscriptionGroups-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "referenceName", "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionGroupLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroupLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customAppName", "locale", "name", "state", "subscriptionGroup" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[subscriptionGroupLocalizations]",
          "in" : "query",
          "description" : "maximum number of related subscriptionGroupLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[subscriptions]",
          "in" : "query",
          "description" : "maximum number of related subscriptions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionGroups" ],
        "operationId" : "subscriptionGroups-update_instance",
        "requestBody" : {
          "description" : "SubscriptionGroup representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionGroupUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SubscriptionGroups" ],
        "operationId" : "subscriptionGroups-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionIntroductoryOffers" : {
      "post" : {
        "tags" : [ "SubscriptionIntroductoryOffers" ],
        "operationId" : "subscriptionIntroductoryOffers-create_instance",
        "requestBody" : {
          "description" : "SubscriptionIntroductoryOffer representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionIntroductoryOfferCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionIntroductoryOffer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionIntroductoryOfferResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionIntroductoryOffers/{id}" : {
      "patch" : {
        "tags" : [ "SubscriptionIntroductoryOffers" ],
        "operationId" : "subscriptionIntroductoryOffers-update_instance",
        "requestBody" : {
          "description" : "SubscriptionIntroductoryOffer representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionIntroductoryOfferUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionIntroductoryOffer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionIntroductoryOfferResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SubscriptionIntroductoryOffers" ],
        "operationId" : "subscriptionIntroductoryOffers-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionLocalizations" : {
      "post" : {
        "tags" : [ "SubscriptionLocalizations" ],
        "operationId" : "subscriptionLocalizations-create_instance",
        "requestBody" : {
          "description" : "SubscriptionLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionLocalizationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionLocalizations/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionLocalizations" ],
        "operationId" : "subscriptionLocalizations-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "description", "locale", "name", "state", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionLocalizationResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionLocalizations" ],
        "operationId" : "subscriptionLocalizations-update_instance",
        "requestBody" : {
          "description" : "SubscriptionLocalization representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionLocalizationUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionLocalization",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionLocalizationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SubscriptionLocalizations" ],
        "operationId" : "subscriptionLocalizations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodeCustomCodes" : {
      "post" : {
        "tags" : [ "SubscriptionOfferCodeCustomCodes" ],
        "operationId" : "subscriptionOfferCodeCustomCodes-create_instance",
        "requestBody" : {
          "description" : "SubscriptionOfferCodeCustomCode representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCodeCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionOfferCodeCustomCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCodeResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionOfferCodeCustomCodes/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionOfferCodeCustomCodes" ],
        "operationId" : "subscriptionOfferCodeCustomCodes-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionOfferCodeCustomCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeCustomCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "createdDate", "customCode", "expirationDate", "numberOfCodes", "offerCode" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "offerCode" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionOfferCodeCustomCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCodeResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionOfferCodeCustomCodes" ],
        "operationId" : "subscriptionOfferCodeCustomCodes-update_instance",
        "requestBody" : {
          "description" : "SubscriptionOfferCodeCustomCode representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCodeUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionOfferCodeCustomCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCodeResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodeOneTimeUseCodes" : {
      "post" : {
        "tags" : [ "SubscriptionOfferCodeOneTimeUseCodes" ],
        "operationId" : "subscriptionOfferCodeOneTimeUseCodes-create_instance",
        "requestBody" : {
          "description" : "SubscriptionOfferCodeOneTimeUseCode representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionOfferCodeOneTimeUseCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionOfferCodeOneTimeUseCodes/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionOfferCodeOneTimeUseCodes" ],
        "operationId" : "subscriptionOfferCodeOneTimeUseCodes-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionOfferCodeOneTimeUseCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "createdDate", "expirationDate", "numberOfCodes", "offerCode", "values" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "offerCode" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionOfferCodeOneTimeUseCodeValues]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodeValues",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionOfferCodeOneTimeUseCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionOfferCodeOneTimeUseCodes" ],
        "operationId" : "subscriptionOfferCodeOneTimeUseCodes-update_instance",
        "requestBody" : {
          "description" : "SubscriptionOfferCodeOneTimeUseCode representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionOfferCodeOneTimeUseCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodeResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodes" : {
      "post" : {
        "tags" : [ "SubscriptionOfferCodes" ],
        "operationId" : "subscriptionOfferCodes-create_instance",
        "requestBody" : {
          "description" : "SubscriptionOfferCode representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionOfferCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionOfferCodes/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionOfferCodes" ],
        "operationId" : "subscriptionOfferCodes-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionOfferCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "customCodes", "customerEligibilities", "duration", "name", "numberOfPeriods", "offerEligibility", "offerMode", "oneTimeUseCodes", "prices", "subscription", "totalNumberOfCodes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customCodes", "oneTimeUseCodes", "prices", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionOfferCodeCustomCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeCustomCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "createdDate", "customCode", "expirationDate", "numberOfCodes", "offerCode" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionOfferCodeOneTimeUseCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "createdDate", "expirationDate", "numberOfCodes", "offerCode", "values" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionOfferCodePrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodePrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[customCodes]",
          "in" : "query",
          "description" : "maximum number of related customCodes returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[oneTimeUseCodes]",
          "in" : "query",
          "description" : "maximum number of related oneTimeUseCodes returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionOfferCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionOfferCodes" ],
        "operationId" : "subscriptionOfferCodes-update_instance",
        "requestBody" : {
          "description" : "SubscriptionOfferCode representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionOfferCode",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionPricePoints/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionPricePoints" ],
        "operationId" : "subscriptionPricePoints-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "equalizations", "proceeds", "proceedsYear2", "subscription", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionPricePoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPricePointResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionPrices" : {
      "post" : {
        "tags" : [ "SubscriptionPrices" ],
        "operationId" : "subscriptionPrices-create_instance",
        "requestBody" : {
          "description" : "SubscriptionPrice representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionPriceCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionPrice",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPriceResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionPrices/{id}" : {
      "delete" : {
        "tags" : [ "SubscriptionPrices" ],
        "operationId" : "subscriptionPrices-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionPromotionalOffers" : {
      "post" : {
        "tags" : [ "SubscriptionPromotionalOffers" ],
        "operationId" : "subscriptionPromotionalOffers-create_instance",
        "requestBody" : {
          "description" : "SubscriptionPromotionalOffer representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionPromotionalOfferCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionPromotionalOffer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPromotionalOfferResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptionPromotionalOffers/{id}" : {
      "get" : {
        "tags" : [ "SubscriptionPromotionalOffers" ],
        "operationId" : "subscriptionPromotionalOffers-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptionPromotionalOffers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPromotionalOffers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "name", "numberOfPeriods", "offerCode", "offerMode", "prices", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "prices", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionPromotionalOfferPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPromotionalOfferPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionPromotionalOffer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPromotionalOfferResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SubscriptionPromotionalOffers" ],
        "operationId" : "subscriptionPromotionalOffers-update_instance",
        "requestBody" : {
          "description" : "SubscriptionPromotionalOffer representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionPromotionalOfferUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionPromotionalOffer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPromotionalOfferResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SubscriptionPromotionalOffers" ],
        "operationId" : "subscriptionPromotionalOffers-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionSubmissions" : {
      "post" : {
        "tags" : [ "SubscriptionSubmissions" ],
        "operationId" : "subscriptionSubmissions-create_instance",
        "requestBody" : {
          "description" : "SubscriptionSubmission representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionSubmissionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single SubscriptionSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionSubmissionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions" : {
      "post" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-create_instance",
        "requestBody" : {
          "description" : "Subscription representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single Subscription",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions/{id}" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-get_instance",
        "parameters" : [ {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "group", "introductoryOffers", "offerCodes", "prices", "promotedPurchase", "promotionalOffers", "subscriptionLocalizations" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "equalizations", "proceeds", "proceedsYear2", "subscription", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionPromotionalOffers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPromotionalOffers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "name", "numberOfPeriods", "offerCode", "offerMode", "prices", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionOfferCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "customCodes", "customerEligibilities", "duration", "name", "numberOfPeriods", "offerEligibility", "offerMode", "oneTimeUseCodes", "prices", "subscription", "totalNumberOfCodes" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionAppStoreReviewScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionAppStoreReviewScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "subscription", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "preserveCurrentPrice", "preserved", "startDate", "subscription", "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionIntroductoryOffers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionIntroductoryOffers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "endDate", "numberOfPeriods", "offerMode", "startDate", "subscription", "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[subscriptionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "description", "locale", "name", "state", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[introductoryOffers]",
          "in" : "query",
          "description" : "maximum number of related introductoryOffers returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[offerCodes]",
          "in" : "query",
          "description" : "maximum number of related offerCodes returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[promotionalOffers]",
          "in" : "query",
          "description" : "maximum number of related promotionalOffers returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        }, {
          "name" : "limit[subscriptionLocalizations]",
          "in" : "query",
          "description" : "maximum number of related subscriptionLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Subscription",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-update_instance",
        "requestBody" : {
          "description" : "Subscription representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Subscription",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/territories" : {
      "get" : {
        "tags" : [ "Territories" ],
        "operationId" : "territories-get_collection",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Territories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/userInvitations" : {
      "get" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-get_collection",
        "parameters" : [ {
          "name" : "filter[email]",
          "in" : "query",
          "description" : "filter by attribute 'email'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[roles]",
          "in" : "query",
          "description" : "filter by attribute 'roles'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADMIN", "FINANCE", "ACCOUNT_HOLDER", "SALES", "MARKETING", "APP_MANAGER", "DEVELOPER", "ACCESS_TO_REPORTS", "CUSTOMER_SUPPORT", "IMAGE_MANAGER", "CREATE_APPS", "CLOUD_MANAGED_DEVELOPER_ID", "CLOUD_MANAGED_APP_DISTRIBUTION" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[visibleApps]",
          "in" : "query",
          "description" : "filter by id(s) of related 'visibleApps'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "email", "-email", "lastName", "-lastName" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[userInvitations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type userInvitations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "allAppsVisible", "email", "expirationDate", "firstName", "lastName", "provisioningAllowed", "roles", "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[visibleApps]",
          "in" : "query",
          "description" : "maximum number of related visibleApps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of UserInvitations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserInvitationsResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-create_instance",
        "requestBody" : {
          "description" : "UserInvitation representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserInvitationCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Single UserInvitation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserInvitationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/userInvitations/{id}" : {
      "get" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-get_instance",
        "parameters" : [ {
          "name" : "fields[userInvitations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type userInvitations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "allAppsVisible", "email", "expirationDate", "firstName", "lastName", "provisioningAllowed", "roles", "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[visibleApps]",
          "in" : "query",
          "description" : "maximum number of related visibleApps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single UserInvitation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserInvitationResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "users-get_collection",
        "parameters" : [ {
          "name" : "filter[roles]",
          "in" : "query",
          "description" : "filter by attribute 'roles'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADMIN", "FINANCE", "ACCOUNT_HOLDER", "SALES", "MARKETING", "APP_MANAGER", "DEVELOPER", "ACCESS_TO_REPORTS", "CUSTOMER_SUPPORT", "IMAGE_MANAGER", "CREATE_APPS", "CLOUD_MANAGED_DEVELOPER_ID", "CLOUD_MANAGED_APP_DISTRIBUTION" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[username]",
          "in" : "query",
          "description" : "filter by attribute 'username'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "filter[visibleApps]",
          "in" : "query",
          "description" : "filter by id(s) of related 'visibleApps'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "lastName", "-lastName", "username", "-username" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[users]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type users",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "allAppsVisible", "firstName", "lastName", "provisioningAllowed", "roles", "username", "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[visibleApps]",
          "in" : "query",
          "description" : "maximum number of related visibleApps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "users-get_instance",
        "parameters" : [ {
          "name" : "fields[users]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type users",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "allAppsVisible", "firstName", "lastName", "provisioningAllowed", "roles", "username", "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "visibleApps" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false,
          "required" : false
        }, {
          "name" : "limit[visibleApps]",
          "in" : "query",
          "description" : "maximum number of related visibleApps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "required" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "operationId" : "users-update_instance",
        "requestBody" : {
          "description" : "User representation",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single User",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "operationId" : "users-delete_instance",
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appAvailabilities/{id}/relationships/availableTerritories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appAvailabilities/{id}/availableTerritories" : {
      "get" : {
        "tags" : [ "AppAvailabilities" ],
        "operationId" : "appAvailabilities-availableTerritories-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Territories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCategories/{id}/relationships/parent" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCategories/{id}/parent" : {
      "get" : {
        "tags" : [ "AppCategories" ],
        "operationId" : "appCategories-parent-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCategories/{id}/relationships/subcategories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCategories/{id}/subcategories" : {
      "get" : {
        "tags" : [ "AppCategories" ],
        "operationId" : "appCategories-subcategories-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppCategories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperienceLocalizations/{id}/relationships/appClipHeaderImage" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperienceLocalizations/{id}/appClipHeaderImage" : {
      "get" : {
        "tags" : [ "AppClipDefaultExperienceLocalizations" ],
        "operationId" : "appClipDefaultExperienceLocalizations-appClipHeaderImage-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appClipHeaderImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipHeaderImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperienceLocalization", "assetDeliveryState", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "appClipHeaderImage", "locale", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperienceLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipHeaderImage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipHeaderImageResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperiences/{id}/relationships/appClipAppStoreReviewDetail" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperiences/{id}/appClipAppStoreReviewDetail" : {
      "get" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-appClipAppStoreReviewDetail-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appClipAppStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAppStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "invocationUrls" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipAppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperiences/{id}/relationships/appClipDefaultExperienceLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperiences/{id}/appClipDefaultExperienceLocalizations" : {
      "get" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-appClipDefaultExperienceLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "appClipHeaderImage", "locale", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipHeaderImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipHeaderImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperienceLocalization", "assetDeliveryState", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "appClipHeaderImage" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppClipDefaultExperienceLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperiences/{id}/relationships/releaseWithAppStoreVersion" : {
      "get" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-releaseWithAppStoreVersion-get_to_one_relationship",
        "parameters" : [ ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related linkage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-releaseWithAppStoreVersion-update_to_one_relationship",
        "requestBody" : {
          "description" : "Related linkage",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClipDefaultExperiences/{id}/releaseWithAppStoreVersion" : {
      "get" : {
        "tags" : [ "AppClipDefaultExperiences" ],
        "operationId" : "appClipDefaultExperiences-releaseWithAppStoreVersion-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperiments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments", "endDate", "name", "reviewRequired", "startDate", "started", "state", "trafficProportion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "contests", "gambling", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "seventeenPlus", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionPhasedReleases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionPhasedReleases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "currentDayNumber", "phasedReleaseState", "startDate", "totalPauseDuration" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionExperiments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "routingAppCoverage" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClips/{id}/relationships/appClipAdvancedExperiences" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClips/{id}/appClipAdvancedExperiences" : {
      "get" : {
        "tags" : [ "AppClips" ],
        "operationId" : "appClips-appClipAdvancedExperiences-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[action]",
          "in" : "query",
          "description" : "filter by attribute 'action'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "OPEN", "VIEW", "PLAY" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[placeStatus]",
          "in" : "query",
          "description" : "filter by attribute 'placeStatus'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PENDING", "MATCHED", "NO_MATCH" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[status]",
          "in" : "query",
          "description" : "filter by attribute 'status'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "RECEIVED", "DEACTIVATED", "APP_TRANSFER_IN_PROGRESS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipAdvancedExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAdvancedExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "businessCategory", "defaultLanguage", "headerImage", "isPoweredBy", "link", "localizations", "place", "placeStatus", "removed", "status", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipAdvancedExperiences", "appClipDefaultExperiences", "bundleId" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipAdvancedExperienceImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAdvancedExperienceImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipAdvancedExperienceLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAdvancedExperienceLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "language", "subtitle", "title" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[localizations]",
          "in" : "query",
          "description" : "maximum number of related localizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClip", "headerImage", "localizations" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppClipAdvancedExperiences",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipAdvancedExperiencesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClips/{id}/relationships/appClipDefaultExperiences" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appClips/{id}/appClipDefaultExperiences" : {
      "get" : {
        "tags" : [ "AppClips" ],
        "operationId" : "appClips-appClipDefaultExperiences-get_to_many_related",
        "parameters" : [ {
          "name" : "exists[releaseWithAppStoreVersion]",
          "in" : "query",
          "description" : "filter by existence or non-existence of related 'releaseWithAppStoreVersion'",
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipAdvancedExperiences", "appClipDefaultExperiences", "bundleId" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipAppStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAppStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "invocationUrls" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "appClipHeaderImage", "locale", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appClipDefaultExperienceLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppClipDefaultExperiences",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperiencesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPageLocalizations/{id}/relationships/appPreviewSets" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPageLocalizations/{id}/appPreviewSets" : {
      "get" : {
        "tags" : [ "AppCustomProductPageLocalizations" ],
        "operationId" : "appCustomProductPageLocalizations-appPreviewSets-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[previewType]",
          "in" : "query",
          "description" : "filter by attribute 'previewType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IPHONE_67", "IPHONE_61", "IPHONE_65", "IPHONE_58", "IPHONE_55", "IPHONE_47", "IPHONE_40", "IPHONE_35", "IPAD_PRO_3GEN_129", "IPAD_PRO_3GEN_11", "IPAD_PRO_129", "IPAD_105", "IPAD_97", "DESKTOP", "APPLE_TV" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersionExperimentTreatmentLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersionLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersionLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appPreviews]",
          "in" : "query",
          "description" : "maximum number of related appPreviews returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPreviewSets",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPageLocalizations/{id}/relationships/appScreenshotSets" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPageLocalizations/{id}/appScreenshotSets" : {
      "get" : {
        "tags" : [ "AppCustomProductPageLocalizations" ],
        "operationId" : "appCustomProductPageLocalizations-appScreenshotSets-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[screenshotDisplayType]",
          "in" : "query",
          "description" : "filter by attribute 'screenshotDisplayType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "APP_IPHONE_67", "APP_IPHONE_61", "APP_IPHONE_65", "APP_IPHONE_58", "APP_IPHONE_55", "APP_IPHONE_47", "APP_IPHONE_40", "APP_IPHONE_35", "APP_IPAD_PRO_3GEN_129", "APP_IPAD_PRO_3GEN_11", "APP_IPAD_PRO_129", "APP_IPAD_105", "APP_IPAD_97", "APP_DESKTOP", "APP_WATCH_ULTRA", "APP_WATCH_SERIES_7", "APP_WATCH_SERIES_4", "APP_WATCH_SERIES_3", "APP_APPLE_TV", "IMESSAGE_APP_IPHONE_67", "IMESSAGE_APP_IPHONE_61", "IMESSAGE_APP_IPHONE_65", "IMESSAGE_APP_IPHONE_58", "IMESSAGE_APP_IPHONE_55", "IMESSAGE_APP_IPHONE_47", "IMESSAGE_APP_IPHONE_40", "IMESSAGE_APP_IPAD_PRO_3GEN_129", "IMESSAGE_APP_IPAD_PRO_3GEN_11", "IMESSAGE_APP_IPAD_PRO_129", "IMESSAGE_APP_IPAD_105", "IMESSAGE_APP_IPAD_97" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersionExperimentTreatmentLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersionLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersionLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appScreenshots]",
          "in" : "query",
          "description" : "maximum number of related appScreenshots returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppScreenshotSets",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPageVersions/{id}/relationships/appCustomProductPageLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPageVersions/{id}/appCustomProductPageLocalizations" : {
      "get" : {
        "tags" : [ "AppCustomProductPageVersions" ],
        "operationId" : "appCustomProductPageVersions-appCustomProductPageLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPage", "appCustomProductPageLocalizations", "state", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appScreenshotSets]",
          "in" : "query",
          "description" : "maximum number of related appScreenshotSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appPreviewSets]",
          "in" : "query",
          "description" : "maximum number of related appPreviewSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppCustomProductPageLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPages/{id}/relationships/appCustomProductPageVersions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appCustomProductPages/{id}/appCustomProductPageVersions" : {
      "get" : {
        "tags" : [ "AppCustomProductPages" ],
        "operationId" : "appCustomProductPages-appCustomProductPageVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[state]",
          "in" : "query",
          "description" : "filter by attribute 'state'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PREPARE_FOR_SUBMISSION", "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "ACCEPTED", "APPROVED", "REPLACED_WITH_NEW_VERSION", "REJECTED" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPage", "appCustomProductPageLocalizations", "state", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appCustomProductPageVersions", "appStoreVersionTemplate", "customProductPageTemplate", "name", "url", "visible" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appCustomProductPageLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPage", "appCustomProductPageLocalizations" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppCustomProductPageVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPageVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations/{id}/app" : {
      "get" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations/{id}/relationships/appEncryptionDeclarationDocument" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations/{id}/appEncryptionDeclarationDocument" : {
      "get" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-appEncryptionDeclarationDocument-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appEncryptionDeclarationDocuments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarationDocuments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEncryptionDeclaration", "assetDeliveryState", "assetToken", "downloadUrl", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEncryptionDeclarationDocument",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationDocumentResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEncryptionDeclarations/{id}/relationships/builds" : {
      "post" : {
        "tags" : [ "AppEncryptionDeclarations" ],
        "operationId" : "appEncryptionDeclarations-builds-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppEncryptionDeclarationBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEventLocalizations/{id}/relationships/appEventScreenshots" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEventLocalizations/{id}/appEventScreenshots" : {
      "get" : {
        "tags" : [ "AppEventLocalizations" ],
        "operationId" : "appEventLocalizations-appEventScreenshots-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appEventScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventAssetType", "appEventLocalization", "assetDeliveryState", "assetToken", "fileName", "fileSize", "imageAsset", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEventLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEvent", "appEventScreenshots", "appEventVideoClips", "locale", "longDescription", "name", "shortDescription" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppEventScreenshots",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventScreenshotsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEventLocalizations/{id}/relationships/appEventVideoClips" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEventLocalizations/{id}/appEventVideoClips" : {
      "get" : {
        "tags" : [ "AppEventLocalizations" ],
        "operationId" : "appEventLocalizations-appEventVideoClips-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appEventVideoClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventVideoClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventAssetType", "appEventLocalization", "assetDeliveryState", "fileName", "fileSize", "previewFrameTimeCode", "previewImage", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEventLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEvent", "appEventScreenshots", "appEventVideoClips", "locale", "longDescription", "name", "shortDescription" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppEventVideoClips",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventVideoClipsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEvents/{id}/relationships/localizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appEvents/{id}/localizations" : {
      "get" : {
        "tags" : [ "AppEvents" ],
        "operationId" : "appEvents-localizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appEventScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventAssetType", "appEventLocalization", "assetDeliveryState", "assetToken", "fileName", "fileSize", "imageAsset", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEventVideoClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventVideoClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEventAssetType", "appEventLocalization", "assetDeliveryState", "fileName", "fileSize", "previewFrameTimeCode", "previewImage", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEventLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEvent", "appEventScreenshots", "appEventVideoClips", "locale", "longDescription", "name", "shortDescription" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEvents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEvents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "archivedTerritorySchedules", "badge", "deepLink", "eventState", "localizations", "primaryLocale", "priority", "purchaseRequirement", "purpose", "referenceName", "territorySchedules" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appEventScreenshots]",
          "in" : "query",
          "description" : "maximum number of related appEventScreenshots returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appEventVideoClips]",
          "in" : "query",
          "description" : "maximum number of related appEventVideoClips returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEvent", "appEventScreenshots", "appEventVideoClips" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppEventLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/relationships/ageRatingDeclaration" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/ageRatingDeclaration" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-ageRatingDeclaration-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "contests", "gambling", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "seventeenPlus", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AgeRatingDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgeRatingDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/relationships/appInfoLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/appInfoLocalizations" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-appInfoLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "brazilAgeRatingV2", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appInfoLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfoLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo", "locale", "name", "privacyChoicesUrl", "privacyPolicyText", "privacyPolicyUrl", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppInfoLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfoLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/relationships/primaryCategory" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/primaryCategory" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-primaryCategory-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/relationships/primarySubcategoryOne" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/primarySubcategoryOne" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-primarySubcategoryOne-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/relationships/primarySubcategoryTwo" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/primarySubcategoryTwo" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-primarySubcategoryTwo-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/relationships/secondaryCategory" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/secondaryCategory" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-secondaryCategory-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/relationships/secondarySubcategoryOne" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/secondarySubcategoryOne" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-secondarySubcategoryOne-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/relationships/secondarySubcategoryTwo" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appInfos/{id}/secondarySubcategoryTwo" : {
      "get" : {
        "tags" : [ "AppInfos" ],
        "operationId" : "appInfos-secondarySubcategoryTwo-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[subcategories]",
          "in" : "query",
          "description" : "maximum number of related subcategories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppCategory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCategoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreviewSets/{id}/relationships/appPreviews" : {
      "get" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-appPreviews-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetAppPreviewsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-appPreviews-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPreviewSetAppPreviewsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPreviewSets/{id}/appPreviews" : {
      "get" : {
        "tags" : [ "AppPreviewSets" ],
        "operationId" : "appPreviewSets-appPreviews-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPreviews",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v3/appPricePoints/{id}/relationships/equalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v3/appPricePoints/{id}/equalizations" : {
      "get" : {
        "tags" : [ "AppPricePoints" ],
        "operationId" : "appPricePoints-equalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "equalizations", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointsV3Response"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPricePoints/{id}/relationships/territory" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPricePoints/{id}/territory" : {
      "get" : {
        "tags" : [ "AppPricePoints" ],
        "operationId" : "appPricePoints-territory-get_to_one_related",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Territory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceSchedules/{id}/relationships/automaticPrices" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceSchedules/{id}/automaticPrices" : {
      "get" : {
        "tags" : [ "AppPriceSchedules" ],
        "operationId" : "appPriceSchedules-automaticPrices-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[endDate]",
          "in" : "query",
          "description" : "filter by attribute 'endDate'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[startDate]",
          "in" : "query",
          "description" : "filter by attribute 'startDate'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPricePoint", "endDate", "manual", "startDate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "equalizations", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPrices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricesV2Response"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceSchedules/{id}/relationships/baseTerritory" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceSchedules/{id}/baseTerritory" : {
      "get" : {
        "tags" : [ "AppPriceSchedules" ],
        "operationId" : "appPriceSchedules-baseTerritory-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Territory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceSchedules/{id}/relationships/manualPrices" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceSchedules/{id}/manualPrices" : {
      "get" : {
        "tags" : [ "AppPriceSchedules" ],
        "operationId" : "appPriceSchedules-manualPrices-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[endDate]",
          "in" : "query",
          "description" : "filter by attribute 'endDate'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[startDate]",
          "in" : "query",
          "description" : "filter by attribute 'startDate'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPricePoint", "endDate", "manual", "startDate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "equalizations", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPrices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricesV2Response"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceTiers/{id}/relationships/pricePoints" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appPriceTiers/{id}/pricePoints" : {
      "get" : {
        "tags" : [ "AppPriceTiers" ],
        "operationId" : "appPriceTiers-pricePoints-get_to_many_related",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPriceTiers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceTiers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "priceTier", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appScreenshotSets/{id}/relationships/appScreenshots" : {
      "get" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-appScreenshots-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-appScreenshots-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appScreenshotSets/{id}/appScreenshots" : {
      "get" : {
        "tags" : [ "AppScreenshotSets" ],
        "operationId" : "appScreenshotSets-appScreenshots-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppScreenshots",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreReviewDetails/{id}/relationships/appStoreReviewAttachments" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments" : {
      "get" : {
        "tags" : [ "AppStoreReviewDetails" ],
        "operationId" : "appStoreReviewDetails-appStoreReviewAttachments-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewAttachments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppStoreReviewAttachments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewAttachmentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/relationships/appPreviewSets" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appPreviewSets" : {
      "get" : {
        "tags" : [ "AppStoreVersionExperimentTreatmentLocalizations" ],
        "operationId" : "appStoreVersionExperimentTreatmentLocalizations-appPreviewSets-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[previewType]",
          "in" : "query",
          "description" : "filter by attribute 'previewType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IPHONE_67", "IPHONE_61", "IPHONE_65", "IPHONE_58", "IPHONE_55", "IPHONE_47", "IPHONE_40", "IPHONE_35", "IPAD_PRO_3GEN_129", "IPAD_PRO_3GEN_11", "IPAD_PRO_129", "IPAD_105", "IPAD_97", "DESKTOP", "APPLE_TV" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appCustomProductPageLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appCustomProductPageLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersionLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersionLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appPreviews]",
          "in" : "query",
          "description" : "maximum number of related appPreviews returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPreviewSets",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/relationships/appScreenshotSets" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperimentTreatmentLocalizations/{id}/appScreenshotSets" : {
      "get" : {
        "tags" : [ "AppStoreVersionExperimentTreatmentLocalizations" ],
        "operationId" : "appStoreVersionExperimentTreatmentLocalizations-appScreenshotSets-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[screenshotDisplayType]",
          "in" : "query",
          "description" : "filter by attribute 'screenshotDisplayType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "APP_IPHONE_67", "APP_IPHONE_61", "APP_IPHONE_65", "APP_IPHONE_58", "APP_IPHONE_55", "APP_IPHONE_47", "APP_IPHONE_40", "APP_IPHONE_35", "APP_IPAD_PRO_3GEN_129", "APP_IPAD_PRO_3GEN_11", "APP_IPAD_PRO_129", "APP_IPAD_105", "APP_IPAD_97", "APP_DESKTOP", "APP_WATCH_ULTRA", "APP_WATCH_SERIES_7", "APP_WATCH_SERIES_4", "APP_WATCH_SERIES_3", "APP_APPLE_TV", "IMESSAGE_APP_IPHONE_67", "IMESSAGE_APP_IPHONE_61", "IMESSAGE_APP_IPHONE_65", "IMESSAGE_APP_IPHONE_58", "IMESSAGE_APP_IPHONE_55", "IMESSAGE_APP_IPHONE_47", "IMESSAGE_APP_IPHONE_40", "IMESSAGE_APP_IPAD_PRO_3GEN_129", "IMESSAGE_APP_IPAD_PRO_3GEN_11", "IMESSAGE_APP_IPAD_PRO_129", "IMESSAGE_APP_IPAD_105", "IMESSAGE_APP_IPAD_97" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appCustomProductPageLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appCustomProductPageLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersionLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersionLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appScreenshots]",
          "in" : "query",
          "description" : "maximum number of related appScreenshots returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppScreenshotSets",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperimentTreatments/{id}/relationships/appStoreVersionExperimentTreatmentLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperimentTreatments/{id}/appStoreVersionExperimentTreatmentLocalizations" : {
      "get" : {
        "tags" : [ "AppStoreVersionExperimentTreatments" ],
        "operationId" : "appStoreVersionExperimentTreatments-appStoreVersionExperimentTreatmentLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[locale]",
          "in" : "query",
          "description" : "filter by attribute 'locale'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appIcon", "appIconName", "appStoreVersionExperiment", "appStoreVersionExperimentTreatmentLocalizations", "name", "promotedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appScreenshotSets]",
          "in" : "query",
          "description" : "maximum number of related appScreenshotSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appPreviewSets]",
          "in" : "query",
          "description" : "maximum number of related appPreviewSets returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppStoreVersionExperimentTreatmentLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperiments/{id}/relationships/appStoreVersionExperimentTreatments" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionExperiments/{id}/appStoreVersionExperimentTreatments" : {
      "get" : {
        "tags" : [ "AppStoreVersionExperiments" ],
        "operationId" : "appStoreVersionExperiments-appStoreVersionExperimentTreatments-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperiments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments", "endDate", "name", "reviewRequired", "startDate", "started", "state", "trafficProportion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appIcon", "appIconName", "appStoreVersionExperiment", "appStoreVersionExperimentTreatmentLocalizations", "name", "promotedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionExperimentTreatmentLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersionExperiment", "appStoreVersionExperimentTreatmentLocalizations" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppStoreVersionExperimentTreatments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionLocalizations/{id}/relationships/appPreviewSets" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionLocalizations/{id}/appPreviewSets" : {
      "get" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-appPreviewSets-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[previewType]",
          "in" : "query",
          "description" : "filter by attribute 'previewType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IPHONE_67", "IPHONE_61", "IPHONE_65", "IPHONE_58", "IPHONE_55", "IPHONE_47", "IPHONE_40", "IPHONE_35", "IPAD_PRO_3GEN_129", "IPAD_PRO_3GEN_11", "IPAD_PRO_129", "IPAD_105", "IPAD_97", "DESKTOP", "APPLE_TV" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appCustomProductPageLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appCustomProductPageLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersionExperimentTreatmentLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSet", "assetDeliveryState", "fileName", "fileSize", "mimeType", "previewFrameTimeCode", "previewImage", "sourceFileChecksum", "uploadOperations", "uploaded", "videoUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreviewSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreviewSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "previewType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appPreviews]",
          "in" : "query",
          "description" : "maximum number of related appPreviews returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appPreviews", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPreviewSets",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreviewSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionLocalizations/{id}/relationships/appScreenshotSets" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersionLocalizations/{id}/appScreenshotSets" : {
      "get" : {
        "tags" : [ "AppStoreVersionLocalizations" ],
        "operationId" : "appStoreVersionLocalizations-appScreenshotSets-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[screenshotDisplayType]",
          "in" : "query",
          "description" : "filter by attribute 'screenshotDisplayType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "APP_IPHONE_67", "APP_IPHONE_61", "APP_IPHONE_65", "APP_IPHONE_58", "APP_IPHONE_55", "APP_IPHONE_47", "APP_IPHONE_40", "APP_IPHONE_35", "APP_IPAD_PRO_3GEN_129", "APP_IPAD_PRO_3GEN_11", "APP_IPAD_PRO_129", "APP_IPAD_105", "APP_IPAD_97", "APP_DESKTOP", "APP_WATCH_ULTRA", "APP_WATCH_SERIES_7", "APP_WATCH_SERIES_4", "APP_WATCH_SERIES_3", "APP_APPLE_TV", "IMESSAGE_APP_IPHONE_67", "IMESSAGE_APP_IPHONE_61", "IMESSAGE_APP_IPHONE_65", "IMESSAGE_APP_IPHONE_58", "IMESSAGE_APP_IPHONE_55", "IMESSAGE_APP_IPHONE_47", "IMESSAGE_APP_IPHONE_40", "IMESSAGE_APP_IPAD_PRO_3GEN_129", "IMESSAGE_APP_IPAD_PRO_3GEN_11", "IMESSAGE_APP_IPAD_PRO_129", "IMESSAGE_APP_IPAD_105", "IMESSAGE_APP_IPAD_97" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appCustomProductPageLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appCustomProductPageLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersionExperimentTreatmentLocalization]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersionExperimentTreatmentLocalization'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshotSets]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshotSets",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization", "screenshotDisplayType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appPreviewSets", "appScreenshotSets", "locale", "promotionalText" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatmentLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatmentLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersionExperimentTreatment", "locale" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appScreenshotSet", "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appScreenshots]",
          "in" : "query",
          "description" : "maximum number of related appScreenshots returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageLocalization", "appScreenshots", "appStoreVersionExperimentTreatmentLocalization", "appStoreVersionLocalization" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppScreenshotSets",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppScreenshotSetsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/ageRatingDeclaration" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/ageRatingDeclaration" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-ageRatingDeclaration-get_to_one_related",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "contests", "gambling", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "seventeenPlus", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AgeRatingDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AgeRatingDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/appClipDefaultExperience" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appClipDefaultExperience-get_to_one_relationship",
        "parameters" : [ ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related linkage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionAppClipDefaultExperienceLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appClipDefaultExperience-update_to_one_relationship",
        "requestBody" : {
          "description" : "Related linkage",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionAppClipDefaultExperienceLinkageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appClipDefaultExperience" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appClipDefaultExperience-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipAdvancedExperiences", "appClipDefaultExperiences", "bundleId" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipAppStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipAppStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "invocationUrls" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperienceLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDefaultExperience", "appClipHeaderImage", "locale", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[appClipDefaultExperienceLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appClipDefaultExperienceLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipDefaultExperience",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDefaultExperienceResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/appStoreReviewDetail" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreReviewDetail" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreReviewDetail-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewAttachments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewDetail", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[appStoreReviewAttachments]",
          "in" : "query",
          "description" : "maximum number of related appStoreReviewAttachments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/appStoreVersionExperiments" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionExperiments" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreVersionExperiments-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[state]",
          "in" : "query",
          "description" : "filter by attribute 'state'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PREPARE_FOR_SUBMISSION", "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "ACCEPTED", "APPROVED", "REJECTED", "COMPLETED", "STOPPED" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperiments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments", "endDate", "name", "reviewRequired", "startDate", "started", "state", "trafficProportion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperimentTreatments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperimentTreatments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appIcon", "appIconName", "appStoreVersionExperiment", "appStoreVersionExperimentTreatmentLocalizations", "name", "promotedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appStoreVersionExperimentTreatments]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionExperimentTreatments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppStoreVersionExperiments",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionExperimentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/appStoreVersionLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionLocalizations" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreVersionLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppStoreVersionLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/appStoreVersionPhasedRelease" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreVersionPhasedRelease-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersionPhasedReleases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionPhasedReleases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "currentDayNumber", "phasedReleaseState", "startDate", "totalPauseDuration" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionPhasedRelease",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionPhasedReleaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/appStoreVersionSubmission" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/appStoreVersionSubmission" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-appStoreVersionSubmission-get_to_one_related",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "fields[appStoreVersionSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersionSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/build" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-build-get_to_one_relationship",
        "parameters" : [ ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related linkage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionBuildLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-build-update_to_one_relationship",
        "requestBody" : {
          "description" : "Related linkage",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppStoreVersionBuildLinkageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/build" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-build-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Build",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/customerReviews" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/customerReviews" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-customerReviews-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[rating]",
          "in" : "query",
          "description" : "filter by attribute 'rating'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by attribute 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ABW", "AFG", "AGO", "AIA", "ALB", "AND", "ANT", "ARE", "ARG", "ARM", "ASM", "ATG", "AUS", "AUT", "AZE", "BDI", "BEL", "BEN", "BES", "BFA", "BGD", "BGR", "BHR", "BHS", "BIH", "BLR", "BLZ", "BMU", "BOL", "BRA", "BRB", "BRN", "BTN", "BWA", "CAF", "CAN", "CHE", "CHL", "CHN", "CIV", "CMR", "COD", "COG", "COK", "COL", "COM", "CPV", "CRI", "CUB", "CUW", "CXR", "CYM", "CYP", "CZE", "DEU", "DJI", "DMA", "DNK", "DOM", "DZA", "ECU", "EGY", "ERI", "ESP", "EST", "ETH", "FIN", "FJI", "FLK", "FRA", "FRO", "FSM", "GAB", "GBR", "GEO", "GGY", "GHA", "GIB", "GIN", "GLP", "GMB", "GNB", "GNQ", "GRC", "GRD", "GRL", "GTM", "GUF", "GUM", "GUY", "HKG", "HND", "HRV", "HTI", "HUN", "IDN", "IMN", "IND", "IRL", "IRQ", "ISL", "ISR", "ITA", "JAM", "JEY", "JOR", "JPN", "KAZ", "KEN", "KGZ", "KHM", "KIR", "KNA", "KOR", "KWT", "LAO", "LBN", "LBR", "LBY", "LCA", "LIE", "LKA", "LSO", "LTU", "LUX", "LVA", "MAC", "MAR", "MCO", "MDA", "MDG", "MDV", "MEX", "MHL", "MKD", "MLI", "MLT", "MMR", "MNE", "MNG", "MNP", "MOZ", "MRT", "MSR", "MTQ", "MUS", "MWI", "MYS", "MYT", "NAM", "NCL", "NER", "NFK", "NGA", "NIC", "NIU", "NLD", "NOR", "NPL", "NRU", "NZL", "OMN", "PAK", "PAN", "PER", "PHL", "PLW", "PNG", "POL", "PRI", "PRT", "PRY", "PSE", "PYF", "QAT", "REU", "ROU", "RUS", "RWA", "SAU", "SEN", "SGP", "SHN", "SLB", "SLE", "SLV", "SMR", "SOM", "SPM", "SRB", "SSD", "STP", "SUR", "SVK", "SVN", "SWE", "SWZ", "SXM", "SYC", "TCA", "TCD", "TGO", "THA", "TJK", "TKM", "TLS", "TON", "TTO", "TUN", "TUR", "TUV", "TWN", "TZA", "UGA", "UKR", "UMI", "URY", "USA", "UZB", "VAT", "VCT", "VEN", "VGB", "VIR", "VNM", "VUT", "WLF", "WSM", "YEM", "ZAF", "ZMB", "ZWE" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "exists[publishedResponse]",
          "in" : "query",
          "description" : "filter by publishedResponse",
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "createdDate", "-createdDate", "rating", "-rating" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[customerReviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "body", "createdDate", "rating", "response", "reviewerNickname", "territory", "title" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[customerReviewResponses]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviewResponses",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "lastModifiedDate", "responseBody", "review", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "response" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CustomerReviews",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerReviewsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/relationships/routingAppCoverage" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/appStoreVersions/{id}/routingAppCoverage" : {
      "get" : {
        "tags" : [ "AppStoreVersions" ],
        "operationId" : "appStoreVersions-routingAppCoverage-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single RoutingAppCoverage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RoutingAppCoverageResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/appAvailability" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appAvailability" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appAvailability-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appAvailabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appAvailabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "availableInNewTerritories", "availableTerritories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "availableTerritories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppAvailability",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppAvailabilityResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/appClips" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appClips" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appClips-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[bundleId]",
          "in" : "query",
          "description" : "filter by attribute 'bundleId'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipAdvancedExperiences", "appClipDefaultExperiences", "bundleId" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "maximum number of related appClipDefaultExperiences returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipDefaultExperiences" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppClips",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/appCustomProductPages" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appCustomProductPages" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appCustomProductPages-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[visible]",
          "in" : "query",
          "description" : "filter by attribute 'visible'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appCustomProductPageVersions", "appStoreVersionTemplate", "customProductPageTemplate", "name", "url", "visible" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPage", "appCustomProductPageLocalizations", "state", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appCustomProductPageVersions]",
          "in" : "query",
          "description" : "maximum number of related appCustomProductPageVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appCustomProductPageVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppCustomProductPages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppCustomProductPagesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/appEvents" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appEvents" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appEvents-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[eventState]",
          "in" : "query",
          "description" : "filter by attribute 'eventState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DRAFT", "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "ACCEPTED", "APPROVED", "PUBLISHED", "PAST", "ARCHIVED" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEventLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEventLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appEvent", "appEventScreenshots", "appEventVideoClips", "locale", "longDescription", "name", "shortDescription" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEvents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEvents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "archivedTerritorySchedules", "badge", "deepLink", "eventState", "localizations", "primaryLocale", "priority", "purchaseRequirement", "purpose", "referenceName", "territorySchedules" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[localizations]",
          "in" : "query",
          "description" : "maximum number of related localizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "localizations" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppEvents",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEventsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/appInfos" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appInfos" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appInfos-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "contests", "gambling", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "seventeenPlus", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "brazilAgeRatingV2", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appInfoLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfoLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appInfo", "locale", "name", "privacyChoicesUrl", "privacyPolicyText", "privacyPolicyUrl", "subtitle" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCategories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCategories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "parent", "platforms", "subcategories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appInfoLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appInfoLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appInfoLocalizations", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppInfos",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppInfosResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/appPricePoints" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appPricePoints" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appPricePoints-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "equalizations", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointsV3Response"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/appPriceSchedule" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appPriceSchedule" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appPriceSchedule-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPricePoint", "endDate", "manual", "startDate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPriceSchedules]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceSchedules",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "automaticPrices", "baseTerritory", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[manualPrices]",
          "in" : "query",
          "description" : "maximum number of related manualPrices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[automaticPrices]",
          "in" : "query",
          "description" : "maximum number of related automaticPrices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "automaticPrices", "baseTerritory", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPriceSchedule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPriceScheduleResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/appStoreVersions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/appStoreVersions" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-appStoreVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[appStoreState]",
          "in" : "query",
          "description" : "filter by attribute 'appStoreState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACCEPTED", "DEVELOPER_REMOVED_FROM_SALE", "DEVELOPER_REJECTED", "IN_REVIEW", "INVALID_BINARY", "METADATA_REJECTED", "PENDING_APPLE_RELEASE", "PENDING_CONTRACT", "PENDING_DEVELOPER_RELEASE", "PREPARE_FOR_SUBMISSION", "PREORDER_READY_FOR_SALE", "PROCESSING_FOR_APP_STORE", "READY_FOR_REVIEW", "READY_FOR_SALE", "REJECTED", "REMOVED_FROM_SALE", "WAITING_FOR_EXPORT_COMPLIANCE", "WAITING_FOR_REVIEW", "REPLACED_WITH_NEW_VERSION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[versionString]",
          "in" : "query",
          "description" : "filter by attribute 'versionString'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperiments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments", "endDate", "name", "reviewRequired", "startDate", "started", "state", "trafficProportion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "contests", "gambling", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "seventeenPlus", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionPhasedReleases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionPhasedReleases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "currentDayNumber", "phasedReleaseState", "startDate", "totalPauseDuration" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionExperiments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "routingAppCoverage" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppStoreVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/availableTerritories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/availableTerritories" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-availableTerritories-get_to_many_related",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Territories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/betaAppLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/betaAppLocalizations" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaAppLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaAppLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/betaAppReviewDetail" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/betaAppReviewDetail" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaAppReviewDetail-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppReviewDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/betaGroups" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/betaGroups" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaGroups-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaGroups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/betaLicenseAgreement" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/betaLicenseAgreement" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaLicenseAgreement-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/betaTesters" : {
      "delete" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-betaTesters-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppBetaTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted for future completion"
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/builds" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/builds" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Builds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/ciProduct" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/ciProduct" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-ciProduct-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[primaryRepositories]",
          "in" : "query",
          "description" : "maximum number of related primaryRepositories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleId", "primaryRepositories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiProduct",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiProductResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/customerReviews" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/customerReviews" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-customerReviews-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[rating]",
          "in" : "query",
          "description" : "filter by attribute 'rating'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by attribute 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ABW", "AFG", "AGO", "AIA", "ALB", "AND", "ANT", "ARE", "ARG", "ARM", "ASM", "ATG", "AUS", "AUT", "AZE", "BDI", "BEL", "BEN", "BES", "BFA", "BGD", "BGR", "BHR", "BHS", "BIH", "BLR", "BLZ", "BMU", "BOL", "BRA", "BRB", "BRN", "BTN", "BWA", "CAF", "CAN", "CHE", "CHL", "CHN", "CIV", "CMR", "COD", "COG", "COK", "COL", "COM", "CPV", "CRI", "CUB", "CUW", "CXR", "CYM", "CYP", "CZE", "DEU", "DJI", "DMA", "DNK", "DOM", "DZA", "ECU", "EGY", "ERI", "ESP", "EST", "ETH", "FIN", "FJI", "FLK", "FRA", "FRO", "FSM", "GAB", "GBR", "GEO", "GGY", "GHA", "GIB", "GIN", "GLP", "GMB", "GNB", "GNQ", "GRC", "GRD", "GRL", "GTM", "GUF", "GUM", "GUY", "HKG", "HND", "HRV", "HTI", "HUN", "IDN", "IMN", "IND", "IRL", "IRQ", "ISL", "ISR", "ITA", "JAM", "JEY", "JOR", "JPN", "KAZ", "KEN", "KGZ", "KHM", "KIR", "KNA", "KOR", "KWT", "LAO", "LBN", "LBR", "LBY", "LCA", "LIE", "LKA", "LSO", "LTU", "LUX", "LVA", "MAC", "MAR", "MCO", "MDA", "MDG", "MDV", "MEX", "MHL", "MKD", "MLI", "MLT", "MMR", "MNE", "MNG", "MNP", "MOZ", "MRT", "MSR", "MTQ", "MUS", "MWI", "MYS", "MYT", "NAM", "NCL", "NER", "NFK", "NGA", "NIC", "NIU", "NLD", "NOR", "NPL", "NRU", "NZL", "OMN", "PAK", "PAN", "PER", "PHL", "PLW", "PNG", "POL", "PRI", "PRT", "PRY", "PSE", "PYF", "QAT", "REU", "ROU", "RUS", "RWA", "SAU", "SEN", "SGP", "SHN", "SLB", "SLE", "SLV", "SMR", "SOM", "SPM", "SRB", "SSD", "STP", "SUR", "SVK", "SVN", "SWE", "SWZ", "SXM", "SYC", "TCA", "TCD", "TGO", "THA", "TJK", "TKM", "TLS", "TON", "TTO", "TUN", "TUR", "TUV", "TWN", "TZA", "UGA", "UKR", "UMI", "URY", "USA", "UZB", "VAT", "VCT", "VEN", "VGB", "VIR", "VNM", "VUT", "WLF", "WSM", "YEM", "ZAF", "ZMB", "ZWE" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "exists[publishedResponse]",
          "in" : "query",
          "description" : "filter by publishedResponse",
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "createdDate", "-createdDate", "rating", "-rating" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[customerReviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "body", "createdDate", "rating", "response", "reviewerNickname", "territory", "title" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[customerReviewResponses]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviewResponses",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "lastModifiedDate", "responseBody", "review", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "response" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CustomerReviews",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerReviewsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/endUserLicenseAgreement" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/endUserLicenseAgreement" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-endUserLicenseAgreement-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single EndUserLicenseAgreement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndUserLicenseAgreementResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/gameCenterEnabledVersions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/gameCenterEnabledVersions" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-gameCenterEnabledVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[versionString]",
          "in" : "query",
          "description" : "filter by attribute 'versionString'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "versionString", "-versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[compatibleVersions]",
          "in" : "query",
          "description" : "maximum number of related compatibleVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of GameCenterEnabledVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameCenterEnabledVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/inAppPurchases" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/inAppPurchases" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-inAppPurchases-get_to_many_related",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "filter[inAppPurchaseType]",
          "in" : "query",
          "description" : "filter by attribute 'inAppPurchaseType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION", "NON_CONSUMABLE", "CONSUMABLE", "NON_RENEWING_SUBSCRIPTION", "FREE_SUBSCRIPTION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[canBeSubmitted]",
          "in" : "query",
          "description" : "filter by canBeSubmitted",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseType", "-inAppPurchaseType", "productId", "-productId", "referenceName", "-referenceName" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[apps]",
          "in" : "query",
          "description" : "maximum number of related apps returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of InAppPurchases",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/inAppPurchasesV2" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/inAppPurchasesV2" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-inAppPurchasesV2-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[inAppPurchaseType]",
          "in" : "query",
          "description" : "filter by attribute 'inAppPurchaseType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CONSUMABLE", "NON_CONSUMABLE", "NON_RENEWING_SUBSCRIPTION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[productId]",
          "in" : "query",
          "description" : "filter by attribute 'productId'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "description" : "filter by attribute 'state'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MISSING_METADATA", "WAITING_FOR_UPLOAD", "PROCESSING_CONTENT", "READY_TO_SUBMIT", "WAITING_FOR_REVIEW", "IN_REVIEW", "DEVELOPER_ACTION_NEEDED", "PENDING_BINARY_APPROVAL", "APPROVED", "DEVELOPER_REMOVED_FROM_SALE", "REMOVED_FROM_SALE", "REJECTED" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseType", "-inAppPurchaseType", "name", "-name" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchaseAppStoreReviewScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "inAppPurchaseV2", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchasePricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "inAppPurchaseV2", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchaseLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "description", "inAppPurchaseV2", "locale", "name", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchasePriceSchedules]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePriceSchedules",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "automaticPrices", "baseTerritory", "inAppPurchase", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchaseContents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseContents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "fileName", "fileSize", "inAppPurchaseV2", "lastModifiedDate", "url" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[inAppPurchaseLocalizations]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchaseLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[pricePoints]",
          "in" : "query",
          "description" : "maximum number of related pricePoints returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 8000
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "content", "iapPriceSchedule", "inAppPurchaseLocalizations", "pricePoints", "promotedPurchase" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of InAppPurchases",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasesV2Response"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/perfPowerMetrics" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-perfPowerMetrics-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[deviceType]",
          "in" : "query",
          "description" : "filter by attribute 'deviceType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[metricType]",
          "in" : "query",
          "description" : "filter by attribute 'metricType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DISK", "HANG", "BATTERY", "LAUNCH", "MEMORY", "ANIMATION", "TERMINATION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of PerfPowerMetrics",
            "content" : {
              "application/vnd.apple.xcode-metrics+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/xcodeMetrics"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/preOrder" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/preOrder" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-preOrder-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppPreOrder",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPreOrderResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/preReleaseVersions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/preReleaseVersions" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-preReleaseVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of PreReleaseVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreReleaseVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/pricePoints" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/pricePoints" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-pricePoints-get_to_many_related",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "filter[priceTier]",
          "in" : "query",
          "description" : "filter by id(s) of related 'priceTier'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false,
          "deprecated" : true
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPriceTiers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceTiers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "customerPrice", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricePointsV2Response"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/prices" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/prices" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-prices-get_to_many_related",
        "deprecated" : true,
        "parameters" : [ {
          "name" : "fields[appPriceTiers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPriceTiers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "pricePoints" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of AppPrices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/promotedPurchases" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-promotedPurchases-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppPromotedPurchasesLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-promotedPurchases-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AppPromotedPurchasesLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/promotedPurchases" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-promotedPurchases-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[promotedPurchaseImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchaseImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "promotedPurchase", "sourceFileChecksum", "state", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[promotionImages]",
          "in" : "query",
          "description" : "maximum number of related promotionImages returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2", "promotionImages", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of PromotedPurchases",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchasesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/reviewSubmissions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/reviewSubmissions" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-reviewSubmissions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "description" : "filter by attribute 'state'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "UNRESOLVED_ISSUES", "CANCELING", "COMPLETING", "COMPLETE" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[reviewSubmissionItems]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissionItems",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appEvent", "appStoreVersion", "appStoreVersionExperiment", "removed", "resolved", "reviewSubmission", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[reviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "canceled", "items", "platform", "state", "submitted", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[items]",
          "in" : "query",
          "description" : "maximum number of related items returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "items" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ReviewSubmissions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewSubmissionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/subscriptionGracePeriod" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/subscriptionGracePeriod" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-subscriptionGracePeriod-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[subscriptionGracePeriods]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGracePeriods",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "optIn", "renewalType", "sandboxOptIn" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionGracePeriod",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGracePeriodResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/relationships/subscriptionGroups" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/apps/{id}/subscriptionGroups" : {
      "get" : {
        "tags" : [ "Apps" ],
        "operationId" : "apps-subscriptionGroups-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[referenceName]",
          "in" : "query",
          "description" : "filter by attribute 'referenceName'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[subscriptions.state]",
          "in" : "query",
          "description" : "filter by attribute 'subscriptions.state'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MISSING_METADATA", "READY_TO_SUBMIT", "WAITING_FOR_REVIEW", "IN_REVIEW", "DEVELOPER_ACTION_NEEDED", "PENDING_BINARY_APPROVAL", "APPROVED", "DEVELOPER_REMOVED_FROM_SALE", "REMOVED_FROM_SALE", "REJECTED" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "referenceName", "-referenceName" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "referenceName", "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionGroupLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroupLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customAppName", "locale", "name", "state", "subscriptionGroup" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[subscriptions]",
          "in" : "query",
          "description" : "maximum number of related subscriptions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[subscriptionGroupLocalizations]",
          "in" : "query",
          "description" : "maximum number of related subscriptionGroupLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionGroups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppLocalizations/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppLocalizations/{id}/app" : {
      "get" : {
        "tags" : [ "BetaAppLocalizations" ],
        "operationId" : "betaAppLocalizations-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewDetails/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewDetails/{id}/app" : {
      "get" : {
        "tags" : [ "BetaAppReviewDetails" ],
        "operationId" : "betaAppReviewDetails-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewSubmissions/{id}/relationships/build" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaAppReviewSubmissions/{id}/build" : {
      "get" : {
        "tags" : [ "BetaAppReviewSubmissions" ],
        "operationId" : "betaAppReviewSubmissions-build-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Build",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaBuildLocalizations/{id}/relationships/build" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaBuildLocalizations/{id}/build" : {
      "get" : {
        "tags" : [ "BetaBuildLocalizations" ],
        "operationId" : "betaBuildLocalizations-build-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Build",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/app" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/relationships/betaTesters" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-betaTesters-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupBetaTestersLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-betaTesters-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupBetaTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-betaTesters-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupBetaTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/betaTesters" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-betaTesters-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaTesters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTestersResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/relationships/builds" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-builds-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupBuildsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-builds-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-builds-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaGroupBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaGroups/{id}/builds" : {
      "get" : {
        "tags" : [ "BetaGroups" ],
        "operationId" : "betaGroups-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Builds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaLicenseAgreements/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaLicenseAgreements/{id}/app" : {
      "get" : {
        "tags" : [ "BetaLicenseAgreements" ],
        "operationId" : "betaLicenseAgreements-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/relationships/apps" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-apps-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterAppsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-apps-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterAppsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "202" : {
            "description" : "Accepted for future completion"
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/apps" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-apps-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Apps",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/relationships/betaGroups" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-betaGroups-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterBetaGroupsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-betaGroups-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterBetaGroupsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-betaGroups-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterBetaGroupsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/betaGroups" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-betaGroups-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaGroups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaGroupsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/relationships/builds" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-builds-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTesterBuildsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-builds-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-builds-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BetaTesterBuildsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/betaTesters/{id}/builds" : {
      "get" : {
        "tags" : [ "BetaTesters" ],
        "operationId" : "betaTesters-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Builds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBetaDetails/{id}/relationships/build" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBetaDetails/{id}/build" : {
      "get" : {
        "tags" : [ "BuildBetaDetails" ],
        "operationId" : "buildBetaDetails-build-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Build",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBundles/{id}/relationships/appClipDomainCacheStatus" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBundles/{id}/appClipDomainCacheStatus" : {
      "get" : {
        "tags" : [ "BuildBundles" ],
        "operationId" : "buildBundles-appClipDomainCacheStatus-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appClipDomainStatuses]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDomainStatuses",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "domains", "lastUpdatedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipDomainStatus",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDomainStatusResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBundles/{id}/relationships/appClipDomainDebugStatus" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBundles/{id}/appClipDomainDebugStatus" : {
      "get" : {
        "tags" : [ "BuildBundles" ],
        "operationId" : "buildBundles-appClipDomainDebugStatus-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appClipDomainStatuses]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDomainStatuses",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "domains", "lastUpdatedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppClipDomainStatus",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppClipDomainStatusResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBundles/{id}/relationships/betaAppClipInvocations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBundles/{id}/betaAppClipInvocations" : {
      "get" : {
        "tags" : [ "BuildBundles" ],
        "operationId" : "buildBundles-betaAppClipInvocations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaAppClipInvocations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppClipInvocations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaAppClipInvocationLocalizations", "buildBundle", "url" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[betaAppClipInvocationLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppClipInvocationLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaAppClipInvocation", "locale", "title" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[betaAppClipInvocationLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaAppClipInvocationLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaAppClipInvocationLocalizations" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaAppClipInvocations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppClipInvocationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBundles/{id}/relationships/buildBundleFileSizes" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/buildBundles/{id}/buildBundleFileSizes" : {
      "get" : {
        "tags" : [ "BuildBundles" ],
        "operationId" : "buildBundles-buildBundleFileSizes-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[buildBundleFileSizes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBundleFileSizes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "deviceModel", "downloadBytes", "installBytes", "osVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BuildBundleFileSizes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBundleFileSizesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/app" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/appEncryptionDeclaration" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-appEncryptionDeclaration-get_to_one_relationship",
        "parameters" : [ ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Related linkage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-appEncryptionDeclaration-update_to_one_relationship",
        "requestBody" : {
          "description" : "Related linkage",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/appEncryptionDeclaration" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-appEncryptionDeclaration-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appDescription", "appEncryptionDeclarationDocument", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "createdDate", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppEncryptionDeclaration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppEncryptionDeclarationResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/appStoreVersion" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/appStoreVersion" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-appStoreVersion-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperiments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments", "endDate", "name", "reviewRequired", "startDate", "started", "state", "trafficProportion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ageRatingDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ageRatingDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "alcoholTobaccoOrDrugUseOrReferences", "contests", "gambling", "gamblingAndContests", "gamblingSimulated", "horrorOrFearThemes", "kidsAgeBand", "matureOrSuggestiveThemes", "medicalOrTreatmentInformation", "profanityOrCrudeHumor", "seventeenPlus", "sexualContentGraphicAndNudity", "sexualContentOrNudity", "unrestrictedWebAccess", "violenceCartoonOrFantasy", "violenceRealistic", "violenceRealisticProlongedGraphicOrSadistic" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewAttachments", "appStoreVersion", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[routingAppCoverages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type routingAppCoverages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "assetDeliveryState", "fileName", "fileSize", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClipDefaultExperiences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClipDefaultExperiences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "action", "appClip", "appClipAppStoreReviewDetail", "appClipDefaultExperienceLocalizations", "appClipDefaultExperienceTemplate", "releaseWithAppStoreVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionPhasedReleases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionPhasedReleases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "currentDayNumber", "phasedReleaseState", "startDate", "totalPauseDuration" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appPreviewSets", "appScreenshotSets", "appStoreVersion", "description", "keywords", "locale", "marketingUrl", "promotionalText", "supportUrl", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[appStoreVersionLocalizations]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersionExperiments returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "routingAppCoverage" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single AppStoreVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppStoreVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/betaAppReviewSubmission" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/betaAppReviewSubmission" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-betaAppReviewSubmission-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BetaAppReviewSubmission",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaAppReviewSubmissionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/betaBuildLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/betaBuildLocalizations" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-betaBuildLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaBuildLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaBuildLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/betaGroups" : {
      "post" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-betaGroups-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBetaGroupsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-betaGroups-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildBetaGroupsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/buildBetaDetail" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/buildBetaDetail" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-buildBetaDetail-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BuildBetaDetail",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildBetaDetailResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/diagnosticSignatures" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/diagnosticSignatures" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-diagnosticSignatures-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[diagnosticType]",
          "in" : "query",
          "description" : "filter by attribute 'diagnosticType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DISK_WRITES", "HANGS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[diagnosticSignatures]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type diagnosticSignatures",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "diagnosticType", "logs", "signature", "weight" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of DiagnosticSignatures",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DiagnosticSignaturesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/icons" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/icons" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-icons-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[buildIcons]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildIcons",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "iconAsset", "iconType", "name" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BuildIcons",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildIconsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/individualTesters" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-individualTesters-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildIndividualTestersLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-individualTesters-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildIndividualTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-individualTesters-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildIndividualTestersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/individualTesters" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-individualTesters-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BetaTesters",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BetaTestersResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/perfPowerMetrics" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-perfPowerMetrics-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[deviceType]",
          "in" : "query",
          "description" : "filter by attribute 'deviceType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[metricType]",
          "in" : "query",
          "description" : "filter by attribute 'metricType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "DISK", "HANG", "BATTERY", "LAUNCH", "MEMORY", "ANIMATION", "TERMINATION" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of PerfPowerMetrics",
            "content" : {
              "application/vnd.apple.xcode-metrics+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/xcodeMetrics"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/relationships/preReleaseVersion" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/builds/{id}/preReleaseVersion" : {
      "get" : {
        "tags" : [ "Builds" ],
        "operationId" : "builds-preReleaseVersion-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PrereleaseVersion",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrereleaseVersionResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/app" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/relationships/bundleIdCapabilities" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/bundleIdCapabilities" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-bundleIdCapabilities-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[bundleIdCapabilities]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIdCapabilities",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "capabilityType", "settings" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of BundleIdCapabilities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdCapabilitiesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/relationships/profiles" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/bundleIds/{id}/profiles" : {
      "get" : {
        "tags" : [ "BundleIds" ],
        "operationId" : "bundleIds-profiles-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[profiles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type profiles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "bundleId", "certificates", "createdDate", "devices", "expirationDate", "name", "platform", "profileContent", "profileState", "profileType", "uuid" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Profiles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProfilesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}/relationships/artifacts" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}/artifacts" : {
      "get" : {
        "tags" : [ "CiBuildActions" ],
        "operationId" : "ciBuildActions-artifacts-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[ciArtifacts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciArtifacts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "downloadUrl", "fileName", "fileSize", "fileType" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiArtifacts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiArtifactsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}/relationships/buildRun" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}/buildRun" : {
      "get" : {
        "tags" : [ "CiBuildActions" ],
        "operationId" : "ciBuildActions-buildRun-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciWorkflows]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciWorkflows",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "branchStartCondition", "buildRuns", "clean", "containerFilePath", "description", "isEnabled", "isLockedForEditing", "lastModifiedDate", "macOsVersion", "name", "product", "pullRequestStartCondition", "repository", "scheduledStartCondition", "tagStartCondition", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmPullRequests]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmPullRequests",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "destinationBranchName", "destinationRepositoryName", "destinationRepositoryOwner", "isClosed", "isCrossRepository", "number", "repository", "sourceBranchName", "sourceRepositoryName", "sourceRepositoryOwner", "title", "webUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "builds", "destinationBranch", "product", "pullRequest", "sourceBranchOrTag", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CiBuildRun",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiBuildRunResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}/relationships/issues" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}/issues" : {
      "get" : {
        "tags" : [ "CiBuildActions" ],
        "operationId" : "ciBuildActions-issues-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[ciIssues]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciIssues",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "category", "fileSource", "issueType", "message" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiIssues",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiIssuesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}/relationships/testResults" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildActions/{id}/testResults" : {
      "get" : {
        "tags" : [ "CiBuildActions" ],
        "operationId" : "ciBuildActions-testResults-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[ciTestResults]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciTestResults",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "className", "destinationTestResults", "fileSource", "message", "name", "status" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiTestResults",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiTestResultsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildRuns/{id}/relationships/actions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildRuns/{id}/actions" : {
      "get" : {
        "tags" : [ "CiBuildRuns" ],
        "operationId" : "ciBuildRuns-actions-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciBuildActions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildActions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actionType", "artifacts", "buildRun", "completionStatus", "executionProgress", "finishedDate", "isRequiredToPass", "issueCounts", "issues", "name", "startedDate", "testResults" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "buildRun" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiBuildActions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiBuildActionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildRuns/{id}/relationships/builds" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciBuildRuns/{id}/builds" : {
      "get" : {
        "tags" : [ "CiBuildRuns" ],
        "operationId" : "ciBuildRuns-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[betaAppReviewSubmission.betaReviewState]",
          "in" : "query",
          "description" : "filter by attribute 'betaAppReviewSubmission.betaReviewState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[buildAudienceType]",
          "in" : "query",
          "description" : "filter by attribute 'buildAudienceType'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "INTERNAL_ONLY", "APP_STORE_ELIGIBLE" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[expired]",
          "in" : "query",
          "description" : "filter by attribute 'expired'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[preReleaseVersion.platform]",
          "in" : "query",
          "description" : "filter by attribute 'preReleaseVersion.platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[preReleaseVersion.version]",
          "in" : "query",
          "description" : "filter by attribute 'preReleaseVersion.version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[processingState]",
          "in" : "query",
          "description" : "filter by attribute 'processingState'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PROCESSING", "FAILED", "INVALID", "VALID" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[usesNonExemptEncryption]",
          "in" : "query",
          "description" : "filter by attribute 'usesNonExemptEncryption'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[version]",
          "in" : "query",
          "description" : "filter by attribute 'version'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[appStoreVersion]",
          "in" : "query",
          "description" : "filter by id(s) of related 'appStoreVersion'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[betaGroups]",
          "in" : "query",
          "description" : "filter by id(s) of related 'betaGroups'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[preReleaseVersion]",
          "in" : "query",
          "description" : "filter by id(s) of related 'preReleaseVersion'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "preReleaseVersion", "-preReleaseVersion", "uploadedDate", "-uploadedDate", "version", "-version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[buildBundles]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBundles",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClipDomainCacheStatus", "appClipDomainDebugStatus", "betaAppClipInvocations", "buildBundleFileSizes", "bundleId", "bundleType", "dSYMUrl", "deviceProtocols", "entitlements", "fileName", "hasOnDemandResources", "hasPrerenderedIcon", "hasSirikit", "includesSymbols", "isIosBuildMacAppStoreCompatible", "locales", "platformBuild", "requiredCapabilities", "sdkBuild", "supportedArchitectures", "usesLocationServices" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[buildIcons]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildIcons",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "iconAsset", "iconType", "name" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[betaAppReviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "betaReviewState", "build", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[buildBetaDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type buildBetaDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "autoNotifyEnabled", "build", "externalBuildState", "internalBuildState" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[betaTesters]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaTesters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "betaGroups", "builds", "email", "firstName", "inviteType", "lastName" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[betaBuildLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaBuildLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "build", "locale", "whatsNew" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEncryptionDeclarations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEncryptionDeclarations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appDescription", "appEncryptionDeclarationDocument", "appEncryptionDeclarationState", "availableOnFrenchStore", "builds", "codeValue", "containsProprietaryCryptography", "containsThirdPartyCryptography", "createdDate", "documentName", "documentType", "documentUrl", "exempt", "platform", "uploadedDate", "usesEncryption" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[individualTesters]",
          "in" : "query",
          "description" : "maximum number of related individualTesters returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[betaBuildLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaBuildLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[icons]",
          "in" : "query",
          "description" : "maximum number of related icons returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[buildBundles]",
          "in" : "query",
          "description" : "maximum number of related buildBundles returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildBetaDetail", "buildBundles", "icons", "individualTesters", "preReleaseVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Builds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciMacOsVersions/{id}/relationships/xcodeVersions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciMacOsVersions/{id}/xcodeVersions" : {
      "get" : {
        "tags" : [ "CiMacOsVersions" ],
        "operationId" : "ciMacOsVersions-xcodeVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[ciXcodeVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciXcodeVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions", "name", "testDestinations", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciMacOsVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciMacOsVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "version", "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[macOsVersions]",
          "in" : "query",
          "description" : "maximum number of related macOsVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiXcodeVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiXcodeVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/relationships/additionalRepositories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/additionalRepositories" : {
      "get" : {
        "tags" : [ "CiProducts" ],
        "operationId" : "ciProducts-additionalRepositories-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmProviders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmProviders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repositories", "scmProviderType", "url" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "scmProvider" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ScmRepositories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmRepositoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/app" : {
      "get" : {
        "tags" : [ "CiProducts" ],
        "operationId" : "ciProducts-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[betaLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[betaAppReviewDetails]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppReviewDetails",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "contactEmail", "contactFirstName", "contactLastName", "contactPhone", "demoAccountName", "demoAccountPassword", "demoAccountRequired", "notes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appClips]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appClips",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appClipAdvancedExperiences", "appClipDefaultExperiences", "bundleId" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[betaAppLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaAppLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "description", "feedbackEmail", "locale", "marketingUrl", "privacyPolicyUrl", "tvOsPrivacyPolicy" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appInfos]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appInfos",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appInfoLocalizations", "appStoreAgeRating", "appStoreState", "brazilAgeRating", "brazilAgeRatingV2", "kidsAgeBand", "primaryCategory", "primarySubcategoryOne", "primarySubcategoryTwo", "secondaryCategory", "secondarySubcategoryOne", "secondarySubcategoryTwo" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[preReleaseVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type preReleaseVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "builds", "platform", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "apps", "inAppPurchaseType", "productId", "referenceName", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "referenceName", "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[reviewSubmissions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreVersionForReview", "canceled", "items", "platform", "state", "submitted", "submittedDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[betaGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type betaGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "betaTesters", "builds", "createdDate", "feedbackEnabled", "hasAccessToAllBuilds", "iosBuildsAvailableForAppleSiliconMac", "isInternalGroup", "name", "publicLink", "publicLinkEnabled", "publicLinkId", "publicLinkLimit", "publicLinkLimitEnabled" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPreOrders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPreOrders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appReleaseDate", "preOrderAvailableDate" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "priceTier" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionGracePeriods]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGracePeriods",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "optIn", "renewalType", "sandboxOptIn" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[endUserLicenseAgreements]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type endUserLicenseAgreements",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "agreementText", "app", "territories" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appCustomProductPageVersions", "appStoreVersionTemplate", "customProductPageTemplate", "name", "url", "visible" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEvents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEvents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "archivedTerritorySchedules", "badge", "deepLink", "eventState", "localizations", "primaryLocale", "priority", "purchaseRequirement", "purpose", "referenceName", "territorySchedules" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[betaGroups]",
          "in" : "query",
          "description" : "maximum number of related betaGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appStoreVersions]",
          "in" : "query",
          "description" : "maximum number of related appStoreVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[preReleaseVersions]",
          "in" : "query",
          "description" : "maximum number of related preReleaseVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[betaAppLocalizations]",
          "in" : "query",
          "description" : "maximum number of related betaAppLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appInfos]",
          "in" : "query",
          "description" : "maximum number of related appInfos returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appClips]",
          "in" : "query",
          "description" : "maximum number of related appClips returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form",
          "deprecated" : true
        }, {
          "name" : "limit[availableTerritories]",
          "in" : "query",
          "description" : "maximum number of related availableTerritories returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[inAppPurchases]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchases returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[subscriptionGroups]",
          "in" : "query",
          "description" : "maximum number of related subscriptionGroups returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "maximum number of related gameCenterEnabledVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appCustomProductPages]",
          "in" : "query",
          "description" : "maximum number of related appCustomProductPages returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[inAppPurchasesV2]",
          "in" : "query",
          "description" : "maximum number of related inAppPurchasesV2 returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[promotedPurchases]",
          "in" : "query",
          "description" : "maximum number of related promotedPurchases returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[appEvents]",
          "in" : "query",
          "description" : "maximum number of related appEvents returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[reviewSubmissions]",
          "in" : "query",
          "description" : "maximum number of related reviewSubmissions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appClips", "appCustomProductPages", "appEvents", "appInfos", "appStoreVersions", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "builds", "ciProduct", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "preOrder", "preReleaseVersions", "prices", "promotedPurchases", "reviewSubmissions", "subscriptionGracePeriod", "subscriptionGroups" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/relationships/buildRuns" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/buildRuns" : {
      "get" : {
        "tags" : [ "CiProducts" ],
        "operationId" : "ciProducts-buildRuns-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciWorkflows]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciWorkflows",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "branchStartCondition", "buildRuns", "clean", "containerFilePath", "description", "isEnabled", "isLockedForEditing", "lastModifiedDate", "macOsVersion", "name", "product", "pullRequestStartCondition", "repository", "scheduledStartCondition", "tagStartCondition", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmPullRequests]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmPullRequests",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "destinationBranchName", "destinationRepositoryName", "destinationRepositoryOwner", "isClosed", "isCrossRepository", "number", "repository", "sourceBranchName", "sourceRepositoryName", "sourceRepositoryOwner", "title", "webUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "builds", "destinationBranch", "product", "pullRequest", "sourceBranchOrTag", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiBuildRuns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiBuildRunsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/relationships/primaryRepositories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/primaryRepositories" : {
      "get" : {
        "tags" : [ "CiProducts" ],
        "operationId" : "ciProducts-primaryRepositories-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmProviders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmProviders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repositories", "scmProviderType", "url" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "scmProvider" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ScmRepositories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmRepositoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/relationships/workflows" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciProducts/{id}/workflows" : {
      "get" : {
        "tags" : [ "CiProducts" ],
        "operationId" : "ciProducts-workflows-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[ciXcodeVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciXcodeVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions", "name", "testDestinations", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciWorkflows]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciWorkflows",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "branchStartCondition", "buildRuns", "clean", "containerFilePath", "description", "isEnabled", "isLockedForEditing", "lastModifiedDate", "macOsVersion", "name", "product", "pullRequestStartCondition", "repository", "scheduledStartCondition", "tagStartCondition", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciMacOsVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciMacOsVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "version", "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersion", "product", "repository", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiWorkflows",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiWorkflowsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciWorkflows/{id}/relationships/buildRuns" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciWorkflows/{id}/buildRuns" : {
      "get" : {
        "tags" : [ "CiWorkflows" ],
        "operationId" : "ciWorkflows-buildRuns-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[builds]",
          "in" : "query",
          "description" : "filter by id(s) of related 'builds'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciBuildRuns]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciBuildRuns",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "buildRun", "builds", "cancelReason", "clean", "completionStatus", "createdDate", "destinationBranch", "destinationCommit", "executionProgress", "finishedDate", "isPullRequestBuild", "issueCounts", "number", "product", "pullRequest", "sourceBranchOrTag", "sourceCommit", "startReason", "startedDate", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciWorkflows]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciWorkflows",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "actions", "branchStartCondition", "buildRuns", "clean", "containerFilePath", "description", "isEnabled", "isLockedForEditing", "lastModifiedDate", "macOsVersion", "name", "product", "pullRequestStartCondition", "repository", "scheduledStartCondition", "tagStartCondition", "xcodeVersion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmPullRequests]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmPullRequests",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "destinationBranchName", "destinationRepositoryName", "destinationRepositoryOwner", "isClosed", "isCrossRepository", "number", "repository", "sourceBranchName", "sourceRepositoryName", "sourceRepositoryOwner", "title", "webUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciProducts]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciProducts",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "additionalRepositories", "app", "buildRuns", "bundleId", "createdDate", "name", "primaryRepositories", "productType", "workflows" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[builds]",
          "in" : "query",
          "description" : "maximum number of related builds returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "builds", "destinationBranch", "product", "pullRequest", "sourceBranchOrTag", "workflow" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiBuildRuns",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiBuildRunsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciWorkflows/{id}/relationships/repository" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciWorkflows/{id}/repository" : {
      "get" : {
        "tags" : [ "CiWorkflows" ],
        "operationId" : "ciWorkflows-repository-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmProviders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmProviders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repositories", "scmProviderType", "url" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "scmProvider" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single ScmRepository",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmRepositoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciXcodeVersions/{id}/relationships/macOsVersions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/ciXcodeVersions/{id}/macOsVersions" : {
      "get" : {
        "tags" : [ "CiXcodeVersions" ],
        "operationId" : "ciXcodeVersions-macOsVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[ciXcodeVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciXcodeVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "macOsVersions", "name", "testDestinations", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[ciMacOsVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type ciMacOsVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "version", "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[xcodeVersions]",
          "in" : "query",
          "description" : "maximum number of related xcodeVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "xcodeVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of CiMacOsVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CiMacOsVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/customerReviews/{id}/relationships/response" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/customerReviews/{id}/response" : {
      "get" : {
        "tags" : [ "CustomerReviews" ],
        "operationId" : "customerReviews-response-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[customerReviews]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviews",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "body", "createdDate", "rating", "response", "reviewerNickname", "territory", "title" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[customerReviewResponses]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type customerReviewResponses",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "lastModifiedDate", "responseBody", "review", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "review" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single CustomerReviewResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerReviewResponseV1Response"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/diagnosticSignatures/{id}/logs" : {
      "get" : {
        "tags" : [ "DiagnosticSignatures" ],
        "operationId" : "diagnosticSignatures-logs-get_to_many_related",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of DiagnosticLogs",
            "content" : {
              "application/vnd.apple.diagnostic-logs+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/diagnosticLogs"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/endUserLicenseAgreements/{id}/relationships/territories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/endUserLicenseAgreements/{id}/territories" : {
      "get" : {
        "tags" : [ "EndUserLicenseAgreements" ],
        "operationId" : "endUserLicenseAgreements-territories-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Territories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions" : {
      "get" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "patch" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/gameCenterEnabledVersions/{id}/compatibleVersions" : {
      "get" : {
        "tags" : [ "GameCenterEnabledVersions" ],
        "operationId" : "gameCenterEnabledVersions-compatibleVersions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[platform]",
          "in" : "query",
          "description" : "filter by attribute 'platform'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[versionString]",
          "in" : "query",
          "description" : "filter by attribute 'versionString'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[app]",
          "in" : "query",
          "description" : "filter by id(s) of related 'app'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "versionString", "-versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[gameCenterEnabledVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type gameCenterEnabledVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions", "iconAsset", "platform", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[compatibleVersions]",
          "in" : "query",
          "description" : "maximum number of related compatibleVersions returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "compatibleVersions" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of GameCenterEnabledVersions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameCenterEnabledVersionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchaseAvailabilities/{id}/relationships/availableTerritories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchaseAvailabilities/{id}/availableTerritories" : {
      "get" : {
        "tags" : [ "InAppPurchaseAvailabilities" ],
        "operationId" : "inAppPurchaseAvailabilities-availableTerritories-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Territories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/relationships/automaticPrices" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/automaticPrices" : {
      "get" : {
        "tags" : [ "InAppPurchasePriceSchedules" ],
        "operationId" : "inAppPurchasePriceSchedules-automaticPrices-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchasePricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "inAppPurchaseV2", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchasePrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "endDate", "inAppPurchasePricePoint", "inAppPurchaseV2", "manual", "startDate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchasePricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of InAppPurchasePrices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasePricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/relationships/baseTerritory" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/baseTerritory" : {
      "get" : {
        "tags" : [ "InAppPurchasePriceSchedules" ],
        "operationId" : "inAppPurchasePriceSchedules-baseTerritory-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single Territory",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoryResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/relationships/manualPrices" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/inAppPurchasePriceSchedules/{id}/manualPrices" : {
      "get" : {
        "tags" : [ "InAppPurchasePriceSchedules" ],
        "operationId" : "inAppPurchasePriceSchedules-manualPrices-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchasePricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "inAppPurchaseV2", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchasePrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "endDate", "inAppPurchasePricePoint", "inAppPurchaseV2", "manual", "startDate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchasePricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of InAppPurchasePrices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasePricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/relationships/appStoreReviewScreenshot" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/appStoreReviewScreenshot" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-appStoreReviewScreenshot-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[inAppPurchaseAppStoreReviewScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseAppStoreReviewScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "inAppPurchaseV2", "sourceFileChecksum", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchaseAppStoreReviewScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/relationships/content" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/content" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-content-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchaseContents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseContents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "fileName", "fileSize", "inAppPurchaseV2", "lastModifiedDate", "url" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchaseContent",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseContentResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/relationships/iapPriceSchedule" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/iapPriceSchedule" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-iapPriceSchedule-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[inAppPurchasePrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "endDate", "inAppPurchasePricePoint", "inAppPurchaseV2", "manual", "startDate", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchasePriceSchedules]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePriceSchedules",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "automaticPrices", "baseTerritory", "inAppPurchase", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[manualPrices]",
          "in" : "query",
          "description" : "maximum number of related manualPrices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[automaticPrices]",
          "in" : "query",
          "description" : "maximum number of related automaticPrices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "automaticPrices", "baseTerritory", "inAppPurchase", "manualPrices" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single InAppPurchasePriceSchedule",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasePriceScheduleResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/relationships/inAppPurchaseLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/inAppPurchaseLocalizations" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-inAppPurchaseLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[inAppPurchaseLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchaseLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "description", "inAppPurchaseV2", "locale", "name", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of InAppPurchaseLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchaseLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/relationships/pricePoints" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/pricePoints" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-pricePoints-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[priceTier]",
          "in" : "query",
          "description" : "filter by attribute 'priceTier'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchasePricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchasePricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "inAppPurchaseV2", "priceTier", "proceeds", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of InAppPurchasePricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InAppPurchasePricePointsResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/relationships/promotedPurchase" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v2/inAppPurchases/{id}/promotedPurchase" : {
      "get" : {
        "tags" : [ "InAppPurchases" ],
        "operationId" : "inAppPurchases-promotedPurchase-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[promotedPurchaseImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchaseImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "promotedPurchase", "sourceFileChecksum", "state", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[promotionImages]",
          "in" : "query",
          "description" : "maximum number of related promotionImages returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2", "promotionImages", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PromotedPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/preReleaseVersions/{id}/relationships/app" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/preReleaseVersions/{id}/app" : {
      "get" : {
        "tags" : [ "PreReleaseVersions" ],
        "operationId" : "preReleaseVersions-app-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single App",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/preReleaseVersions/{id}/relationships/builds" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/preReleaseVersions/{id}/builds" : {
      "get" : {
        "tags" : [ "PreReleaseVersions" ],
        "operationId" : "preReleaseVersions-builds-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[builds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type builds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appEncryptionDeclaration", "appStoreVersion", "betaAppReviewSubmission", "betaBuildLocalizations", "betaGroups", "buildAudienceType", "buildBetaDetail", "buildBundles", "computedMinMacOsVersion", "diagnosticSignatures", "expirationDate", "expired", "iconAssetToken", "icons", "individualTesters", "lsMinimumSystemVersion", "minOsVersion", "perfPowerMetrics", "preReleaseVersion", "processingState", "uploadedDate", "usesNonExemptEncryption", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Builds",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/relationships/bundleId" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/bundleId" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-bundleId-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[bundleIds]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type bundleIds",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "bundleIdCapabilities", "identifier", "name", "platform", "profiles", "seedId" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single BundleId",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BundleIdResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/relationships/certificates" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/certificates" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-certificates-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[certificates]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type certificates",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "certificateContent", "certificateType", "csrContent", "displayName", "expirationDate", "name", "platform", "serialNumber" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Certificates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificatesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/relationships/devices" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/profiles/{id}/devices" : {
      "get" : {
        "tags" : [ "Profiles" ],
        "operationId" : "profiles-devices-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[devices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type devices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "addedDate", "deviceClass", "model", "name", "platform", "status", "udid" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Devices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DevicesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/promotedPurchases/{id}/relationships/promotionImages" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/promotedPurchases/{id}/promotionImages" : {
      "get" : {
        "tags" : [ "PromotedPurchases" ],
        "operationId" : "promotedPurchases-promotionImages-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[promotedPurchaseImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchaseImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "promotedPurchase", "sourceFileChecksum", "state", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "promotedPurchase" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of PromotedPurchaseImages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseImagesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/reviewSubmissions/{id}/relationships/items" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/reviewSubmissions/{id}/items" : {
      "get" : {
        "tags" : [ "ReviewSubmissions" ],
        "operationId" : "reviewSubmissions-items-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[appStoreVersionExperiments]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersionExperiments",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreVersion", "appStoreVersionExperimentTreatments", "endDate", "name", "reviewRequired", "startDate", "started", "state", "trafficProportion" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[reviewSubmissionItems]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type reviewSubmissionItems",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appEvent", "appStoreVersion", "appStoreVersionExperiment", "removed", "resolved", "reviewSubmission", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appStoreVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appStoreVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ageRatingDeclaration", "app", "appClipDefaultExperience", "appStoreReviewDetail", "appStoreState", "appStoreVersionExperiments", "appStoreVersionLocalizations", "appStoreVersionPhasedRelease", "appStoreVersionSubmission", "build", "copyright", "createdDate", "customerReviews", "downloadable", "earliestReleaseDate", "platform", "releaseType", "routingAppCoverage", "versionString" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appCustomProductPageVersions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appCustomProductPageVersions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPage", "appCustomProductPageLocalizations", "state", "version" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[appEvents]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type appEvents",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "archivedTerritorySchedules", "badge", "deepLink", "eventState", "localizations", "primaryLocale", "priority", "purchaseRequirement", "purpose", "referenceName", "territorySchedules" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appCustomProductPageVersion", "appEvent", "appStoreVersion", "appStoreVersionExperiment" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ReviewSubmissionItems",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReviewSubmissionItemsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmProviders/{id}/relationships/repositories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmProviders/{id}/repositories" : {
      "get" : {
        "tags" : [ "ScmProviders" ],
        "operationId" : "scmProviders-repositories-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[id]",
          "in" : "query",
          "description" : "filter by id(s)",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmProviders]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmProviders",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repositories", "scmProviderType", "url" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "scmProvider" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ScmRepositories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmRepositoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmRepositories/{id}/relationships/gitReferences" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmRepositories/{id}/gitReferences" : {
      "get" : {
        "tags" : [ "ScmRepositories" ],
        "operationId" : "scmRepositories-gitReferences-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[scmGitReferences]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmGitReferences",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "canonicalName", "isDeleted", "kind", "name", "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ScmGitReferences",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmGitReferencesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmRepositories/{id}/relationships/pullRequests" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/scmRepositories/{id}/pullRequests" : {
      "get" : {
        "tags" : [ "ScmRepositories" ],
        "operationId" : "scmRepositories-pullRequests-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[scmPullRequests]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmPullRequests",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "destinationBranchName", "destinationRepositoryName", "destinationRepositoryOwner", "isClosed", "isCrossRepository", "number", "repository", "sourceBranchName", "sourceRepositoryName", "sourceRepositoryOwner", "title", "webUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[scmRepositories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type scmRepositories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "defaultBranch", "gitReferences", "httpCloneUrl", "lastAccessedDate", "ownerName", "pullRequests", "repositoryName", "scmProvider", "sshCloneUrl" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "repository" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of ScmPullRequests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScmPullRequestsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionAvailabilities/{id}/relationships/availableTerritories" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionAvailabilities/{id}/availableTerritories" : {
      "get" : {
        "tags" : [ "SubscriptionAvailabilities" ],
        "operationId" : "subscriptionAvailabilities-availableTerritories-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Territories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TerritoriesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionGroups/{id}/relationships/subscriptionGroupLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionGroups/{id}/subscriptionGroupLocalizations" : {
      "get" : {
        "tags" : [ "SubscriptionGroups" ],
        "operationId" : "subscriptionGroups-subscriptionGroupLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[subscriptionGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "referenceName", "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionGroupLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroupLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customAppName", "locale", "name", "state", "subscriptionGroup" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionGroup" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionGroupLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionGroupLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionGroups/{id}/relationships/subscriptions" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionGroups/{id}/subscriptions" : {
      "get" : {
        "tags" : [ "SubscriptionGroups" ],
        "operationId" : "subscriptionGroups-subscriptions-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[name]",
          "in" : "query",
          "description" : "filter by attribute 'name'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[productId]",
          "in" : "query",
          "description" : "filter by attribute 'productId'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[state]",
          "in" : "query",
          "description" : "filter by attribute 'state'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MISSING_METADATA", "READY_TO_SUBMIT", "WAITING_FOR_REVIEW", "IN_REVIEW", "DEVELOPER_ACTION_NEEDED", "PENDING_BINARY_APPROVAL", "APPROVED", "DEVELOPER_REMOVED_FROM_SALE", "REMOVED_FROM_SALE", "REJECTED" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "comma-separated list of sort expressions; resources will be sorted as specified",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "name", "-name" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPromotionalOffers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPromotionalOffers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "name", "numberOfPeriods", "offerCode", "offerMode", "prices", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionOfferCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "customCodes", "customerEligibilities", "duration", "name", "numberOfPeriods", "offerEligibility", "offerMode", "oneTimeUseCodes", "prices", "subscription", "totalNumberOfCodes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionAppStoreReviewScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionAppStoreReviewScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "subscription", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionGroups]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionGroups",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "referenceName", "subscriptionGroupLocalizations", "subscriptions" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionIntroductoryOffers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionIntroductoryOffers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "endDate", "numberOfPeriods", "offerMode", "startDate", "subscription", "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "preserveCurrentPrice", "preserved", "startDate", "subscription", "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "description", "locale", "name", "state", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[subscriptionLocalizations]",
          "in" : "query",
          "description" : "maximum number of related subscriptionLocalizations returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[introductoryOffers]",
          "in" : "query",
          "description" : "maximum number of related introductoryOffers returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[promotionalOffers]",
          "in" : "query",
          "description" : "maximum number of related promotionalOffers returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[offerCodes]",
          "in" : "query",
          "description" : "maximum number of related offerCodes returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "group", "introductoryOffers", "offerCodes", "prices", "promotedPurchase", "promotionalOffers", "subscriptionLocalizations" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Subscriptions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodeOneTimeUseCodes/{id}/values" : {
      "get" : {
        "tags" : [ "SubscriptionOfferCodeOneTimeUseCodes" ],
        "operationId" : "subscriptionOfferCodeOneTimeUseCodes-values-get_to_one_related",
        "parameters" : [ ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionOfferCodeOneTimeUseCodeValue",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodes/{id}/relationships/customCodes" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodes/{id}/customCodes" : {
      "get" : {
        "tags" : [ "SubscriptionOfferCodes" ],
        "operationId" : "subscriptionOfferCodes-customCodes-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[subscriptionOfferCodeCustomCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeCustomCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "createdDate", "customCode", "expirationDate", "numberOfCodes", "offerCode" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionOfferCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "customCodes", "customerEligibilities", "duration", "name", "numberOfPeriods", "offerEligibility", "offerMode", "oneTimeUseCodes", "prices", "subscription", "totalNumberOfCodes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "offerCode" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionOfferCodeCustomCodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCodesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodes/{id}/relationships/oneTimeUseCodes" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodes/{id}/oneTimeUseCodes" : {
      "get" : {
        "tags" : [ "SubscriptionOfferCodes" ],
        "operationId" : "subscriptionOfferCodes-oneTimeUseCodes-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[subscriptionOfferCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "customCodes", "customerEligibilities", "duration", "name", "numberOfPeriods", "offerEligibility", "offerMode", "oneTimeUseCodes", "prices", "subscription", "totalNumberOfCodes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionOfferCodeOneTimeUseCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "createdDate", "expirationDate", "numberOfCodes", "offerCode", "values" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "offerCode" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionOfferCodeOneTimeUseCodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCodesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodes/{id}/relationships/prices" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionOfferCodes/{id}/prices" : {
      "get" : {
        "tags" : [ "SubscriptionOfferCodes" ],
        "operationId" : "subscriptionOfferCodes-prices-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "equalizations", "proceeds", "proceedsYear2", "subscription", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionOfferCodePrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodePrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionOfferCodePrices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodePricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionPricePoints/{id}/relationships/equalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionPricePoints/{id}/equalizations" : {
      "get" : {
        "tags" : [ "SubscriptionPricePoints" ],
        "operationId" : "subscriptionPricePoints-equalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[subscription]",
          "in" : "query",
          "description" : "filter by id(s) of related 'subscription'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "equalizations", "proceeds", "proceedsYear2", "subscription", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionPricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPricePointsResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionPromotionalOffers/{id}/relationships/prices" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptionPromotionalOffers/{id}/prices" : {
      "get" : {
        "tags" : [ "SubscriptionPromotionalOffers" ],
        "operationId" : "subscriptionPromotionalOffers-prices-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "equalizations", "proceeds", "proceedsYear2", "subscription", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPromotionalOfferPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPromotionalOfferPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionPromotionalOfferPrices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPromotionalOfferPricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/relationships/appStoreReviewScreenshot" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/appStoreReviewScreenshot" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-appStoreReviewScreenshot-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[subscriptionAppStoreReviewScreenshots]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionAppStoreReviewScreenshots",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetDeliveryState", "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "sourceFileChecksum", "subscription", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single SubscriptionAppStoreReviewScreenshot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshotResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/relationships/introductoryOffers" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-introductoryOffers-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionIntroductoryOffersLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-introductoryOffers-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionIntroductoryOffersLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/introductoryOffers" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-introductoryOffers-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "equalizations", "proceeds", "proceedsYear2", "subscription", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionIntroductoryOffers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionIntroductoryOffers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "endDate", "numberOfPeriods", "offerMode", "startDate", "subscription", "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscription", "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionIntroductoryOffers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionIntroductoryOffersResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/relationships/offerCodes" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/offerCodes" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-offerCodes-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by territory",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionOfferCodeCustomCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeCustomCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "createdDate", "customCode", "expirationDate", "numberOfCodes", "offerCode" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionOfferCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "customCodes", "customerEligibilities", "duration", "name", "numberOfPeriods", "offerEligibility", "offerMode", "oneTimeUseCodes", "prices", "subscription", "totalNumberOfCodes" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionOfferCodeOneTimeUseCodes]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodeOneTimeUseCodes",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "active", "createdDate", "expirationDate", "numberOfCodes", "offerCode", "values" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionOfferCodePrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionOfferCodePrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[oneTimeUseCodes]",
          "in" : "query",
          "description" : "maximum number of related oneTimeUseCodes returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[customCodes]",
          "in" : "query",
          "description" : "maximum number of related customCodes returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customCodes", "oneTimeUseCodes", "prices", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionOfferCodes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionOfferCodesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/relationships/pricePoints" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/pricePoints" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-pricePoints-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "equalizations", "proceeds", "proceedsYear2", "subscription", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionPricePoints",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPricePointsResponse"
                }
              },
              "text/csv" : {
                "schema" : {
                  "$ref" : "#/components/schemas/csv"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/relationships/prices" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-prices-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPricesLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-prices-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionPricesLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/prices" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-prices-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[subscriptionPricePoint]",
          "in" : "query",
          "description" : "filter by id(s) of related 'subscriptionPricePoint'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by id(s) of related 'territory'",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPricePoints]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPricePoints",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "customerPrice", "equalizations", "proceeds", "proceedsYear2", "subscription", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "preserveCurrentPrice", "preserved", "startDate", "subscription", "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[territories]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type territories",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "currency" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionPrices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPricesResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/relationships/promotedPurchase" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/promotedPurchase" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-promotedPurchase-get_to_one_related",
        "parameters" : [ {
          "name" : "fields[promotedPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "enabled", "inAppPurchaseV2", "promotionImages", "state", "subscription", "visibleForAllUsers" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[inAppPurchases]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type inAppPurchases",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "app", "appStoreReviewScreenshot", "availableInAllTerritories", "content", "contentHosting", "familySharable", "iapPriceSchedule", "inAppPurchaseLocalizations", "inAppPurchaseType", "name", "pricePoints", "productId", "promotedPurchase", "reviewNote", "state" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[promotedPurchaseImages]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type promotedPurchaseImages",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "assetToken", "assetType", "fileName", "fileSize", "imageAsset", "promotedPurchase", "sourceFileChecksum", "state", "uploadOperations", "uploaded" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit[promotionImages]",
          "in" : "query",
          "description" : "maximum number of related promotionImages returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "inAppPurchaseV2", "promotionImages", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Single PromotedPurchase",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PromotedPurchaseResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/relationships/promotionalOffers" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/promotionalOffers" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-promotionalOffers-get_to_many_related",
        "parameters" : [ {
          "name" : "filter[territory]",
          "in" : "query",
          "description" : "filter by territory",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPromotionalOffers]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPromotionalOffers",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "duration", "name", "numberOfPeriods", "offerCode", "offerMode", "prices", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionPromotionalOfferPrices]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionPromotionalOfferPrices",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscriptionPricePoint", "territory" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "limit[prices]",
          "in" : "query",
          "description" : "maximum number of related prices returned (when they are included)",
          "schema" : {
            "type" : "integer",
            "maximum" : 50
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "prices", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionPromotionalOffers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionPromotionalOffersResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/relationships/subscriptionLocalizations" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/subscriptions/{id}/subscriptionLocalizations" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "operationId" : "subscriptions-subscriptionLocalizations-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[subscriptions]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptions",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appStoreReviewScreenshot", "availableInAllTerritories", "familySharable", "group", "groupLevel", "introductoryOffers", "name", "offerCodes", "pricePoints", "prices", "productId", "promotedPurchase", "promotionalOffers", "reviewNote", "state", "subscriptionLocalizations", "subscriptionPeriod" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "fields[subscriptionLocalizations]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type subscriptionLocalizations",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "description", "locale", "name", "state", "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "comma-separated list of relationships to include",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "subscription" ]
            }
          },
          "style" : "form",
          "explode" : false
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of SubscriptionLocalizations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionLocalizationsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/userInvitations/{id}/relationships/visibleApps" : {
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/userInvitations/{id}/visibleApps" : {
      "get" : {
        "tags" : [ "UserInvitations" ],
        "operationId" : "userInvitations-visibleApps-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Apps",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/users/{id}/relationships/visibleApps" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-get_to_many_relationship",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of related linkages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserVisibleAppsLinkagesResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-create_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-replace_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-delete_to_many_relationship",
        "requestBody" : {
          "description" : "List of related linkages",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserVisibleAppsLinkagesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Request entity error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204" : {
            "description" : "Success (no content)"
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    },
    "/v1/users/{id}/visibleApps" : {
      "get" : {
        "tags" : [ "Users" ],
        "operationId" : "users-visibleApps-get_to_many_related",
        "parameters" : [ {
          "name" : "fields[apps]",
          "in" : "query",
          "description" : "the fields to include for returned resources of type apps",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "appAvailability", "appClips", "appCustomProductPages", "appEvents", "appInfos", "appPricePoints", "appPriceSchedule", "appStoreVersions", "availableInNewTerritories", "availableTerritories", "betaAppLocalizations", "betaAppReviewDetail", "betaGroups", "betaLicenseAgreement", "betaTesters", "builds", "bundleId", "ciProduct", "contentRightsDeclaration", "customerReviews", "endUserLicenseAgreement", "gameCenterEnabledVersions", "inAppPurchases", "inAppPurchasesV2", "isOrEverWasMadeForKids", "name", "perfPowerMetrics", "preOrder", "preReleaseVersions", "pricePoints", "prices", "primaryLocale", "promotedPurchases", "reviewSubmissions", "sku", "subscriptionGracePeriod", "subscriptionGroups", "subscriptionStatusUrl", "subscriptionStatusUrlForSandbox", "subscriptionStatusUrlVersion", "subscriptionStatusUrlVersionForSandbox" ]
            }
          },
          "style" : "form",
          "explode" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "maximum resources per page",
          "schema" : {
            "type" : "integer",
            "maximum" : 200
          },
          "style" : "form"
        } ],
        "responses" : {
          "400" : {
            "description" : "Parameter error(s)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "List of Apps",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AppsResponse"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "the id of the requested resource",
        "schema" : {
          "type" : "string"
        },
        "style" : "simple",
        "required" : true
      } ]
    }
  },
  "components" : {
    "schemas" : {
      "AgeRatingDeclaration" : {
        "type" : "object",
        "title" : "AgeRatingDeclaration",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ageRatingDeclarations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "alcoholTobaccoOrDrugUseOrReferences" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "contests" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "gamblingAndContests" : {
                "type" : "boolean",
                "deprecated" : true
              },
              "gambling" : {
                "type" : "boolean"
              },
              "gamblingSimulated" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "kidsAgeBand" : {
                "$ref" : "#/components/schemas/KidsAgeBand"
              },
              "medicalOrTreatmentInformation" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "profanityOrCrudeHumor" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "sexualContentGraphicAndNudity" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "sexualContentOrNudity" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "seventeenPlus" : {
                "type" : "boolean"
              },
              "horrorOrFearThemes" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "matureOrSuggestiveThemes" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "unrestrictedWebAccess" : {
                "type" : "boolean"
              },
              "violenceCartoonOrFantasy" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "violenceRealisticProlongedGraphicOrSadistic" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              },
              "violenceRealistic" : {
                "type" : "string",
                "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AgeRatingDeclarationResponse" : {
        "type" : "object",
        "title" : "AgeRatingDeclarationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AgeRatingDeclaration"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AgeRatingDeclarationUpdateRequest" : {
        "type" : "object",
        "title" : "AgeRatingDeclarationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "ageRatingDeclarations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "alcoholTobaccoOrDrugUseOrReferences" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "contests" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "gamblingAndContests" : {
                    "type" : "boolean",
                    "deprecated" : true
                  },
                  "gambling" : {
                    "type" : "boolean"
                  },
                  "gamblingSimulated" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "kidsAgeBand" : {
                    "$ref" : "#/components/schemas/KidsAgeBand"
                  },
                  "medicalOrTreatmentInformation" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "profanityOrCrudeHumor" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "sexualContentGraphicAndNudity" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "sexualContentOrNudity" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "seventeenPlus" : {
                    "type" : "boolean"
                  },
                  "horrorOrFearThemes" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "matureOrSuggestiveThemes" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "unrestrictedWebAccess" : {
                    "type" : "boolean"
                  },
                  "violenceCartoonOrFantasy" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "violenceRealisticProlongedGraphicOrSadistic" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  },
                  "violenceRealistic" : {
                    "type" : "string",
                    "enum" : [ "NONE", "INFREQUENT_OR_MILD", "FREQUENT_OR_INTENSE" ]
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppAvailability" : {
        "type" : "object",
        "title" : "AppAvailability",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appAvailabilities" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "availableInNewTerritories" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "availableTerritories" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "territories" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppAvailabilityResponse" : {
        "type" : "object",
        "title" : "AppAvailabilityResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppAvailability"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppAvailabilityCreateRequest" : {
        "type" : "object",
        "title" : "AppAvailabilityCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appAvailabilities" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "availableInNewTerritories" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "availableInNewTerritories" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "availableTerritories" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "territories" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app", "availableTerritories" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppCategory" : {
        "type" : "object",
        "title" : "AppCategory",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appCategories" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "platforms" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Platform"
                }
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subcategories" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appCategories" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "parent" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCategories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppCategoriesResponse" : {
        "type" : "object",
        "title" : "AppCategoriesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppCategory"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppCategoryResponse" : {
        "type" : "object",
        "title" : "AppCategoryResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppCategory"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipAdvancedExperienceImage" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperienceImage",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipAdvancedExperienceImages" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "imageAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipAdvancedExperienceImageResponse" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperienceImageResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppClipAdvancedExperienceImage"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipAdvancedExperienceImageCreateRequest" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperienceImageCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipAdvancedExperienceImages" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              }
            },
            "required" : [ "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipAdvancedExperienceImageUpdateRequest" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperienceImageUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipAdvancedExperienceImages" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipAdvancedExperienceLocalization" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperienceLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipAdvancedExperienceLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceLanguage"
              },
              "title" : {
                "type" : "string"
              },
              "subtitle" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipAdvancedExperienceLocalizationInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipAdvancedExperienceLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "language" : {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceLanguage"
              },
              "title" : {
                "type" : "string"
              },
              "subtitle" : {
                "type" : "string"
              }
            }
          }
        },
        "required" : [ "type" ]
      },
      "AppClipAdvancedExperience" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperience",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipAdvancedExperiences" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "link" : {
                "type" : "string",
                "format" : "uri"
              },
              "version" : {
                "type" : "integer"
              },
              "status" : {
                "type" : "string",
                "enum" : [ "RECEIVED", "DEACTIVATED", "APP_TRANSFER_IN_PROGRESS" ]
              },
              "action" : {
                "$ref" : "#/components/schemas/AppClipAction"
              },
              "isPoweredBy" : {
                "type" : "boolean"
              },
              "place" : {
                "type" : "object",
                "properties" : {
                  "placeId" : {
                    "type" : "string"
                  },
                  "names" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "mainAddress" : {
                    "type" : "object",
                    "properties" : {
                      "fullAddress" : {
                        "type" : "string"
                      },
                      "structuredAddress" : {
                        "type" : "object",
                        "properties" : {
                          "streetAddress" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          },
                          "floor" : {
                            "type" : "string"
                          },
                          "neighborhood" : {
                            "type" : "string"
                          },
                          "locality" : {
                            "type" : "string"
                          },
                          "stateProvince" : {
                            "type" : "string"
                          },
                          "postalCode" : {
                            "type" : "string"
                          },
                          "countryCode" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  },
                  "displayPoint" : {
                    "type" : "object",
                    "properties" : {
                      "coordinates" : {
                        "type" : "object",
                        "properties" : {
                          "latitude" : {
                            "type" : "number"
                          },
                          "longitude" : {
                            "type" : "number"
                          }
                        }
                      },
                      "source" : {
                        "type" : "string",
                        "enum" : [ "CALCULATED", "MANUALLY_PLACED" ]
                      }
                    }
                  },
                  "mapAction" : {
                    "type" : "string",
                    "enum" : [ "BUY_TICKETS", "VIEW_AVAILABILITY", "VIEW_PRICING", "HOTEL_BOOK_ROOM", "PARKING_RESERVE_PARKING", "RESTAURANT_JOIN_WAITLIST", "RESTAURANT_ORDER_DELIVERY", "RESTAURANT_ORDER_FOOD", "RESTAURANT_ORDER_TAKEOUT", "RESTAURANT_RESERVATION", "SCHEDULE_APPOINTMENT", "RESTAURANT_VIEW_MENU", "THEATER_NOW_PLAYING" ]
                  },
                  "relationship" : {
                    "type" : "string",
                    "enum" : [ "OWNER", "AUTHORIZED", "OTHER" ]
                  },
                  "phoneNumber" : {
                    "type" : "object",
                    "properties" : {
                      "number" : {
                        "type" : "string"
                      },
                      "type" : {
                        "type" : "string",
                        "enum" : [ "FAX", "LANDLINE", "MOBILE", "TOLLFREE" ]
                      },
                      "intent" : {
                        "type" : "string"
                      }
                    }
                  },
                  "homePage" : {
                    "type" : "string"
                  },
                  "categories" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              },
              "placeStatus" : {
                "type" : "string",
                "enum" : [ "PENDING", "MATCHED", "NO_MATCH" ]
              },
              "businessCategory" : {
                "type" : "string",
                "enum" : [ "AUTOMOTIVE", "BEAUTY", "BIKES", "BOOKS", "CASINO", "EDUCATION", "EDUCATION_JAPAN", "ENTERTAINMENT", "EV_CHARGER", "FINANCIAL_USD", "FINANCIAL_CNY", "FINANCIAL_GBP", "FINANCIAL_JPY", "FINANCIAL_EUR", "FITNESS", "FOOD_AND_DRINK", "GAS", "GROCERY", "HEALTH_AND_MEDICAL", "HOTEL_AND_TRAVEL", "MUSIC", "PARKING", "PET_SERVICES", "PROFESSIONAL_SERVICES", "SHOPPING", "TICKETING", "TRANSIT" ]
              },
              "defaultLanguage" : {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceLanguage"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appClip" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClips" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "headerImage" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipAdvancedExperienceImages" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "localizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appClipAdvancedExperienceLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipAdvancedExperiencesResponse" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperiencesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppClipAdvancedExperience"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppClip"
              }, {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceImage"
              }, {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceLocalization"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipAdvancedExperienceResponse" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperienceResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppClipAdvancedExperience"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppClip"
              }, {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceImage"
              }, {
                "$ref" : "#/components/schemas/AppClipAdvancedExperienceLocalization"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipAdvancedExperienceCreateRequest" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperienceCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipAdvancedExperiences" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "link" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "action" : {
                    "$ref" : "#/components/schemas/AppClipAction"
                  },
                  "isPoweredBy" : {
                    "type" : "boolean"
                  },
                  "place" : {
                    "type" : "object",
                    "properties" : {
                      "placeId" : {
                        "type" : "string"
                      },
                      "names" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "mainAddress" : {
                        "type" : "object",
                        "properties" : {
                          "fullAddress" : {
                            "type" : "string"
                          },
                          "structuredAddress" : {
                            "type" : "object",
                            "properties" : {
                              "streetAddress" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "floor" : {
                                "type" : "string"
                              },
                              "neighborhood" : {
                                "type" : "string"
                              },
                              "locality" : {
                                "type" : "string"
                              },
                              "stateProvince" : {
                                "type" : "string"
                              },
                              "postalCode" : {
                                "type" : "string"
                              },
                              "countryCode" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "displayPoint" : {
                        "type" : "object",
                        "properties" : {
                          "coordinates" : {
                            "type" : "object",
                            "properties" : {
                              "latitude" : {
                                "type" : "number"
                              },
                              "longitude" : {
                                "type" : "number"
                              }
                            }
                          },
                          "source" : {
                            "type" : "string",
                            "enum" : [ "CALCULATED", "MANUALLY_PLACED" ]
                          }
                        }
                      },
                      "mapAction" : {
                        "type" : "string",
                        "enum" : [ "BUY_TICKETS", "VIEW_AVAILABILITY", "VIEW_PRICING", "HOTEL_BOOK_ROOM", "PARKING_RESERVE_PARKING", "RESTAURANT_JOIN_WAITLIST", "RESTAURANT_ORDER_DELIVERY", "RESTAURANT_ORDER_FOOD", "RESTAURANT_ORDER_TAKEOUT", "RESTAURANT_RESERVATION", "SCHEDULE_APPOINTMENT", "RESTAURANT_VIEW_MENU", "THEATER_NOW_PLAYING" ]
                      },
                      "relationship" : {
                        "type" : "string",
                        "enum" : [ "OWNER", "AUTHORIZED", "OTHER" ]
                      },
                      "phoneNumber" : {
                        "type" : "object",
                        "properties" : {
                          "number" : {
                            "type" : "string"
                          },
                          "type" : {
                            "type" : "string",
                            "enum" : [ "FAX", "LANDLINE", "MOBILE", "TOLLFREE" ]
                          },
                          "intent" : {
                            "type" : "string"
                          }
                        }
                      },
                      "homePage" : {
                        "type" : "string"
                      },
                      "categories" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "businessCategory" : {
                    "type" : "string",
                    "enum" : [ "AUTOMOTIVE", "BEAUTY", "BIKES", "BOOKS", "CASINO", "EDUCATION", "EDUCATION_JAPAN", "ENTERTAINMENT", "EV_CHARGER", "FINANCIAL_USD", "FINANCIAL_CNY", "FINANCIAL_GBP", "FINANCIAL_JPY", "FINANCIAL_EUR", "FITNESS", "FOOD_AND_DRINK", "GAS", "GROCERY", "HEALTH_AND_MEDICAL", "HOTEL_AND_TRAVEL", "MUSIC", "PARKING", "PET_SERVICES", "PROFESSIONAL_SERVICES", "SHOPPING", "TICKETING", "TRANSIT" ]
                  },
                  "defaultLanguage" : {
                    "$ref" : "#/components/schemas/AppClipAdvancedExperienceLanguage"
                  }
                },
                "required" : [ "defaultLanguage", "isPoweredBy", "link" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appClip" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClips" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "headerImage" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClipAdvancedExperienceImages" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "localizations" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "appClipAdvancedExperienceLocalizations" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appClip", "headerImage", "localizations" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppClipAdvancedExperienceLocalizationInlineCreate"
            }
          }
        },
        "required" : [ "data" ]
      },
      "AppClipAdvancedExperienceUpdateRequest" : {
        "type" : "object",
        "title" : "AppClipAdvancedExperienceUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipAdvancedExperiences" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "$ref" : "#/components/schemas/AppClipAction"
                  },
                  "isPoweredBy" : {
                    "type" : "boolean"
                  },
                  "place" : {
                    "type" : "object",
                    "properties" : {
                      "placeId" : {
                        "type" : "string"
                      },
                      "names" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "mainAddress" : {
                        "type" : "object",
                        "properties" : {
                          "fullAddress" : {
                            "type" : "string"
                          },
                          "structuredAddress" : {
                            "type" : "object",
                            "properties" : {
                              "streetAddress" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "floor" : {
                                "type" : "string"
                              },
                              "neighborhood" : {
                                "type" : "string"
                              },
                              "locality" : {
                                "type" : "string"
                              },
                              "stateProvince" : {
                                "type" : "string"
                              },
                              "postalCode" : {
                                "type" : "string"
                              },
                              "countryCode" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      },
                      "displayPoint" : {
                        "type" : "object",
                        "properties" : {
                          "coordinates" : {
                            "type" : "object",
                            "properties" : {
                              "latitude" : {
                                "type" : "number"
                              },
                              "longitude" : {
                                "type" : "number"
                              }
                            }
                          },
                          "source" : {
                            "type" : "string",
                            "enum" : [ "CALCULATED", "MANUALLY_PLACED" ]
                          }
                        }
                      },
                      "mapAction" : {
                        "type" : "string",
                        "enum" : [ "BUY_TICKETS", "VIEW_AVAILABILITY", "VIEW_PRICING", "HOTEL_BOOK_ROOM", "PARKING_RESERVE_PARKING", "RESTAURANT_JOIN_WAITLIST", "RESTAURANT_ORDER_DELIVERY", "RESTAURANT_ORDER_FOOD", "RESTAURANT_ORDER_TAKEOUT", "RESTAURANT_RESERVATION", "SCHEDULE_APPOINTMENT", "RESTAURANT_VIEW_MENU", "THEATER_NOW_PLAYING" ]
                      },
                      "relationship" : {
                        "type" : "string",
                        "enum" : [ "OWNER", "AUTHORIZED", "OTHER" ]
                      },
                      "phoneNumber" : {
                        "type" : "object",
                        "properties" : {
                          "number" : {
                            "type" : "string"
                          },
                          "type" : {
                            "type" : "string",
                            "enum" : [ "FAX", "LANDLINE", "MOBILE", "TOLLFREE" ]
                          },
                          "intent" : {
                            "type" : "string"
                          }
                        }
                      },
                      "homePage" : {
                        "type" : "string"
                      },
                      "categories" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "businessCategory" : {
                    "type" : "string",
                    "enum" : [ "AUTOMOTIVE", "BEAUTY", "BIKES", "BOOKS", "CASINO", "EDUCATION", "EDUCATION_JAPAN", "ENTERTAINMENT", "EV_CHARGER", "FINANCIAL_USD", "FINANCIAL_CNY", "FINANCIAL_GBP", "FINANCIAL_JPY", "FINANCIAL_EUR", "FITNESS", "FOOD_AND_DRINK", "GAS", "GROCERY", "HEALTH_AND_MEDICAL", "HOTEL_AND_TRAVEL", "MUSIC", "PARKING", "PET_SERVICES", "PROFESSIONAL_SERVICES", "SHOPPING", "TICKETING", "TRANSIT" ]
                  },
                  "defaultLanguage" : {
                    "$ref" : "#/components/schemas/AppClipAdvancedExperienceLanguage"
                  },
                  "removed" : {
                    "type" : "boolean"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appClip" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClips" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "headerImage" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClipAdvancedExperienceImages" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "localizations" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "appClipAdvancedExperienceLocalizations" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppClipAdvancedExperienceLocalizationInlineCreate"
            }
          }
        },
        "required" : [ "data" ]
      },
      "AppClipAppStoreReviewDetail" : {
        "type" : "object",
        "title" : "AppClipAppStoreReviewDetail",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipAppStoreReviewDetails" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "invocationUrls" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uri"
                }
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appClipDefaultExperience" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipDefaultExperiences" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipAppStoreReviewDetailResponse" : {
        "type" : "object",
        "title" : "AppClipAppStoreReviewDetailResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppClipAppStoreReviewDetail"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppClipDefaultExperience"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipAppStoreReviewDetailCreateRequest" : {
        "type" : "object",
        "title" : "AppClipAppStoreReviewDetailCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipAppStoreReviewDetails" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "invocationUrls" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "uri"
                    }
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appClipDefaultExperience" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClipDefaultExperiences" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appClipDefaultExperience" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipAppStoreReviewDetailUpdateRequest" : {
        "type" : "object",
        "title" : "AppClipAppStoreReviewDetailUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipAppStoreReviewDetails" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "invocationUrls" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "uri"
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipDefaultExperienceLocalization" : {
        "type" : "object",
        "title" : "AppClipDefaultExperienceLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipDefaultExperienceLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "locale" : {
                "type" : "string"
              },
              "subtitle" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appClipDefaultExperience" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipDefaultExperiences" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appClipHeaderImage" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipHeaderImages" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipDefaultExperienceLocalizationsResponse" : {
        "type" : "object",
        "title" : "AppClipDefaultExperienceLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppClipDefaultExperience"
              }, {
                "$ref" : "#/components/schemas/AppClipHeaderImage"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipDefaultExperienceLocalizationResponse" : {
        "type" : "object",
        "title" : "AppClipDefaultExperienceLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppClipDefaultExperience"
              }, {
                "$ref" : "#/components/schemas/AppClipHeaderImage"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipDefaultExperienceLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "AppClipDefaultExperienceLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipDefaultExperienceLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "locale" : {
                    "type" : "string"
                  },
                  "subtitle" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appClipDefaultExperience" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClipDefaultExperiences" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appClipDefaultExperience" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipDefaultExperienceLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "AppClipDefaultExperienceLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipDefaultExperienceLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "subtitle" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipDefaultExperience" : {
        "type" : "object",
        "title" : "AppClipDefaultExperience",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipDefaultExperiences" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "action" : {
                "$ref" : "#/components/schemas/AppClipAction"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appClip" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClips" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "releaseWithAppStoreVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appClipDefaultExperienceLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appClipDefaultExperienceLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appClipAppStoreReviewDetail" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipAppStoreReviewDetails" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipDefaultExperiencesResponse" : {
        "type" : "object",
        "title" : "AppClipDefaultExperiencesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppClipDefaultExperience"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppClip"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalization"
              }, {
                "$ref" : "#/components/schemas/AppClipAppStoreReviewDetail"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipDefaultExperienceResponse" : {
        "type" : "object",
        "title" : "AppClipDefaultExperienceResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppClipDefaultExperience"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppClip"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalization"
              }, {
                "$ref" : "#/components/schemas/AppClipAppStoreReviewDetail"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipDefaultExperienceCreateRequest" : {
        "type" : "object",
        "title" : "AppClipDefaultExperienceCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipDefaultExperiences" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "$ref" : "#/components/schemas/AppClipAction"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appClip" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClips" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "releaseWithAppStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appClipDefaultExperienceTemplate" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClipDefaultExperiences" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                },
                "required" : [ "appClip" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipDefaultExperienceUpdateRequest" : {
        "type" : "object",
        "title" : "AppClipDefaultExperienceUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipDefaultExperiences" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "$ref" : "#/components/schemas/AppClipAction"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "releaseWithAppStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipDomainStatus" : {
        "type" : "object",
        "title" : "AppClipDomainStatus",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipDomainStatuses" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "domains" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "domain" : {
                      "type" : "string"
                    },
                    "isValid" : {
                      "type" : "boolean"
                    },
                    "lastUpdatedDate" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "errorCode" : {
                      "type" : "string",
                      "enum" : [ "BAD_HTTP_RESPONSE", "BAD_JSON_CONTENT", "BAD_PKCS7_SIGNATURE", "CANNOT_REACH_AASA_FILE", "DNS_ERROR", "INSECURE_REDIRECTS_FORBIDDEN", "INVALID_ENTITLEMENT_MISSING_SECTION", "INVALID_ENTITLEMENT_SYNTAX_ERROR", "INVALID_ENTITLEMENT_UNHANDLED_SECTION", "INVALID_ENTITLEMENT_UNKNOWN_ID", "NETWORK_ERROR", "NETWORK_ERROR_TEMPORARY", "OTHER_ERROR", "TIMEOUT", "TLS_ERROR", "UNEXPECTED_ERROR" ]
                    }
                  }
                }
              },
              "lastUpdatedDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipDomainStatusResponse" : {
        "type" : "object",
        "title" : "AppClipDomainStatusResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppClipDomainStatus"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipHeaderImage" : {
        "type" : "object",
        "title" : "AppClipHeaderImage",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClipHeaderImages" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "imageAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appClipDefaultExperienceLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipDefaultExperienceLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipHeaderImageResponse" : {
        "type" : "object",
        "title" : "AppClipHeaderImageResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppClipHeaderImage"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppClipDefaultExperienceLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipHeaderImageCreateRequest" : {
        "type" : "object",
        "title" : "AppClipHeaderImageCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipHeaderImages" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appClipDefaultExperienceLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClipDefaultExperienceLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appClipDefaultExperienceLocalization" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipHeaderImageUpdateRequest" : {
        "type" : "object",
        "title" : "AppClipHeaderImageUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipHeaderImages" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClip" : {
        "type" : "object",
        "title" : "AppClip",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appClips" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "bundleId" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appClipDefaultExperiences" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appClipDefaultExperiences" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppClipsResponse" : {
        "type" : "object",
        "title" : "AppClipsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppClip"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AppClipDefaultExperience"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipResponse" : {
        "type" : "object",
        "title" : "AppClipResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppClip"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AppClipDefaultExperience"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppCustomProductPageLocalization" : {
        "type" : "object",
        "title" : "AppCustomProductPageLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appCustomProductPageLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "locale" : {
                "type" : "string"
              },
              "promotionalText" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appCustomProductPageVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCustomProductPageVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appScreenshotSets" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appScreenshotSets" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appPreviewSets" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appPreviewSets" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppCustomProductPageLocalizationInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appCustomProductPageLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "locale" : {
                "type" : "string"
              },
              "promotionalText" : {
                "type" : "string"
              }
            },
            "required" : [ "locale" ]
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appCustomProductPageVersion" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCustomProductPageVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          }
        },
        "required" : [ "attributes", "type" ]
      },
      "AppCustomProductPageLocalizationsResponse" : {
        "type" : "object",
        "title" : "AppCustomProductPageLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppCustomProductPageLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppCustomProductPageVersion"
              }, {
                "$ref" : "#/components/schemas/AppScreenshotSet"
              }, {
                "$ref" : "#/components/schemas/AppPreviewSet"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppCustomProductPageLocalizationResponse" : {
        "type" : "object",
        "title" : "AppCustomProductPageLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppCustomProductPageLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppCustomProductPageVersion"
              }, {
                "$ref" : "#/components/schemas/AppScreenshotSet"
              }, {
                "$ref" : "#/components/schemas/AppPreviewSet"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppCustomProductPageLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "AppCustomProductPageLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appCustomProductPageLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "locale" : {
                    "type" : "string"
                  },
                  "promotionalText" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appCustomProductPageVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCustomProductPageVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appCustomProductPageVersion" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppCustomProductPageLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "AppCustomProductPageLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appCustomProductPageLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "promotionalText" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppCustomProductPageVersion" : {
        "type" : "object",
        "title" : "AppCustomProductPageVersion",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appCustomProductPageVersions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "version" : {
                "type" : "string"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "PREPARE_FOR_SUBMISSION", "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "ACCEPTED", "APPROVED", "REPLACED_WITH_NEW_VERSION", "REJECTED" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appCustomProductPage" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCustomProductPages" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appCustomProductPageLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appCustomProductPageLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppCustomProductPageVersionInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appCustomProductPageVersions" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appCustomProductPage" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCustomProductPages" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appCustomProductPageLocalizations" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appCustomProductPageLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          }
        },
        "required" : [ "type" ]
      },
      "AppCustomProductPageVersionsResponse" : {
        "type" : "object",
        "title" : "AppCustomProductPageVersionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppCustomProductPageVersion"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppCustomProductPage"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalization"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppCustomProductPageVersionResponse" : {
        "type" : "object",
        "title" : "AppCustomProductPageVersionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppCustomProductPageVersion"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppCustomProductPage"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalization"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppCustomProductPageVersionCreateRequest" : {
        "type" : "object",
        "title" : "AppCustomProductPageVersionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appCustomProductPageVersions" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appCustomProductPage" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCustomProductPages" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "appCustomProductPageLocalizations" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "appCustomProductPageLocalizations" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                },
                "required" : [ "appCustomProductPage" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppCustomProductPage" : {
        "type" : "object",
        "title" : "AppCustomProductPage",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appCustomProductPages" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "url" : {
                "type" : "string",
                "format" : "uri"
              },
              "visible" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appCustomProductPageVersions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appCustomProductPageVersions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppCustomProductPagesResponse" : {
        "type" : "object",
        "title" : "AppCustomProductPagesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppCustomProductPage"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageVersion"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppCustomProductPageResponse" : {
        "type" : "object",
        "title" : "AppCustomProductPageResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppCustomProductPage"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageVersion"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppCustomProductPageCreateRequest" : {
        "type" : "object",
        "title" : "AppCustomProductPageCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appCustomProductPages" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                },
                "required" : [ "name" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "appCustomProductPageVersions" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "appCustomProductPageVersions" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  },
                  "appStoreVersionTemplate" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "customProductPageTemplate" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCustomProductPages" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalizationInlineCreate"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageVersionInlineCreate"
              } ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "AppCustomProductPageUpdateRequest" : {
        "type" : "object",
        "title" : "AppCustomProductPageUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appCustomProductPages" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "visible" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEncryptionDeclarationDocument" : {
        "type" : "object",
        "title" : "AppEncryptionDeclarationDocument",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appEncryptionDeclarationDocuments" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "assetToken" : {
                "type" : "string"
              },
              "downloadUrl" : {
                "type" : "string",
                "format" : "uri"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppEncryptionDeclarationDocumentResponse" : {
        "type" : "object",
        "title" : "AppEncryptionDeclarationDocumentResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppEncryptionDeclarationDocument"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEncryptionDeclarationDocumentCreateRequest" : {
        "type" : "object",
        "title" : "AppEncryptionDeclarationDocumentCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEncryptionDeclarationDocuments" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appEncryptionDeclaration" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appEncryptionDeclarations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appEncryptionDeclaration" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEncryptionDeclarationDocumentUpdateRequest" : {
        "type" : "object",
        "title" : "AppEncryptionDeclarationDocumentUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEncryptionDeclarationDocuments" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEncryptionDeclaration" : {
        "type" : "object",
        "title" : "AppEncryptionDeclaration",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appEncryptionDeclarations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "appDescription" : {
                "type" : "string"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "usesEncryption" : {
                "type" : "boolean",
                "deprecated" : true
              },
              "exempt" : {
                "type" : "boolean"
              },
              "containsProprietaryCryptography" : {
                "type" : "boolean"
              },
              "containsThirdPartyCryptography" : {
                "type" : "boolean"
              },
              "availableOnFrenchStore" : {
                "type" : "boolean"
              },
              "platform" : {
                "deprecated" : true,
                "$ref" : "#/components/schemas/Platform"
              },
              "uploadedDate" : {
                "type" : "string",
                "format" : "date-time",
                "deprecated" : true
              },
              "documentUrl" : {
                "type" : "string",
                "deprecated" : true
              },
              "documentName" : {
                "type" : "string",
                "deprecated" : true
              },
              "documentType" : {
                "type" : "string",
                "deprecated" : true
              },
              "appEncryptionDeclarationState" : {
                "$ref" : "#/components/schemas/AppEncryptionDeclarationState"
              },
              "codeValue" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "builds" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "builds" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appEncryptionDeclarationDocument" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appEncryptionDeclarationDocuments" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppEncryptionDeclarationsResponse" : {
        "type" : "object",
        "title" : "AppEncryptionDeclarationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEncryptionDeclaration"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/AppEncryptionDeclarationDocument"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEncryptionDeclarationResponse" : {
        "type" : "object",
        "title" : "AppEncryptionDeclarationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppEncryptionDeclaration"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/AppEncryptionDeclarationDocument"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventLocalization" : {
        "type" : "object",
        "title" : "AppEventLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appEventLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "locale" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "shortDescription" : {
                "type" : "string"
              },
              "longDescription" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appEvent" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appEvents" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appEventScreenshots" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appEventScreenshots" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appEventVideoClips" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appEventVideoClips" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppEventLocalizationsResponse" : {
        "type" : "object",
        "title" : "AppEventLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppEvent"
              }, {
                "$ref" : "#/components/schemas/AppEventScreenshot"
              }, {
                "$ref" : "#/components/schemas/AppEventVideoClip"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventLocalizationResponse" : {
        "type" : "object",
        "title" : "AppEventLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppEventLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppEvent"
              }, {
                "$ref" : "#/components/schemas/AppEventScreenshot"
              }, {
                "$ref" : "#/components/schemas/AppEventVideoClip"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "AppEventLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEventLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "locale" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "shortDescription" : {
                    "type" : "string"
                  },
                  "longDescription" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appEvent" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appEvents" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appEvent" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEventLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "AppEventLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEventLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "shortDescription" : {
                    "type" : "string"
                  },
                  "longDescription" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEventScreenshot" : {
        "type" : "object",
        "title" : "AppEventScreenshot",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appEventScreenshots" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "imageAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "assetToken" : {
                "type" : "string"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              },
              "appEventAssetType" : {
                "$ref" : "#/components/schemas/AppEventAssetType"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appEventLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appEventLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppEventScreenshotsResponse" : {
        "type" : "object",
        "title" : "AppEventScreenshotsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventScreenshot"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventScreenshotResponse" : {
        "type" : "object",
        "title" : "AppEventScreenshotResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppEventScreenshot"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventScreenshotCreateRequest" : {
        "type" : "object",
        "title" : "AppEventScreenshotCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEventScreenshots" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  },
                  "appEventAssetType" : {
                    "$ref" : "#/components/schemas/AppEventAssetType"
                  }
                },
                "required" : [ "fileName", "appEventAssetType", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appEventLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appEventLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appEventLocalization" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEventScreenshotUpdateRequest" : {
        "type" : "object",
        "title" : "AppEventScreenshotUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEventScreenshots" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEventVideoClip" : {
        "type" : "object",
        "title" : "AppEventVideoClip",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appEventVideoClips" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "previewFrameTimeCode" : {
                "type" : "string"
              },
              "videoUrl" : {
                "type" : "string"
              },
              "previewImage" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              },
              "appEventAssetType" : {
                "$ref" : "#/components/schemas/AppEventAssetType"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appEventLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appEventLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppEventVideoClipsResponse" : {
        "type" : "object",
        "title" : "AppEventVideoClipsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventVideoClip"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventVideoClipResponse" : {
        "type" : "object",
        "title" : "AppEventVideoClipResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppEventVideoClip"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventVideoClipCreateRequest" : {
        "type" : "object",
        "title" : "AppEventVideoClipCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEventVideoClips" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  },
                  "previewFrameTimeCode" : {
                    "type" : "string"
                  },
                  "appEventAssetType" : {
                    "$ref" : "#/components/schemas/AppEventAssetType"
                  }
                },
                "required" : [ "fileName", "appEventAssetType", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appEventLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appEventLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appEventLocalization" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEventVideoClipUpdateRequest" : {
        "type" : "object",
        "title" : "AppEventVideoClipUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEventVideoClips" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "previewFrameTimeCode" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEvent" : {
        "type" : "object",
        "title" : "AppEvent",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appEvents" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "referenceName" : {
                "type" : "string"
              },
              "badge" : {
                "type" : "string",
                "enum" : [ "LIVE_EVENT", "PREMIERE", "CHALLENGE", "COMPETITION", "NEW_SEASON", "MAJOR_UPDATE", "SPECIAL_EVENT" ]
              },
              "eventState" : {
                "type" : "string",
                "enum" : [ "DRAFT", "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "ACCEPTED", "APPROVED", "PUBLISHED", "PAST", "ARCHIVED" ]
              },
              "deepLink" : {
                "type" : "string",
                "format" : "uri"
              },
              "purchaseRequirement" : {
                "type" : "string",
                "enum" : [ "NO_COST_ASSOCIATED", "IN_APP_PURCHASE", "SUBSCRIPTION", "IN_APP_PURCHASE_AND_SUBSCRIPTION", "IN_APP_PURCHASE_OR_SUBSCRIPTION" ]
              },
              "primaryLocale" : {
                "type" : "string"
              },
              "priority" : {
                "type" : "string",
                "enum" : [ "HIGH", "NORMAL" ]
              },
              "purpose" : {
                "type" : "string",
                "enum" : [ "APPROPRIATE_FOR_ALL_USERS", "ATTRACT_NEW_USERS", "KEEP_ACTIVE_USERS_INFORMED", "BRING_BACK_LAPSED_USERS" ]
              },
              "territorySchedules" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "territories" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "publishStart" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "eventStart" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "eventEnd" : {
                      "type" : "string",
                      "format" : "date-time"
                    }
                  }
                }
              },
              "archivedTerritorySchedules" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "territories" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "publishStart" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "eventStart" : {
                      "type" : "string",
                      "format" : "date-time"
                    },
                    "eventEnd" : {
                      "type" : "string",
                      "format" : "date-time"
                    }
                  }
                }
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "localizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appEventLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppEventsResponse" : {
        "type" : "object",
        "title" : "AppEventsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEvent"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventResponse" : {
        "type" : "object",
        "title" : "AppEventResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppEvent"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppEventLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppEventCreateRequest" : {
        "type" : "object",
        "title" : "AppEventCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEvents" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "referenceName" : {
                    "type" : "string"
                  },
                  "badge" : {
                    "type" : "string",
                    "enum" : [ "LIVE_EVENT", "PREMIERE", "CHALLENGE", "COMPETITION", "NEW_SEASON", "MAJOR_UPDATE", "SPECIAL_EVENT" ]
                  },
                  "deepLink" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "purchaseRequirement" : {
                    "type" : "string",
                    "enum" : [ "NO_COST_ASSOCIATED", "IN_APP_PURCHASE", "SUBSCRIPTION", "IN_APP_PURCHASE_AND_SUBSCRIPTION", "IN_APP_PURCHASE_OR_SUBSCRIPTION" ]
                  },
                  "primaryLocale" : {
                    "type" : "string"
                  },
                  "priority" : {
                    "type" : "string",
                    "enum" : [ "HIGH", "NORMAL" ]
                  },
                  "purpose" : {
                    "type" : "string",
                    "enum" : [ "APPROPRIATE_FOR_ALL_USERS", "ATTRACT_NEW_USERS", "KEEP_ACTIVE_USERS_INFORMED", "BRING_BACK_LAPSED_USERS" ]
                  },
                  "territorySchedules" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "territories" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "publishStart" : {
                          "type" : "string",
                          "format" : "date-time"
                        },
                        "eventStart" : {
                          "type" : "string",
                          "format" : "date-time"
                        },
                        "eventEnd" : {
                          "type" : "string",
                          "format" : "date-time"
                        }
                      }
                    }
                  }
                },
                "required" : [ "referenceName" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEventUpdateRequest" : {
        "type" : "object",
        "title" : "AppEventUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEvents" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "referenceName" : {
                    "type" : "string"
                  },
                  "badge" : {
                    "type" : "string",
                    "enum" : [ "LIVE_EVENT", "PREMIERE", "CHALLENGE", "COMPETITION", "NEW_SEASON", "MAJOR_UPDATE", "SPECIAL_EVENT" ]
                  },
                  "deepLink" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "purchaseRequirement" : {
                    "type" : "string",
                    "enum" : [ "NO_COST_ASSOCIATED", "IN_APP_PURCHASE", "SUBSCRIPTION", "IN_APP_PURCHASE_AND_SUBSCRIPTION", "IN_APP_PURCHASE_OR_SUBSCRIPTION" ]
                  },
                  "primaryLocale" : {
                    "type" : "string"
                  },
                  "priority" : {
                    "type" : "string",
                    "enum" : [ "HIGH", "NORMAL" ]
                  },
                  "purpose" : {
                    "type" : "string",
                    "enum" : [ "APPROPRIATE_FOR_ALL_USERS", "ATTRACT_NEW_USERS", "KEEP_ACTIVE_USERS_INFORMED", "BRING_BACK_LAPSED_USERS" ]
                  },
                  "territorySchedules" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "territories" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "publishStart" : {
                          "type" : "string",
                          "format" : "date-time"
                        },
                        "eventStart" : {
                          "type" : "string",
                          "format" : "date-time"
                        },
                        "eventEnd" : {
                          "type" : "string",
                          "format" : "date-time"
                        }
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppInfoLocalization" : {
        "type" : "object",
        "title" : "AppInfoLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appInfoLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "locale" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "subtitle" : {
                "type" : "string"
              },
              "privacyPolicyUrl" : {
                "type" : "string"
              },
              "privacyChoicesUrl" : {
                "type" : "string"
              },
              "privacyPolicyText" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appInfo" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appInfos" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppInfoLocalizationsResponse" : {
        "type" : "object",
        "title" : "AppInfoLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppInfoLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppInfo"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppInfoLocalizationResponse" : {
        "type" : "object",
        "title" : "AppInfoLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppInfoLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppInfo"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppInfoLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "AppInfoLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appInfoLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "locale" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "subtitle" : {
                    "type" : "string"
                  },
                  "privacyPolicyUrl" : {
                    "type" : "string"
                  },
                  "privacyChoicesUrl" : {
                    "type" : "string"
                  },
                  "privacyPolicyText" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appInfo" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appInfos" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appInfo" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppInfoLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "AppInfoLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appInfoLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "subtitle" : {
                    "type" : "string"
                  },
                  "privacyPolicyUrl" : {
                    "type" : "string"
                  },
                  "privacyChoicesUrl" : {
                    "type" : "string"
                  },
                  "privacyPolicyText" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppInfo" : {
        "type" : "object",
        "title" : "AppInfo",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appInfos" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "appStoreState" : {
                "$ref" : "#/components/schemas/AppStoreVersionState"
              },
              "appStoreAgeRating" : {
                "$ref" : "#/components/schemas/AppStoreAgeRating"
              },
              "brazilAgeRating" : {
                "deprecated" : true,
                "$ref" : "#/components/schemas/BrazilAgeRating"
              },
              "brazilAgeRatingV2" : {
                "type" : "string",
                "enum" : [ "SELF_RATED_L", "SELF_RATED_TEN", "SELF_RATED_TWELVE", "SELF_RATED_FOURTEEN", "SELF_RATED_SIXTEEN", "SELF_RATED_EIGHTEEN", "OFFICIAL_L", "OFFICIAL_TEN", "OFFICIAL_TWELVE", "OFFICIAL_FOURTEEN", "OFFICIAL_SIXTEEN", "OFFICIAL_EIGHTEEN" ]
              },
              "kidsAgeBand" : {
                "$ref" : "#/components/schemas/KidsAgeBand"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "ageRatingDeclaration" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ageRatingDeclarations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appInfoLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appInfoLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "primaryCategory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCategories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "primarySubcategoryOne" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCategories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "primarySubcategoryTwo" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCategories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "secondaryCategory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCategories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "secondarySubcategoryOne" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCategories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "secondarySubcategoryTwo" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCategories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppInfosResponse" : {
        "type" : "object",
        "title" : "AppInfosResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppInfo"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AgeRatingDeclaration"
              }, {
                "$ref" : "#/components/schemas/AppInfoLocalization"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppInfoResponse" : {
        "type" : "object",
        "title" : "AppInfoResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppInfo"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AgeRatingDeclaration"
              }, {
                "$ref" : "#/components/schemas/AppInfoLocalization"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              }, {
                "$ref" : "#/components/schemas/AppCategory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppInfoUpdateRequest" : {
        "type" : "object",
        "title" : "AppInfoUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appInfos" ]
              },
              "id" : {
                "type" : "string"
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "primaryCategory" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCategories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "primarySubcategoryOne" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCategories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "primarySubcategoryTwo" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCategories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "secondaryCategory" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCategories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "secondarySubcategoryOne" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCategories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "secondarySubcategoryTwo" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCategories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppPreOrder" : {
        "type" : "object",
        "title" : "AppPreOrder",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPreOrders" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "preOrderAvailableDate" : {
                "type" : "string",
                "format" : "date"
              },
              "appReleaseDate" : {
                "type" : "string",
                "format" : "date"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppPreOrderResponse" : {
        "type" : "object",
        "title" : "AppPreOrderResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppPreOrder"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPreOrderCreateRequest" : {
        "type" : "object",
        "title" : "AppPreOrderCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appPreOrders" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "appReleaseDate" : {
                    "type" : "string",
                    "format" : "date"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppPreOrderUpdateRequest" : {
        "type" : "object",
        "title" : "AppPreOrderUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appPreOrders" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "appReleaseDate" : {
                    "type" : "string",
                    "format" : "date"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppPreviewSet" : {
        "type" : "object",
        "title" : "AppPreviewSet",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPreviewSets" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "previewType" : {
                "$ref" : "#/components/schemas/PreviewType"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersionLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appCustomProductPageLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCustomProductPageLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersionExperimentTreatmentLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionExperimentTreatmentLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appPreviews" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appPreviews" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppPreviewSetsResponse" : {
        "type" : "object",
        "title" : "AppPreviewSetsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPreviewSet"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersionLocalization"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalization"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
              }, {
                "$ref" : "#/components/schemas/AppPreview"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPreviewSetResponse" : {
        "type" : "object",
        "title" : "AppPreviewSetResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppPreviewSet"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersionLocalization"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalization"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
              }, {
                "$ref" : "#/components/schemas/AppPreview"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPreviewSetCreateRequest" : {
        "type" : "object",
        "title" : "AppPreviewSetCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appPreviewSets" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "previewType" : {
                    "$ref" : "#/components/schemas/PreviewType"
                  }
                },
                "required" : [ "previewType" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersionLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersionLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appCustomProductPageLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCustomProductPageLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appStoreVersionExperimentTreatmentLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersionExperimentTreatmentLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppPreview" : {
        "type" : "object",
        "title" : "AppPreview",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPreviews" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "previewFrameTimeCode" : {
                "type" : "string"
              },
              "mimeType" : {
                "type" : "string"
              },
              "videoUrl" : {
                "type" : "string"
              },
              "previewImage" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appPreviewSet" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appPreviewSets" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppPreviewsResponse" : {
        "type" : "object",
        "title" : "AppPreviewsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPreview"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPreviewSet"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPreviewResponse" : {
        "type" : "object",
        "title" : "AppPreviewResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppPreview"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPreviewSet"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPreviewCreateRequest" : {
        "type" : "object",
        "title" : "AppPreviewCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appPreviews" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  },
                  "previewFrameTimeCode" : {
                    "type" : "string"
                  },
                  "mimeType" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appPreviewSet" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appPreviewSets" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appPreviewSet" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppPreviewUpdateRequest" : {
        "type" : "object",
        "title" : "AppPreviewUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appPreviews" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "previewFrameTimeCode" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppPricePointV2" : {
        "type" : "object",
        "title" : "AppPricePointV2",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPricePoints" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "customerPrice" : {
                "type" : "string"
              },
              "proceeds" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "priceTier" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appPriceTiers" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ],
        "deprecated" : true
      },
      "AppPricePointsV2Response" : {
        "type" : "object",
        "title" : "AppPricePointsV2Response",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPricePointV2"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AppPriceTier"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ],
        "deprecated" : true
      },
      "AppPricePointV3" : {
        "type" : "object",
        "title" : "AppPricePointV3",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPricePoints" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "customerPrice" : {
                "type" : "string"
              },
              "proceeds" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppPricePointsV3Response" : {
        "type" : "object",
        "title" : "AppPricePointsV3Response",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPricePointV3"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPricePointV3Response" : {
        "type" : "object",
        "title" : "AppPricePointV3Response",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppPricePointV3"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPricePoint" : {
        "type" : "object",
        "title" : "AppPricePoint",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPricePoints" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "customerPrice" : {
                "type" : "string"
              },
              "proceeds" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "priceTier" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appPriceTiers" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ],
        "deprecated" : true
      },
      "AppPricePointsResponse" : {
        "type" : "object",
        "title" : "AppPricePointsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPricePoint"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppPriceTier"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ],
        "deprecated" : true
      },
      "AppPricePointResponse" : {
        "type" : "object",
        "title" : "AppPricePointResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppPricePoint"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppPriceTier"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ],
        "deprecated" : true
      },
      "AppPriceSchedule" : {
        "type" : "object",
        "title" : "AppPriceSchedule",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPriceSchedules" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "baseTerritory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "manualPrices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appPrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "automaticPrices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appPrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppPriceScheduleResponse" : {
        "type" : "object",
        "title" : "AppPriceScheduleResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppPriceSchedule"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/AppPriceV2"
              }, {
                "$ref" : "#/components/schemas/AppPriceV2"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPriceScheduleCreateRequest" : {
        "type" : "object",
        "title" : "AppPriceScheduleCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appPriceSchedules" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "baseTerritory" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "territories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "manualPrices" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "appPrices" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app", "manualPrices", "baseTerritory" ]
              }
            },
            "required" : [ "relationships", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppPriceV2InlineCreate"
              }, {
                "$ref" : "#/components/schemas/TerritoryInlineCreate"
              } ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "AppPriceTier" : {
        "type" : "object",
        "title" : "AppPriceTier",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPriceTiers" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "pricePoints" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appPricePoints" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                },
                "deprecated" : true
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ],
        "deprecated" : true
      },
      "AppPriceTiersResponse" : {
        "type" : "object",
        "title" : "AppPriceTiersResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPriceTier"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPricePoint"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ],
        "deprecated" : true
      },
      "AppPriceTierResponse" : {
        "type" : "object",
        "title" : "AppPriceTierResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppPriceTier"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPricePoint"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ],
        "deprecated" : true
      },
      "AppPriceV2" : {
        "type" : "object",
        "title" : "AppPriceV2",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "manual" : {
                "type" : "boolean"
              },
              "startDate" : {
                "type" : "string",
                "format" : "date"
              },
              "endDate" : {
                "type" : "string",
                "format" : "date"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appPricePoint" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppPriceV2InlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPrices" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "AppPricesV2Response" : {
        "type" : "object",
        "title" : "AppPricesV2Response",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPriceV2"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppPricePointV3"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPrice" : {
        "type" : "object",
        "title" : "AppPrice",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "priceTier" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appPriceTiers" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ],
        "deprecated" : true
      },
      "AppPriceInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appPrices" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "AppPricesResponse" : {
        "type" : "object",
        "title" : "AppPricesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPrice"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AppPriceTier"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ],
        "deprecated" : true
      },
      "AppPriceResponse" : {
        "type" : "object",
        "title" : "AppPriceResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppPrice"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AppPriceTier"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ],
        "deprecated" : true
      },
      "AppScreenshotSet" : {
        "type" : "object",
        "title" : "AppScreenshotSet",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appScreenshotSets" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "screenshotDisplayType" : {
                "$ref" : "#/components/schemas/ScreenshotDisplayType"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersionLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appCustomProductPageLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCustomProductPageLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersionExperimentTreatmentLocalization" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionExperimentTreatmentLocalizations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appScreenshots" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appScreenshots" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppScreenshotSetsResponse" : {
        "type" : "object",
        "title" : "AppScreenshotSetsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppScreenshotSet"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersionLocalization"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalization"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
              }, {
                "$ref" : "#/components/schemas/AppScreenshot"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppScreenshotSetResponse" : {
        "type" : "object",
        "title" : "AppScreenshotSetResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppScreenshotSet"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersionLocalization"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageLocalization"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
              }, {
                "$ref" : "#/components/schemas/AppScreenshot"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppScreenshotSetCreateRequest" : {
        "type" : "object",
        "title" : "AppScreenshotSetCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appScreenshotSets" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "screenshotDisplayType" : {
                    "$ref" : "#/components/schemas/ScreenshotDisplayType"
                  }
                },
                "required" : [ "screenshotDisplayType" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersionLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersionLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appCustomProductPageLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCustomProductPageLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appStoreVersionExperimentTreatmentLocalization" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersionExperimentTreatmentLocalizations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppScreenshot" : {
        "type" : "object",
        "title" : "AppScreenshot",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appScreenshots" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "imageAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "assetToken" : {
                "type" : "string"
              },
              "assetType" : {
                "type" : "string"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appScreenshotSet" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appScreenshotSets" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppScreenshotsResponse" : {
        "type" : "object",
        "title" : "AppScreenshotsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppScreenshot"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppScreenshotSet"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppScreenshotResponse" : {
        "type" : "object",
        "title" : "AppScreenshotResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppScreenshot"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppScreenshotSet"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppScreenshotCreateRequest" : {
        "type" : "object",
        "title" : "AppScreenshotCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appScreenshots" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appScreenshotSet" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appScreenshotSets" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appScreenshotSet" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppScreenshotUpdateRequest" : {
        "type" : "object",
        "title" : "AppScreenshotUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appScreenshots" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreReviewAttachment" : {
        "type" : "object",
        "title" : "AppStoreReviewAttachment",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreReviewAttachments" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreReviewDetail" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreReviewDetails" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreReviewAttachmentsResponse" : {
        "type" : "object",
        "title" : "AppStoreReviewAttachmentsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreReviewAttachment"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreReviewDetail"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreReviewAttachmentResponse" : {
        "type" : "object",
        "title" : "AppStoreReviewAttachmentResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreReviewAttachment"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreReviewDetail"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreReviewAttachmentCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreReviewAttachmentCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreReviewAttachments" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreReviewDetail" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreReviewDetails" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreReviewDetail" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreReviewAttachmentUpdateRequest" : {
        "type" : "object",
        "title" : "AppStoreReviewAttachmentUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreReviewAttachments" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreReviewDetail" : {
        "type" : "object",
        "title" : "AppStoreReviewDetail",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreReviewDetails" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "contactFirstName" : {
                "type" : "string"
              },
              "contactLastName" : {
                "type" : "string"
              },
              "contactPhone" : {
                "type" : "string"
              },
              "contactEmail" : {
                "type" : "string"
              },
              "demoAccountName" : {
                "type" : "string"
              },
              "demoAccountPassword" : {
                "type" : "string"
              },
              "demoAccountRequired" : {
                "type" : "boolean"
              },
              "notes" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreReviewAttachments" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appStoreReviewAttachments" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreReviewDetailResponse" : {
        "type" : "object",
        "title" : "AppStoreReviewDetailResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreReviewDetail"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppStoreReviewAttachment"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreReviewDetailCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreReviewDetailCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreReviewDetails" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "contactFirstName" : {
                    "type" : "string"
                  },
                  "contactLastName" : {
                    "type" : "string"
                  },
                  "contactPhone" : {
                    "type" : "string"
                  },
                  "contactEmail" : {
                    "type" : "string"
                  },
                  "demoAccountName" : {
                    "type" : "string"
                  },
                  "demoAccountPassword" : {
                    "type" : "string"
                  },
                  "demoAccountRequired" : {
                    "type" : "boolean"
                  },
                  "notes" : {
                    "type" : "string"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersion" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreReviewDetailUpdateRequest" : {
        "type" : "object",
        "title" : "AppStoreReviewDetailUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreReviewDetails" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "contactFirstName" : {
                    "type" : "string"
                  },
                  "contactLastName" : {
                    "type" : "string"
                  },
                  "contactPhone" : {
                    "type" : "string"
                  },
                  "contactEmail" : {
                    "type" : "string"
                  },
                  "demoAccountName" : {
                    "type" : "string"
                  },
                  "demoAccountPassword" : {
                    "type" : "string"
                  },
                  "demoAccountRequired" : {
                    "type" : "boolean"
                  },
                  "notes" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionExperimentTreatmentLocalization" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatmentLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersionExperimentTreatmentLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "locale" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersionExperimentTreatment" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionExperimentTreatments" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appScreenshotSets" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appScreenshotSets" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appPreviewSets" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appPreviewSets" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreVersionExperimentTreatmentLocalizationsResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatmentLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatment"
              }, {
                "$ref" : "#/components/schemas/AppScreenshotSet"
              }, {
                "$ref" : "#/components/schemas/AppPreviewSet"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionExperimentTreatmentLocalizationResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatmentLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatment"
              }, {
                "$ref" : "#/components/schemas/AppScreenshotSet"
              }, {
                "$ref" : "#/components/schemas/AppPreviewSet"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionExperimentTreatmentLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatmentLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionExperimentTreatmentLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "locale" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersionExperimentTreatment" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersionExperimentTreatments" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersionExperimentTreatment" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionExperimentTreatment" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatment",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersionExperimentTreatments" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "appIcon" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "appIconName" : {
                "type" : "string"
              },
              "promotedDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersionExperiment" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionExperiments" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersionExperimentTreatmentLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appStoreVersionExperimentTreatmentLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreVersionExperimentTreatmentsResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatmentsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatment"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersionExperiment"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionExperimentTreatmentResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatmentResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatment"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersionExperiment"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatmentLocalization"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionExperimentTreatmentCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatmentCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionExperimentTreatments" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "appIconName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "name" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersionExperiment" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersionExperiments" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersionExperiment" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionExperimentTreatmentUpdateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentTreatmentUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionExperimentTreatments" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "appIconName" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionExperiment" : {
        "type" : "object",
        "title" : "AppStoreVersionExperiment",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersionExperiments" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "trafficProportion" : {
                "type" : "integer"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "PREPARE_FOR_SUBMISSION", "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "ACCEPTED", "APPROVED", "REJECTED", "COMPLETED", "STOPPED" ]
              },
              "reviewRequired" : {
                "type" : "boolean"
              },
              "startDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "endDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersionExperimentTreatments" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appStoreVersionExperimentTreatments" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreVersionExperimentsResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreVersionExperiment"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatment"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionExperimentResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersionExperiment"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperimentTreatment"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionExperimentCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionExperiments" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "trafficProportion" : {
                    "type" : "integer"
                  }
                },
                "required" : [ "trafficProportion", "name" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersion" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionExperimentUpdateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionExperimentUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionExperiments" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "trafficProportion" : {
                    "type" : "integer"
                  },
                  "started" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionLocalization" : {
        "type" : "object",
        "title" : "AppStoreVersionLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersionLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string"
              },
              "locale" : {
                "type" : "string"
              },
              "keywords" : {
                "type" : "string"
              },
              "marketingUrl" : {
                "type" : "string",
                "format" : "uri"
              },
              "promotionalText" : {
                "type" : "string"
              },
              "supportUrl" : {
                "type" : "string",
                "format" : "uri"
              },
              "whatsNew" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appScreenshotSets" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appScreenshotSets" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appPreviewSets" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appPreviewSets" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreVersionLocalizationsResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreVersionLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppScreenshotSet"
              }, {
                "$ref" : "#/components/schemas/AppPreviewSet"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionLocalizationResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersionLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppScreenshotSet"
              }, {
                "$ref" : "#/components/schemas/AppPreviewSet"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "locale" : {
                    "type" : "string"
                  },
                  "keywords" : {
                    "type" : "string"
                  },
                  "marketingUrl" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "promotionalText" : {
                    "type" : "string"
                  },
                  "supportUrl" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "whatsNew" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersion" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "description" : {
                    "type" : "string"
                  },
                  "keywords" : {
                    "type" : "string"
                  },
                  "marketingUrl" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "promotionalText" : {
                    "type" : "string"
                  },
                  "supportUrl" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "whatsNew" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionPhasedRelease" : {
        "type" : "object",
        "title" : "AppStoreVersionPhasedRelease",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersionPhasedReleases" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "phasedReleaseState" : {
                "$ref" : "#/components/schemas/PhasedReleaseState"
              },
              "startDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "totalPauseDuration" : {
                "type" : "integer"
              },
              "currentDayNumber" : {
                "type" : "integer"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreVersionPhasedReleaseResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionPhasedReleaseResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersionPhasedRelease"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionPhasedReleaseCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionPhasedReleaseCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionPhasedReleases" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "phasedReleaseState" : {
                    "$ref" : "#/components/schemas/PhasedReleaseState"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersion" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionPhasedReleaseUpdateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionPhasedReleaseUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionPhasedReleases" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "phasedReleaseState" : {
                    "$ref" : "#/components/schemas/PhasedReleaseState"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionPromotion" : {
        "type" : "object",
        "title" : "AppStoreVersionPromotion",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersionPromotions" ]
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreVersionPromotionResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionPromotionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersionPromotion"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionPromotionCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionPromotionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionPromotions" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "appStoreVersionExperimentTreatment" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersionExperimentTreatments" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersionExperimentTreatment", "appStoreVersion" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionReleaseRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionReleaseRequest",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersionReleaseRequests" ]
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreVersionReleaseRequestResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionReleaseRequestResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersionReleaseRequest"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionReleaseRequestCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionReleaseRequestCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionReleaseRequests" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersion" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionSubmission" : {
        "type" : "object",
        "title" : "AppStoreVersionSubmission",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersionSubmissions" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ],
        "deprecated" : true
      },
      "AppStoreVersionSubmissionResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionSubmissionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersionSubmission"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreVersion"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ],
        "deprecated" : true
      },
      "AppStoreVersionSubmissionCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionSubmissionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersionSubmissions" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersion" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ],
        "deprecated" : true
      },
      "AppStoreVersion" : {
        "type" : "object",
        "title" : "AppStoreVersion",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "appStoreVersions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "platform" : {
                "$ref" : "#/components/schemas/Platform"
              },
              "versionString" : {
                "type" : "string"
              },
              "appStoreState" : {
                "$ref" : "#/components/schemas/AppStoreVersionState"
              },
              "copyright" : {
                "type" : "string"
              },
              "releaseType" : {
                "type" : "string",
                "enum" : [ "MANUAL", "AFTER_APPROVAL", "SCHEDULED" ]
              },
              "earliestReleaseDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "downloadable" : {
                "type" : "boolean"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "ageRatingDeclaration" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ageRatingDeclarations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                },
                "deprecated" : true
              },
              "appStoreVersionLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appStoreVersionLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "build" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "builds" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersionPhasedRelease" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionPhasedReleases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "routingAppCoverage" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "routingAppCoverages" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreReviewDetail" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreReviewDetails" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersionSubmission" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionSubmissions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appClipDefaultExperience" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipDefaultExperiences" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersionExperiments" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appStoreVersionExperiments" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppStoreVersionsResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreVersion"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AgeRatingDeclaration"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionLocalization"
              }, {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionPhasedRelease"
              }, {
                "$ref" : "#/components/schemas/RoutingAppCoverage"
              }, {
                "$ref" : "#/components/schemas/AppStoreReviewDetail"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionSubmission"
              }, {
                "$ref" : "#/components/schemas/AppClipDefaultExperience"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperiment"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionResponse" : {
        "type" : "object",
        "title" : "AppStoreVersionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/AppStoreVersion"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/AgeRatingDeclaration"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionLocalization"
              }, {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionPhasedRelease"
              }, {
                "$ref" : "#/components/schemas/RoutingAppCoverage"
              }, {
                "$ref" : "#/components/schemas/AppStoreReviewDetail"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionSubmission"
              }, {
                "$ref" : "#/components/schemas/AppClipDefaultExperience"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperiment"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionCreateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersions" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "platform" : {
                    "$ref" : "#/components/schemas/Platform"
                  },
                  "versionString" : {
                    "type" : "string"
                  },
                  "copyright" : {
                    "type" : "string"
                  },
                  "releaseType" : {
                    "type" : "string",
                    "enum" : [ "MANUAL", "AFTER_APPROVAL", "SCHEDULED" ]
                  },
                  "earliestReleaseDate" : {
                    "type" : "string",
                    "format" : "date-time"
                  }
                },
                "required" : [ "versionString", "platform" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "appStoreVersionLocalizations" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "appStoreVersionLocalizations" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  },
                  "build" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "builds" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionUpdateRequest" : {
        "type" : "object",
        "title" : "AppStoreVersionUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersions" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "versionString" : {
                    "type" : "string"
                  },
                  "copyright" : {
                    "type" : "string"
                  },
                  "releaseType" : {
                    "type" : "string",
                    "enum" : [ "MANUAL", "AFTER_APPROVAL", "SCHEDULED" ]
                  },
                  "earliestReleaseDate" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "downloadable" : {
                    "type" : "boolean"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "build" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "builds" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appClipDefaultExperience" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appClipDefaultExperiences" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "App" : {
        "type" : "object",
        "title" : "App",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "apps" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "bundleId" : {
                "type" : "string"
              },
              "sku" : {
                "type" : "string"
              },
              "primaryLocale" : {
                "type" : "string"
              },
              "isOrEverWasMadeForKids" : {
                "type" : "boolean"
              },
              "subscriptionStatusUrl" : {
                "type" : "string",
                "format" : "uri"
              },
              "subscriptionStatusUrlVersion" : {
                "$ref" : "#/components/schemas/SubscriptionStatusUrlVersion"
              },
              "subscriptionStatusUrlForSandbox" : {
                "type" : "string",
                "format" : "uri"
              },
              "subscriptionStatusUrlVersionForSandbox" : {
                "$ref" : "#/components/schemas/SubscriptionStatusUrlVersion"
              },
              "availableInNewTerritories" : {
                "type" : "boolean",
                "deprecated" : true
              },
              "contentRightsDeclaration" : {
                "type" : "string",
                "enum" : [ "DOES_NOT_USE_THIRD_PARTY_CONTENT", "USES_THIRD_PARTY_CONTENT" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "ciProduct" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ciProducts" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "betaGroups" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaGroups" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appStoreVersions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appStoreVersions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "preReleaseVersions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "preReleaseVersions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "betaAppLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaAppLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "builds" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "builds" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "betaLicenseAgreement" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "betaLicenseAgreements" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "betaAppReviewDetail" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "betaAppReviewDetails" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appInfos" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appInfos" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appClips" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appClips" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "endUserLicenseAgreement" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "endUserLicenseAgreements" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "preOrder" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appPreOrders" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "prices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appPrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                },
                "deprecated" : true
              },
              "availableTerritories" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "territories" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                },
                "deprecated" : true
              },
              "inAppPurchases" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "inAppPurchases" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                },
                "deprecated" : true
              },
              "subscriptionGroups" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionGroups" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "gameCenterEnabledVersions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "gameCenterEnabledVersions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appCustomProductPages" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appCustomProductPages" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "inAppPurchasesV2" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "inAppPurchases" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "promotedPurchases" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "promotedPurchases" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appEvents" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "appEvents" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "reviewSubmissions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "reviewSubmissions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "subscriptionGracePeriod" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionGracePeriods" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "AppsResponse" : {
        "type" : "object",
        "title" : "AppsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/CiProduct"
              }, {
                "$ref" : "#/components/schemas/BetaGroup"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/PrereleaseVersion"
              }, {
                "$ref" : "#/components/schemas/BetaAppLocalization"
              }, {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/BetaLicenseAgreement"
              }, {
                "$ref" : "#/components/schemas/BetaAppReviewDetail"
              }, {
                "$ref" : "#/components/schemas/AppInfo"
              }, {
                "$ref" : "#/components/schemas/AppClip"
              }, {
                "$ref" : "#/components/schemas/EndUserLicenseAgreement"
              }, {
                "$ref" : "#/components/schemas/AppPreOrder"
              }, {
                "$ref" : "#/components/schemas/AppPrice"
              }, {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/InAppPurchase"
              }, {
                "$ref" : "#/components/schemas/SubscriptionGroup"
              }, {
                "$ref" : "#/components/schemas/GameCenterEnabledVersion"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPage"
              }, {
                "$ref" : "#/components/schemas/InAppPurchaseV2"
              }, {
                "$ref" : "#/components/schemas/PromotedPurchase"
              }, {
                "$ref" : "#/components/schemas/AppEvent"
              }, {
                "$ref" : "#/components/schemas/ReviewSubmission"
              }, {
                "$ref" : "#/components/schemas/SubscriptionGracePeriod"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppResponse" : {
        "type" : "object",
        "title" : "AppResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/App"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/CiProduct"
              }, {
                "$ref" : "#/components/schemas/BetaGroup"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/PrereleaseVersion"
              }, {
                "$ref" : "#/components/schemas/BetaAppLocalization"
              }, {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/BetaLicenseAgreement"
              }, {
                "$ref" : "#/components/schemas/BetaAppReviewDetail"
              }, {
                "$ref" : "#/components/schemas/AppInfo"
              }, {
                "$ref" : "#/components/schemas/AppClip"
              }, {
                "$ref" : "#/components/schemas/EndUserLicenseAgreement"
              }, {
                "$ref" : "#/components/schemas/AppPreOrder"
              }, {
                "$ref" : "#/components/schemas/AppPrice"
              }, {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/InAppPurchase"
              }, {
                "$ref" : "#/components/schemas/SubscriptionGroup"
              }, {
                "$ref" : "#/components/schemas/GameCenterEnabledVersion"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPage"
              }, {
                "$ref" : "#/components/schemas/InAppPurchaseV2"
              }, {
                "$ref" : "#/components/schemas/PromotedPurchase"
              }, {
                "$ref" : "#/components/schemas/AppEvent"
              }, {
                "$ref" : "#/components/schemas/ReviewSubmission"
              }, {
                "$ref" : "#/components/schemas/SubscriptionGracePeriod"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppUpdateRequest" : {
        "type" : "object",
        "title" : "AppUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "apps" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "bundleId" : {
                    "type" : "string"
                  },
                  "primaryLocale" : {
                    "type" : "string"
                  },
                  "subscriptionStatusUrl" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "subscriptionStatusUrlVersion" : {
                    "$ref" : "#/components/schemas/SubscriptionStatusUrlVersion"
                  },
                  "subscriptionStatusUrlForSandbox" : {
                    "type" : "string",
                    "format" : "uri"
                  },
                  "subscriptionStatusUrlVersionForSandbox" : {
                    "$ref" : "#/components/schemas/SubscriptionStatusUrlVersion"
                  },
                  "availableInNewTerritories" : {
                    "type" : "boolean",
                    "deprecated" : true
                  },
                  "contentRightsDeclaration" : {
                    "type" : "string",
                    "enum" : [ "DOES_NOT_USE_THIRD_PARTY_CONTENT", "USES_THIRD_PARTY_CONTENT" ]
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "prices" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "appPrices" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "deprecated" : true
                  },
                  "availableTerritories" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "territories" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "deprecated" : true
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppPriceInlineCreate"
            }
          }
        },
        "required" : [ "data" ]
      },
      "BetaAppClipInvocationLocalization" : {
        "type" : "object",
        "title" : "BetaAppClipInvocationLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaAppClipInvocationLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "title" : {
                "type" : "string"
              },
              "locale" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaAppClipInvocationLocalizationInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaAppClipInvocationLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "title" : {
                "type" : "string"
              },
              "locale" : {
                "type" : "string"
              }
            },
            "required" : [ "locale", "title" ]
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "betaAppClipInvocation" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "betaAppClipInvocations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          }
        },
        "required" : [ "attributes", "type" ]
      },
      "BetaAppClipInvocationLocalizationResponse" : {
        "type" : "object",
        "title" : "BetaAppClipInvocationLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaAppClipInvocationLocalization"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppClipInvocationLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "BetaAppClipInvocationLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaAppClipInvocationLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "title" : {
                    "type" : "string"
                  },
                  "locale" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale", "title" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "betaAppClipInvocation" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "betaAppClipInvocations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "betaAppClipInvocation" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaAppClipInvocationLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "BetaAppClipInvocationLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaAppClipInvocationLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "title" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaAppClipInvocation" : {
        "type" : "object",
        "title" : "BetaAppClipInvocation",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaAppClipInvocations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "url" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "betaAppClipInvocationLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaAppClipInvocationLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaAppClipInvocationsResponse" : {
        "type" : "object",
        "title" : "BetaAppClipInvocationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaAppClipInvocation"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaAppClipInvocationLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppClipInvocationResponse" : {
        "type" : "object",
        "title" : "BetaAppClipInvocationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaAppClipInvocation"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaAppClipInvocationLocalization"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppClipInvocationCreateRequest" : {
        "type" : "object",
        "title" : "BetaAppClipInvocationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaAppClipInvocations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "url" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                },
                "required" : [ "url" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "buildBundle" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "buildBundles" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "betaAppClipInvocationLocalizations" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "betaAppClipInvocationLocalizations" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "buildBundle", "betaAppClipInvocationLocalizations" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaAppClipInvocationLocalizationInlineCreate"
            }
          }
        },
        "required" : [ "data" ]
      },
      "BetaAppClipInvocationUpdateRequest" : {
        "type" : "object",
        "title" : "BetaAppClipInvocationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaAppClipInvocations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "url" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaAppLocalization" : {
        "type" : "object",
        "title" : "BetaAppLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaAppLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "feedbackEmail" : {
                "type" : "string"
              },
              "marketingUrl" : {
                "type" : "string"
              },
              "privacyPolicyUrl" : {
                "type" : "string"
              },
              "tvOsPrivacyPolicy" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "locale" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaAppLocalizationsResponse" : {
        "type" : "object",
        "title" : "BetaAppLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaAppLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppLocalizationResponse" : {
        "type" : "object",
        "title" : "BetaAppLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaAppLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "BetaAppLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaAppLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "feedbackEmail" : {
                    "type" : "string"
                  },
                  "marketingUrl" : {
                    "type" : "string"
                  },
                  "privacyPolicyUrl" : {
                    "type" : "string"
                  },
                  "tvOsPrivacyPolicy" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "locale" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaAppLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "BetaAppLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaAppLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "feedbackEmail" : {
                    "type" : "string"
                  },
                  "marketingUrl" : {
                    "type" : "string"
                  },
                  "privacyPolicyUrl" : {
                    "type" : "string"
                  },
                  "tvOsPrivacyPolicy" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaAppReviewDetail" : {
        "type" : "object",
        "title" : "BetaAppReviewDetail",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaAppReviewDetails" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "contactFirstName" : {
                "type" : "string"
              },
              "contactLastName" : {
                "type" : "string"
              },
              "contactPhone" : {
                "type" : "string"
              },
              "contactEmail" : {
                "type" : "string"
              },
              "demoAccountName" : {
                "type" : "string"
              },
              "demoAccountPassword" : {
                "type" : "string"
              },
              "demoAccountRequired" : {
                "type" : "boolean"
              },
              "notes" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaAppReviewDetailsResponse" : {
        "type" : "object",
        "title" : "BetaAppReviewDetailsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaAppReviewDetail"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppReviewDetailResponse" : {
        "type" : "object",
        "title" : "BetaAppReviewDetailResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaAppReviewDetail"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppReviewDetailUpdateRequest" : {
        "type" : "object",
        "title" : "BetaAppReviewDetailUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaAppReviewDetails" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "contactFirstName" : {
                    "type" : "string"
                  },
                  "contactLastName" : {
                    "type" : "string"
                  },
                  "contactPhone" : {
                    "type" : "string"
                  },
                  "contactEmail" : {
                    "type" : "string"
                  },
                  "demoAccountName" : {
                    "type" : "string"
                  },
                  "demoAccountPassword" : {
                    "type" : "string"
                  },
                  "demoAccountRequired" : {
                    "type" : "boolean"
                  },
                  "notes" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaAppReviewSubmission" : {
        "type" : "object",
        "title" : "BetaAppReviewSubmission",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaAppReviewSubmissions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "betaReviewState" : {
                "$ref" : "#/components/schemas/BetaReviewState"
              },
              "submittedDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "build" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "builds" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaAppReviewSubmissionsResponse" : {
        "type" : "object",
        "title" : "BetaAppReviewSubmissionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaAppReviewSubmission"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppReviewSubmissionResponse" : {
        "type" : "object",
        "title" : "BetaAppReviewSubmissionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaAppReviewSubmission"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaAppReviewSubmissionCreateRequest" : {
        "type" : "object",
        "title" : "BetaAppReviewSubmissionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaAppReviewSubmissions" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "build" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "builds" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "build" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaBuildLocalization" : {
        "type" : "object",
        "title" : "BetaBuildLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaBuildLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "whatsNew" : {
                "type" : "string"
              },
              "locale" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "build" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "builds" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaBuildLocalizationsResponse" : {
        "type" : "object",
        "title" : "BetaBuildLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaBuildLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaBuildLocalizationResponse" : {
        "type" : "object",
        "title" : "BetaBuildLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaBuildLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaBuildLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "BetaBuildLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaBuildLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "whatsNew" : {
                    "type" : "string"
                  },
                  "locale" : {
                    "type" : "string"
                  }
                },
                "required" : [ "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "build" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "builds" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "build" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaBuildLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "BetaBuildLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaBuildLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "whatsNew" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaGroup" : {
        "type" : "object",
        "title" : "BetaGroup",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaGroups" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "isInternalGroup" : {
                "type" : "boolean"
              },
              "hasAccessToAllBuilds" : {
                "type" : "boolean"
              },
              "publicLinkEnabled" : {
                "type" : "boolean"
              },
              "publicLinkId" : {
                "type" : "string"
              },
              "publicLinkLimitEnabled" : {
                "type" : "boolean"
              },
              "publicLinkLimit" : {
                "type" : "integer"
              },
              "publicLink" : {
                "type" : "string"
              },
              "feedbackEnabled" : {
                "type" : "boolean"
              },
              "iosBuildsAvailableForAppleSiliconMac" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "builds" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "builds" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "betaTesters" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaTesters" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaGroupsResponse" : {
        "type" : "object",
        "title" : "BetaGroupsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaGroup"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/BetaTester"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaGroupResponse" : {
        "type" : "object",
        "title" : "BetaGroupResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaGroup"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/BetaTester"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaGroupCreateRequest" : {
        "type" : "object",
        "title" : "BetaGroupCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaGroups" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "isInternalGroup" : {
                    "type" : "boolean"
                  },
                  "hasAccessToAllBuilds" : {
                    "type" : "boolean"
                  },
                  "publicLinkEnabled" : {
                    "type" : "boolean"
                  },
                  "publicLinkLimitEnabled" : {
                    "type" : "boolean"
                  },
                  "publicLinkLimit" : {
                    "type" : "integer"
                  },
                  "feedbackEnabled" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "name" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "builds" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "builds" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  },
                  "betaTesters" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "betaTesters" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaGroupUpdateRequest" : {
        "type" : "object",
        "title" : "BetaGroupUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaGroups" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "publicLinkEnabled" : {
                    "type" : "boolean"
                  },
                  "publicLinkLimitEnabled" : {
                    "type" : "boolean"
                  },
                  "publicLinkLimit" : {
                    "type" : "integer"
                  },
                  "feedbackEnabled" : {
                    "type" : "boolean"
                  },
                  "iosBuildsAvailableForAppleSiliconMac" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaLicenseAgreement" : {
        "type" : "object",
        "title" : "BetaLicenseAgreement",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaLicenseAgreements" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "agreementText" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaLicenseAgreementsResponse" : {
        "type" : "object",
        "title" : "BetaLicenseAgreementsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaLicenseAgreement"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaLicenseAgreementResponse" : {
        "type" : "object",
        "title" : "BetaLicenseAgreementResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaLicenseAgreement"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaLicenseAgreementUpdateRequest" : {
        "type" : "object",
        "title" : "BetaLicenseAgreementUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaLicenseAgreements" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "agreementText" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaTesterInvitation" : {
        "type" : "object",
        "title" : "BetaTesterInvitation",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaTesterInvitations" ]
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaTesterInvitationResponse" : {
        "type" : "object",
        "title" : "BetaTesterInvitationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaTesterInvitation"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaTesterInvitationCreateRequest" : {
        "type" : "object",
        "title" : "BetaTesterInvitationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaTesterInvitations" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "betaTester" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "betaTesters" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app", "betaTester" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BetaTester" : {
        "type" : "object",
        "title" : "BetaTester",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "betaTesters" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "firstName" : {
                "type" : "string"
              },
              "lastName" : {
                "type" : "string"
              },
              "email" : {
                "type" : "string",
                "format" : "email"
              },
              "inviteType" : {
                "$ref" : "#/components/schemas/BetaInviteType"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "apps" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "apps" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "betaGroups" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaGroups" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "builds" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "builds" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BetaTestersResponse" : {
        "type" : "object",
        "title" : "BetaTestersResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BetaTester"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/BetaGroup"
              }, {
                "$ref" : "#/components/schemas/Build"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaTesterResponse" : {
        "type" : "object",
        "title" : "BetaTesterResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BetaTester"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/BetaGroup"
              }, {
                "$ref" : "#/components/schemas/Build"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaTesterCreateRequest" : {
        "type" : "object",
        "title" : "BetaTesterCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "betaTesters" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "firstName" : {
                    "type" : "string"
                  },
                  "lastName" : {
                    "type" : "string"
                  },
                  "email" : {
                    "type" : "string",
                    "format" : "email"
                  }
                },
                "required" : [ "email" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "betaGroups" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "betaGroups" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  },
                  "builds" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "builds" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BuildBetaDetail" : {
        "type" : "object",
        "title" : "BuildBetaDetail",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "buildBetaDetails" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "autoNotifyEnabled" : {
                "type" : "boolean"
              },
              "internalBuildState" : {
                "$ref" : "#/components/schemas/InternalBetaState"
              },
              "externalBuildState" : {
                "$ref" : "#/components/schemas/ExternalBetaState"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "build" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "builds" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BuildBetaDetailsResponse" : {
        "type" : "object",
        "title" : "BuildBetaDetailsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildBetaDetail"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BuildBetaDetailResponse" : {
        "type" : "object",
        "title" : "BuildBetaDetailResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BuildBetaDetail"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BuildBetaDetailUpdateRequest" : {
        "type" : "object",
        "title" : "BuildBetaDetailUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "buildBetaDetails" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "autoNotifyEnabled" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BuildBetaNotification" : {
        "type" : "object",
        "title" : "BuildBetaNotification",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "buildBetaNotifications" ]
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BuildBetaNotificationResponse" : {
        "type" : "object",
        "title" : "BuildBetaNotificationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BuildBetaNotification"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BuildBetaNotificationCreateRequest" : {
        "type" : "object",
        "title" : "BuildBetaNotificationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "buildBetaNotifications" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "build" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "builds" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "build" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BuildBundleFileSize" : {
        "type" : "object",
        "title" : "BuildBundleFileSize",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "buildBundleFileSizes" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "deviceModel" : {
                "type" : "string"
              },
              "osVersion" : {
                "type" : "string"
              },
              "downloadBytes" : {
                "type" : "integer"
              },
              "installBytes" : {
                "type" : "integer"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BuildBundleFileSizesResponse" : {
        "type" : "object",
        "title" : "BuildBundleFileSizesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildBundleFileSize"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BuildBundle" : {
        "type" : "object",
        "title" : "BuildBundle",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "buildBundles" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "bundleId" : {
                "type" : "string"
              },
              "bundleType" : {
                "type" : "string",
                "enum" : [ "APP", "APP_CLIP" ]
              },
              "sdkBuild" : {
                "type" : "string"
              },
              "platformBuild" : {
                "type" : "string"
              },
              "fileName" : {
                "type" : "string"
              },
              "hasSirikit" : {
                "type" : "boolean"
              },
              "hasOnDemandResources" : {
                "type" : "boolean"
              },
              "hasPrerenderedIcon" : {
                "type" : "boolean"
              },
              "usesLocationServices" : {
                "type" : "boolean"
              },
              "isIosBuildMacAppStoreCompatible" : {
                "type" : "boolean"
              },
              "includesSymbols" : {
                "type" : "boolean"
              },
              "dSYMUrl" : {
                "type" : "string",
                "format" : "uri"
              },
              "supportedArchitectures" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "requiredCapabilities" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "deviceProtocols" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "locales" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "entitlements" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appClipDomainCacheStatus" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipDomainStatuses" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appClipDomainDebugStatus" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appClipDomainStatuses" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "betaAppClipInvocations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaAppClipInvocations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "buildBundleFileSizes" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "buildBundleFileSizes" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BuildIcon" : {
        "type" : "object",
        "title" : "BuildIcon",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "buildIcons" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "iconAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "iconType" : {
                "$ref" : "#/components/schemas/IconAssetType"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BuildIconsResponse" : {
        "type" : "object",
        "title" : "BuildIconsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildIcon"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "Build" : {
        "type" : "object",
        "title" : "Build",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "builds" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "version" : {
                "type" : "string"
              },
              "uploadedDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "expirationDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "expired" : {
                "type" : "boolean"
              },
              "minOsVersion" : {
                "type" : "string"
              },
              "lsMinimumSystemVersion" : {
                "type" : "string"
              },
              "computedMinMacOsVersion" : {
                "type" : "string"
              },
              "iconAssetToken" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "processingState" : {
                "type" : "string",
                "enum" : [ "PROCESSING", "FAILED", "INVALID", "VALID" ]
              },
              "buildAudienceType" : {
                "$ref" : "#/components/schemas/BuildAudienceType"
              },
              "usesNonExemptEncryption" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "preReleaseVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "preReleaseVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "individualTesters" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaTesters" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "betaGroups" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaGroups" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "betaBuildLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "betaBuildLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appEncryptionDeclaration" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appEncryptionDeclarations" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "betaAppReviewSubmission" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "betaAppReviewSubmissions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "buildBetaDetail" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "buildBetaDetails" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "icons" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "buildIcons" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "buildBundles" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "buildBundles" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BuildsResponse" : {
        "type" : "object",
        "title" : "BuildsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/PrereleaseVersion"
              }, {
                "$ref" : "#/components/schemas/BetaTester"
              }, {
                "$ref" : "#/components/schemas/BetaGroup"
              }, {
                "$ref" : "#/components/schemas/BetaBuildLocalization"
              }, {
                "$ref" : "#/components/schemas/AppEncryptionDeclaration"
              }, {
                "$ref" : "#/components/schemas/BetaAppReviewSubmission"
              }, {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/BuildBetaDetail"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/BuildIcon"
              }, {
                "$ref" : "#/components/schemas/BuildBundle"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BuildResponse" : {
        "type" : "object",
        "title" : "BuildResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Build"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/PrereleaseVersion"
              }, {
                "$ref" : "#/components/schemas/BetaTester"
              }, {
                "$ref" : "#/components/schemas/BetaGroup"
              }, {
                "$ref" : "#/components/schemas/BetaBuildLocalization"
              }, {
                "$ref" : "#/components/schemas/AppEncryptionDeclaration"
              }, {
                "$ref" : "#/components/schemas/BetaAppReviewSubmission"
              }, {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/BuildBetaDetail"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/BuildIcon"
              }, {
                "$ref" : "#/components/schemas/BuildBundle"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BuildUpdateRequest" : {
        "type" : "object",
        "title" : "BuildUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "builds" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "expired" : {
                    "type" : "boolean"
                  },
                  "usesNonExemptEncryption" : {
                    "type" : "boolean"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appEncryptionDeclaration" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appEncryptionDeclarations" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BundleIdCapability" : {
        "type" : "object",
        "title" : "BundleIdCapability",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "bundleIdCapabilities" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "capabilityType" : {
                "$ref" : "#/components/schemas/CapabilityType"
              },
              "settings" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CapabilitySetting"
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BundleIdCapabilitiesResponse" : {
        "type" : "object",
        "title" : "BundleIdCapabilitiesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BundleIdCapability"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BundleIdCapabilityResponse" : {
        "type" : "object",
        "title" : "BundleIdCapabilityResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BundleIdCapability"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BundleIdCapabilityCreateRequest" : {
        "type" : "object",
        "title" : "BundleIdCapabilityCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "bundleIdCapabilities" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "capabilityType" : {
                    "$ref" : "#/components/schemas/CapabilityType"
                  },
                  "settings" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CapabilitySetting"
                    }
                  }
                },
                "required" : [ "capabilityType" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "bundleId" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "bundleIds" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "bundleId" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BundleIdCapabilityUpdateRequest" : {
        "type" : "object",
        "title" : "BundleIdCapabilityUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "bundleIdCapabilities" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "capabilityType" : {
                    "$ref" : "#/components/schemas/CapabilityType"
                  },
                  "settings" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CapabilitySetting"
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BundleId" : {
        "type" : "object",
        "title" : "BundleId",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "bundleIds" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "platform" : {
                "$ref" : "#/components/schemas/BundleIdPlatform"
              },
              "identifier" : {
                "type" : "string"
              },
              "seedId" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "profiles" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "profiles" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "bundleIdCapabilities" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "bundleIdCapabilities" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "BundleIdsResponse" : {
        "type" : "object",
        "title" : "BundleIdsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BundleId"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Profile"
              }, {
                "$ref" : "#/components/schemas/BundleIdCapability"
              }, {
                "$ref" : "#/components/schemas/App"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BundleIdResponse" : {
        "type" : "object",
        "title" : "BundleIdResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BundleId"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Profile"
              }, {
                "$ref" : "#/components/schemas/BundleIdCapability"
              }, {
                "$ref" : "#/components/schemas/App"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BundleIdCreateRequest" : {
        "type" : "object",
        "title" : "BundleIdCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "bundleIds" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "platform" : {
                    "$ref" : "#/components/schemas/BundleIdPlatform"
                  },
                  "identifier" : {
                    "type" : "string"
                  },
                  "seedId" : {
                    "type" : "string"
                  }
                },
                "required" : [ "identifier", "name", "platform" ]
              }
            },
            "required" : [ "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BundleIdUpdateRequest" : {
        "type" : "object",
        "title" : "BundleIdUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "bundleIds" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "Certificate" : {
        "type" : "object",
        "title" : "Certificate",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "certificates" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "certificateType" : {
                "$ref" : "#/components/schemas/CertificateType"
              },
              "displayName" : {
                "type" : "string"
              },
              "serialNumber" : {
                "type" : "string"
              },
              "platform" : {
                "$ref" : "#/components/schemas/BundleIdPlatform"
              },
              "expirationDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "certificateContent" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CertificatesResponse" : {
        "type" : "object",
        "title" : "CertificatesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Certificate"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CertificateResponse" : {
        "type" : "object",
        "title" : "CertificateResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Certificate"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CertificateCreateRequest" : {
        "type" : "object",
        "title" : "CertificateCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "certificates" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "csrContent" : {
                    "type" : "string"
                  },
                  "certificateType" : {
                    "$ref" : "#/components/schemas/CertificateType"
                  }
                },
                "required" : [ "csrContent", "certificateType" ]
              }
            },
            "required" : [ "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "CiArtifact" : {
        "type" : "object",
        "title" : "CiArtifact",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciArtifacts" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileType" : {
                "type" : "string",
                "enum" : [ "ARCHIVE", "ARCHIVE_EXPORT", "LOG_BUNDLE", "RESULT_BUNDLE", "TEST_PRODUCTS", "XCODEBUILD_PRODUCTS" ]
              },
              "fileName" : {
                "type" : "string"
              },
              "fileSize" : {
                "type" : "integer"
              },
              "downloadUrl" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiArtifactsResponse" : {
        "type" : "object",
        "title" : "CiArtifactsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiArtifact"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiArtifactResponse" : {
        "type" : "object",
        "title" : "CiArtifactResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiArtifact"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiBuildAction" : {
        "type" : "object",
        "title" : "CiBuildAction",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciBuildActions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "actionType" : {
                "$ref" : "#/components/schemas/CiActionType"
              },
              "startedDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "finishedDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "issueCounts" : {
                "$ref" : "#/components/schemas/CiIssueCounts"
              },
              "executionProgress" : {
                "$ref" : "#/components/schemas/CiExecutionProgress"
              },
              "completionStatus" : {
                "$ref" : "#/components/schemas/CiCompletionStatus"
              },
              "isRequiredToPass" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "buildRun" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ciBuildRuns" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiBuildActionsResponse" : {
        "type" : "object",
        "title" : "CiBuildActionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiBuildAction"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiBuildRun"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiBuildActionResponse" : {
        "type" : "object",
        "title" : "CiBuildActionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiBuildAction"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiBuildRun"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiBuildRun" : {
        "type" : "object",
        "title" : "CiBuildRun",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciBuildRuns" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "number" : {
                "type" : "integer"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "startedDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "finishedDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "sourceCommit" : {
                "type" : "object",
                "properties" : {
                  "commitSha" : {
                    "type" : "string"
                  },
                  "message" : {
                    "type" : "string"
                  },
                  "author" : {
                    "$ref" : "#/components/schemas/CiGitUser"
                  },
                  "committer" : {
                    "$ref" : "#/components/schemas/CiGitUser"
                  },
                  "webUrl" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              },
              "destinationCommit" : {
                "type" : "object",
                "properties" : {
                  "commitSha" : {
                    "type" : "string"
                  },
                  "message" : {
                    "type" : "string"
                  },
                  "author" : {
                    "$ref" : "#/components/schemas/CiGitUser"
                  },
                  "committer" : {
                    "$ref" : "#/components/schemas/CiGitUser"
                  },
                  "webUrl" : {
                    "type" : "string",
                    "format" : "uri"
                  }
                }
              },
              "isPullRequestBuild" : {
                "type" : "boolean"
              },
              "issueCounts" : {
                "$ref" : "#/components/schemas/CiIssueCounts"
              },
              "executionProgress" : {
                "$ref" : "#/components/schemas/CiExecutionProgress"
              },
              "completionStatus" : {
                "$ref" : "#/components/schemas/CiCompletionStatus"
              },
              "startReason" : {
                "type" : "string",
                "enum" : [ "GIT_REF_CHANGE", "MANUAL", "MANUAL_REBUILD", "PULL_REQUEST_OPEN", "PULL_REQUEST_UPDATE", "SCHEDULE" ]
              },
              "cancelReason" : {
                "type" : "string",
                "enum" : [ "AUTOMATICALLY_BY_NEWER_BUILD", "MANUALLY_BY_USER" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "builds" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "builds" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "workflow" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ciWorkflows" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "product" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ciProducts" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "sourceBranchOrTag" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "scmGitReferences" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "destinationBranch" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "scmGitReferences" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "pullRequest" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "scmPullRequests" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiBuildRunsResponse" : {
        "type" : "object",
        "title" : "CiBuildRunsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiBuildRun"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/CiWorkflow"
              }, {
                "$ref" : "#/components/schemas/CiProduct"
              }, {
                "$ref" : "#/components/schemas/ScmGitReference"
              }, {
                "$ref" : "#/components/schemas/ScmGitReference"
              }, {
                "$ref" : "#/components/schemas/ScmPullRequest"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiBuildRunResponse" : {
        "type" : "object",
        "title" : "CiBuildRunResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiBuildRun"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/CiWorkflow"
              }, {
                "$ref" : "#/components/schemas/CiProduct"
              }, {
                "$ref" : "#/components/schemas/ScmGitReference"
              }, {
                "$ref" : "#/components/schemas/ScmGitReference"
              }, {
                "$ref" : "#/components/schemas/ScmPullRequest"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiBuildRunCreateRequest" : {
        "type" : "object",
        "title" : "CiBuildRunCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "ciBuildRuns" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "clean" : {
                    "type" : "boolean"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "buildRun" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "ciBuildRuns" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "workflow" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "ciWorkflows" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "sourceBranchOrTag" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "scmGitReferences" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "pullRequest" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "scmPullRequests" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "CiIssue" : {
        "type" : "object",
        "title" : "CiIssue",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciIssues" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "issueType" : {
                "type" : "string",
                "enum" : [ "ANALYZER_WARNING", "ERROR", "TEST_FAILURE", "WARNING" ]
              },
              "message" : {
                "type" : "string"
              },
              "fileSource" : {
                "$ref" : "#/components/schemas/FileLocation"
              },
              "category" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiIssuesResponse" : {
        "type" : "object",
        "title" : "CiIssuesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiIssue"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiIssueResponse" : {
        "type" : "object",
        "title" : "CiIssueResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiIssue"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiMacOsVersion" : {
        "type" : "object",
        "title" : "CiMacOsVersion",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciMacOsVersions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "version" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "xcodeVersions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "ciXcodeVersions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiMacOsVersionsResponse" : {
        "type" : "object",
        "title" : "CiMacOsVersionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiMacOsVersion"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiXcodeVersion"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiMacOsVersionResponse" : {
        "type" : "object",
        "title" : "CiMacOsVersionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiMacOsVersion"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiXcodeVersion"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiProduct" : {
        "type" : "object",
        "title" : "CiProduct",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciProducts" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "productType" : {
                "type" : "string",
                "enum" : [ "APP", "FRAMEWORK" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "bundleId" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "bundleIds" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "primaryRepositories" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "scmRepositories" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiProductsResponse" : {
        "type" : "object",
        "title" : "CiProductsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiProduct"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/BundleId"
              }, {
                "$ref" : "#/components/schemas/ScmRepository"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiProductResponse" : {
        "type" : "object",
        "title" : "CiProductResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiProduct"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/BundleId"
              }, {
                "$ref" : "#/components/schemas/ScmRepository"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiTestResult" : {
        "type" : "object",
        "title" : "CiTestResult",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciTestResults" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "className" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/CiTestStatus"
              },
              "fileSource" : {
                "$ref" : "#/components/schemas/FileLocation"
              },
              "message" : {
                "type" : "string"
              },
              "destinationTestResults" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "uuid" : {
                      "type" : "string"
                    },
                    "deviceName" : {
                      "type" : "string"
                    },
                    "osVersion" : {
                      "type" : "string"
                    },
                    "status" : {
                      "$ref" : "#/components/schemas/CiTestStatus"
                    },
                    "duration" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiTestResultsResponse" : {
        "type" : "object",
        "title" : "CiTestResultsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiTestResult"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiTestResultResponse" : {
        "type" : "object",
        "title" : "CiTestResultResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiTestResult"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiWorkflow" : {
        "type" : "object",
        "title" : "CiWorkflow",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciWorkflows" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "branchStartCondition" : {
                "$ref" : "#/components/schemas/CiBranchStartCondition"
              },
              "tagStartCondition" : {
                "$ref" : "#/components/schemas/CiTagStartCondition"
              },
              "pullRequestStartCondition" : {
                "$ref" : "#/components/schemas/CiPullRequestStartCondition"
              },
              "scheduledStartCondition" : {
                "$ref" : "#/components/schemas/CiScheduledStartCondition"
              },
              "actions" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CiAction"
                }
              },
              "isEnabled" : {
                "type" : "boolean"
              },
              "isLockedForEditing" : {
                "type" : "boolean"
              },
              "clean" : {
                "type" : "boolean"
              },
              "containerFilePath" : {
                "type" : "string"
              },
              "lastModifiedDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "product" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ciProducts" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "repository" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "scmRepositories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "xcodeVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ciXcodeVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "macOsVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "ciMacOsVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiWorkflowsResponse" : {
        "type" : "object",
        "title" : "CiWorkflowsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiWorkflow"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/CiProduct"
              }, {
                "$ref" : "#/components/schemas/ScmRepository"
              }, {
                "$ref" : "#/components/schemas/CiXcodeVersion"
              }, {
                "$ref" : "#/components/schemas/CiMacOsVersion"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiWorkflowResponse" : {
        "type" : "object",
        "title" : "CiWorkflowResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiWorkflow"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/CiProduct"
              }, {
                "$ref" : "#/components/schemas/ScmRepository"
              }, {
                "$ref" : "#/components/schemas/CiXcodeVersion"
              }, {
                "$ref" : "#/components/schemas/CiMacOsVersion"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiWorkflowCreateRequest" : {
        "type" : "object",
        "title" : "CiWorkflowCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "ciWorkflows" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "branchStartCondition" : {
                    "$ref" : "#/components/schemas/CiBranchStartCondition"
                  },
                  "tagStartCondition" : {
                    "$ref" : "#/components/schemas/CiTagStartCondition"
                  },
                  "pullRequestStartCondition" : {
                    "$ref" : "#/components/schemas/CiPullRequestStartCondition"
                  },
                  "scheduledStartCondition" : {
                    "$ref" : "#/components/schemas/CiScheduledStartCondition"
                  },
                  "actions" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CiAction"
                    }
                  },
                  "isEnabled" : {
                    "type" : "boolean"
                  },
                  "isLockedForEditing" : {
                    "type" : "boolean"
                  },
                  "clean" : {
                    "type" : "boolean"
                  },
                  "containerFilePath" : {
                    "type" : "string"
                  }
                },
                "required" : [ "containerFilePath", "isEnabled", "name", "description", "clean", "actions" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "product" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "ciProducts" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "repository" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "scmRepositories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "xcodeVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "ciXcodeVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "macOsVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "ciMacOsVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "macOsVersion", "product", "repository", "xcodeVersion" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "CiWorkflowUpdateRequest" : {
        "type" : "object",
        "title" : "CiWorkflowUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "ciWorkflows" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "branchStartCondition" : {
                    "$ref" : "#/components/schemas/CiBranchStartCondition"
                  },
                  "tagStartCondition" : {
                    "$ref" : "#/components/schemas/CiTagStartCondition"
                  },
                  "pullRequestStartCondition" : {
                    "$ref" : "#/components/schemas/CiPullRequestStartCondition"
                  },
                  "scheduledStartCondition" : {
                    "$ref" : "#/components/schemas/CiScheduledStartCondition"
                  },
                  "actions" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/CiAction"
                    }
                  },
                  "isEnabled" : {
                    "type" : "boolean"
                  },
                  "isLockedForEditing" : {
                    "type" : "boolean"
                  },
                  "clean" : {
                    "type" : "boolean"
                  },
                  "containerFilePath" : {
                    "type" : "string"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "xcodeVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "ciXcodeVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "macOsVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "ciMacOsVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "CiXcodeVersion" : {
        "type" : "object",
        "title" : "CiXcodeVersion",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ciXcodeVersions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "version" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "testDestinations" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "deviceTypeName" : {
                      "type" : "string"
                    },
                    "deviceTypeIdentifier" : {
                      "type" : "string"
                    },
                    "availableRuntimes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "runtimeName" : {
                            "type" : "string"
                          },
                          "runtimeIdentifier" : {
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "kind" : {
                      "$ref" : "#/components/schemas/CiTestDestinationKind"
                    }
                  }
                }
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "macOsVersions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "ciMacOsVersions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CiXcodeVersionsResponse" : {
        "type" : "object",
        "title" : "CiXcodeVersionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiXcodeVersion"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiMacOsVersion"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CiXcodeVersionResponse" : {
        "type" : "object",
        "title" : "CiXcodeVersionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CiXcodeVersion"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiMacOsVersion"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CustomerReviewResponseV1" : {
        "type" : "object",
        "title" : "CustomerReviewResponseV1",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "customerReviewResponses" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "responseBody" : {
                "type" : "string"
              },
              "lastModifiedDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "PUBLISHED", "PENDING_PUBLISH" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "review" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "customerReviews" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CustomerReviewResponseV1Response" : {
        "type" : "object",
        "title" : "CustomerReviewResponseV1Response",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CustomerReviewResponseV1"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerReview"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CustomerReviewResponseV1CreateRequest" : {
        "type" : "object",
        "title" : "CustomerReviewResponseV1CreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "customerReviewResponses" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "responseBody" : {
                    "type" : "string"
                  }
                },
                "required" : [ "responseBody" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "review" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "customerReviews" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "review" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "CustomerReview" : {
        "type" : "object",
        "title" : "CustomerReview",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "customerReviews" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "rating" : {
                "type" : "integer",
                "maximum" : 5,
                "minimum" : 1
              },
              "title" : {
                "type" : "string"
              },
              "body" : {
                "type" : "string"
              },
              "reviewerNickname" : {
                "type" : "string"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "territory" : {
                "$ref" : "#/components/schemas/TerritoryCode"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "response" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "customerReviewResponses" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "CustomerReviewsResponse" : {
        "type" : "object",
        "title" : "CustomerReviewsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerReview"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerReviewResponseV1"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "CustomerReviewResponse" : {
        "type" : "object",
        "title" : "CustomerReviewResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CustomerReview"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomerReviewResponseV1"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "Device" : {
        "type" : "object",
        "title" : "Device",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "devices" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "platform" : {
                "$ref" : "#/components/schemas/BundleIdPlatform"
              },
              "udid" : {
                "type" : "string"
              },
              "deviceClass" : {
                "type" : "string",
                "enum" : [ "APPLE_WATCH", "IPAD", "IPHONE", "IPOD", "APPLE_TV", "MAC" ]
              },
              "status" : {
                "type" : "string",
                "enum" : [ "ENABLED", "DISABLED" ]
              },
              "model" : {
                "type" : "string"
              },
              "addedDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "DevicesResponse" : {
        "type" : "object",
        "title" : "DevicesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Device"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "DeviceResponse" : {
        "type" : "object",
        "title" : "DeviceResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Device"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "DeviceCreateRequest" : {
        "type" : "object",
        "title" : "DeviceCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "devices" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "platform" : {
                    "$ref" : "#/components/schemas/BundleIdPlatform"
                  },
                  "udid" : {
                    "type" : "string"
                  }
                },
                "required" : [ "name", "udid", "platform" ]
              }
            },
            "required" : [ "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "DeviceUpdateRequest" : {
        "type" : "object",
        "title" : "DeviceUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "devices" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "status" : {
                    "type" : "string",
                    "enum" : [ "ENABLED", "DISABLED" ]
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "DiagnosticLog" : {
        "type" : "object",
        "title" : "DiagnosticLog",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "diagnosticLogs" ]
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "DiagnosticSignature" : {
        "type" : "object",
        "title" : "DiagnosticSignature",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "diagnosticSignatures" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "diagnosticType" : {
                "type" : "string",
                "enum" : [ "DISK_WRITES", "HANGS" ]
              },
              "signature" : {
                "type" : "string"
              },
              "weight" : {
                "type" : "number"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "DiagnosticSignaturesResponse" : {
        "type" : "object",
        "title" : "DiagnosticSignaturesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticSignature"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "EndUserLicenseAgreement" : {
        "type" : "object",
        "title" : "EndUserLicenseAgreement",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "endUserLicenseAgreements" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "agreementText" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territories" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "territories" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "EndUserLicenseAgreementResponse" : {
        "type" : "object",
        "title" : "EndUserLicenseAgreementResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/EndUserLicenseAgreement"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "EndUserLicenseAgreementCreateRequest" : {
        "type" : "object",
        "title" : "EndUserLicenseAgreementCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "endUserLicenseAgreements" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "agreementText" : {
                    "type" : "string"
                  }
                },
                "required" : [ "agreementText" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "territories" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "territories" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app", "territories" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "EndUserLicenseAgreementUpdateRequest" : {
        "type" : "object",
        "title" : "EndUserLicenseAgreementUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "endUserLicenseAgreements" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "agreementText" : {
                    "type" : "string"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "territories" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "territories" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "GameCenterEnabledVersion" : {
        "type" : "object",
        "title" : "GameCenterEnabledVersion",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "gameCenterEnabledVersions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "platform" : {
                "$ref" : "#/components/schemas/Platform"
              },
              "versionString" : {
                "type" : "string"
              },
              "iconAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "compatibleVersions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "gameCenterEnabledVersions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "GameCenterEnabledVersionsResponse" : {
        "type" : "object",
        "title" : "GameCenterEnabledVersionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GameCenterEnabledVersion"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/GameCenterEnabledVersion"
              }, {
                "$ref" : "#/components/schemas/App"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseAppStoreReviewScreenshot" : {
        "type" : "object",
        "title" : "InAppPurchaseAppStoreReviewScreenshot",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchaseAppStoreReviewScreenshots" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "imageAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "assetToken" : {
                "type" : "string"
              },
              "assetType" : {
                "type" : "string"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchaseV2" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchaseAppStoreReviewScreenshotResponse" : {
        "type" : "object",
        "title" : "InAppPurchaseAppStoreReviewScreenshotResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshot"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseAppStoreReviewScreenshotCreateRequest" : {
        "type" : "object",
        "title" : "InAppPurchaseAppStoreReviewScreenshotCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchaseAppStoreReviewScreenshots" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "inAppPurchaseV2" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "inAppPurchases" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "inAppPurchaseV2" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "InAppPurchaseAppStoreReviewScreenshotUpdateRequest" : {
        "type" : "object",
        "title" : "InAppPurchaseAppStoreReviewScreenshotUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchaseAppStoreReviewScreenshots" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "InAppPurchaseAvailability" : {
        "type" : "object",
        "title" : "InAppPurchaseAvailability",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchaseAvailabilities" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "availableInNewTerritories" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "availableTerritories" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "territories" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchaseAvailabilityResponse" : {
        "type" : "object",
        "title" : "InAppPurchaseAvailabilityResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/InAppPurchaseAvailability"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Territory"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseAvailabilityCreateRequest" : {
        "type" : "object",
        "title" : "InAppPurchaseAvailabilityCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchaseAvailabilities" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "availableInNewTerritories" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "availableInNewTerritories" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "inAppPurchase" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "inAppPurchases" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "availableTerritories" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "territories" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "inAppPurchase", "availableTerritories" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "InAppPurchaseContent" : {
        "type" : "object",
        "title" : "InAppPurchaseContent",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchaseContents" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileName" : {
                "type" : "string"
              },
              "fileSize" : {
                "type" : "integer"
              },
              "url" : {
                "type" : "string",
                "format" : "uri"
              },
              "lastModifiedDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchaseV2" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchaseContentResponse" : {
        "type" : "object",
        "title" : "InAppPurchaseContentResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/InAppPurchaseContent"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseLocalization" : {
        "type" : "object",
        "title" : "InAppPurchaseLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchaseLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "locale" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "PREPARE_FOR_SUBMISSION", "WAITING_FOR_REVIEW", "APPROVED", "REJECTED" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchaseV2" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchaseLocalizationsResponse" : {
        "type" : "object",
        "title" : "InAppPurchaseLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchaseLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseLocalizationResponse" : {
        "type" : "object",
        "title" : "InAppPurchaseLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/InAppPurchaseLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "InAppPurchaseLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchaseLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "locale" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  }
                },
                "required" : [ "name", "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "inAppPurchaseV2" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "inAppPurchases" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "inAppPurchaseV2" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "InAppPurchaseLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "InAppPurchaseLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchaseLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "InAppPurchasePricePoint" : {
        "type" : "object",
        "title" : "InAppPurchasePricePoint",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchasePricePoints" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "customerPrice" : {
                "type" : "string"
              },
              "proceeds" : {
                "type" : "string"
              },
              "priceTier" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchasePricePointsResponse" : {
        "type" : "object",
        "title" : "InAppPurchasePricePointsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchasePricePoint"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Territory"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchasePriceSchedule" : {
        "type" : "object",
        "title" : "InAppPurchasePriceSchedule",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchasePriceSchedules" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchase" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "baseTerritory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "manualPrices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "inAppPurchasePrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "automaticPrices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "inAppPurchasePrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchasePriceScheduleResponse" : {
        "type" : "object",
        "title" : "InAppPurchasePriceScheduleResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/InAppPurchasePriceSchedule"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/InAppPurchaseV2"
              }, {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/InAppPurchasePrice"
              }, {
                "$ref" : "#/components/schemas/InAppPurchasePrice"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchasePriceScheduleCreateRequest" : {
        "type" : "object",
        "title" : "InAppPurchasePriceScheduleCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchasePriceSchedules" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "inAppPurchase" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "inAppPurchases" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "baseTerritory" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "territories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "manualPrices" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "inAppPurchasePrices" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "inAppPurchase", "manualPrices" ]
              }
            },
            "required" : [ "relationships", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/InAppPurchasePriceInlineCreate"
              }, {
                "$ref" : "#/components/schemas/TerritoryInlineCreate"
              } ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "InAppPurchasePrice" : {
        "type" : "object",
        "title" : "InAppPurchasePrice",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchasePrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "startDate" : {
                "type" : "string",
                "format" : "date"
              },
              "endDate" : {
                "type" : "string",
                "format" : "date"
              },
              "manual" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchasePricePoint" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchasePricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchasePriceInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchasePrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "startDate" : {
                "type" : "string",
                "format" : "date"
              },
              "endDate" : {
                "type" : "string",
                "format" : "date"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchaseV2" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "inAppPurchasePricePoint" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchasePricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          }
        },
        "required" : [ "type" ]
      },
      "InAppPurchasePricesResponse" : {
        "type" : "object",
        "title" : "InAppPurchasePricesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchasePrice"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/InAppPurchasePricePoint"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseSubmission" : {
        "type" : "object",
        "title" : "InAppPurchaseSubmission",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchaseSubmissions" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchaseV2" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchaseSubmissionResponse" : {
        "type" : "object",
        "title" : "InAppPurchaseSubmissionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/InAppPurchaseSubmission"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchaseV2"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseSubmissionCreateRequest" : {
        "type" : "object",
        "title" : "InAppPurchaseSubmissionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchaseSubmissions" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "inAppPurchaseV2" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "inAppPurchases" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "inAppPurchaseV2" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "InAppPurchase" : {
        "type" : "object",
        "title" : "InAppPurchase",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchases" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "referenceName" : {
                "type" : "string"
              },
              "productId" : {
                "type" : "string"
              },
              "inAppPurchaseType" : {
                "type" : "string",
                "enum" : [ "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION", "NON_CONSUMABLE", "CONSUMABLE", "NON_RENEWING_SUBSCRIPTION", "FREE_SUBSCRIPTION" ]
              },
              "state" : {
                "type" : "string",
                "enum" : [ "CREATED", "DEVELOPER_SIGNED_OFF", "DEVELOPER_ACTION_NEEDED", "DELETION_IN_PROGRESS", "APPROVED", "DELETED", "REMOVED_FROM_SALE", "DEVELOPER_REMOVED_FROM_SALE", "WAITING_FOR_UPLOAD", "PROCESSING_CONTENT", "REPLACED", "REJECTED", "WAITING_FOR_SCREENSHOT", "PREPARE_FOR_SUBMISSION", "MISSING_METADATA", "READY_TO_SUBMIT", "WAITING_FOR_REVIEW", "IN_REVIEW", "PENDING_DEVELOPER_RELEASE" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "apps" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "apps" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchasesResponse" : {
        "type" : "object",
        "title" : "InAppPurchasesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchase"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseResponse" : {
        "type" : "object",
        "title" : "InAppPurchaseResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/InAppPurchase"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseV2" : {
        "type" : "object",
        "title" : "InAppPurchaseV2",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "inAppPurchases" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "productId" : {
                "type" : "string"
              },
              "inAppPurchaseType" : {
                "$ref" : "#/components/schemas/InAppPurchaseType"
              },
              "state" : {
                "$ref" : "#/components/schemas/InAppPurchaseState"
              },
              "reviewNote" : {
                "type" : "string"
              },
              "familySharable" : {
                "type" : "boolean"
              },
              "contentHosting" : {
                "type" : "boolean"
              },
              "availableInAllTerritories" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchaseLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "inAppPurchaseLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "pricePoints" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "inAppPurchasePricePoints" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "content" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchaseContents" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreReviewScreenshot" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchaseAppStoreReviewScreenshots" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "promotedPurchase" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "promotedPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "iapPriceSchedule" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchasePriceSchedules" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "InAppPurchasesV2Response" : {
        "type" : "object",
        "title" : "InAppPurchasesV2Response",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InAppPurchaseV2"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/InAppPurchaseLocalization"
              }, {
                "$ref" : "#/components/schemas/InAppPurchasePricePoint"
              }, {
                "$ref" : "#/components/schemas/InAppPurchaseContent"
              }, {
                "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshot"
              }, {
                "$ref" : "#/components/schemas/PromotedPurchase"
              }, {
                "$ref" : "#/components/schemas/InAppPurchasePriceSchedule"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseV2Response" : {
        "type" : "object",
        "title" : "InAppPurchaseV2Response",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/InAppPurchaseV2"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/InAppPurchaseLocalization"
              }, {
                "$ref" : "#/components/schemas/InAppPurchasePricePoint"
              }, {
                "$ref" : "#/components/schemas/InAppPurchaseContent"
              }, {
                "$ref" : "#/components/schemas/InAppPurchaseAppStoreReviewScreenshot"
              }, {
                "$ref" : "#/components/schemas/PromotedPurchase"
              }, {
                "$ref" : "#/components/schemas/InAppPurchasePriceSchedule"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "InAppPurchaseV2CreateRequest" : {
        "type" : "object",
        "title" : "InAppPurchaseV2CreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchases" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "productId" : {
                    "type" : "string"
                  },
                  "inAppPurchaseType" : {
                    "$ref" : "#/components/schemas/InAppPurchaseType"
                  },
                  "reviewNote" : {
                    "type" : "string"
                  },
                  "familySharable" : {
                    "type" : "boolean"
                  },
                  "availableInAllTerritories" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "productId", "name", "inAppPurchaseType" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "InAppPurchaseV2UpdateRequest" : {
        "type" : "object",
        "title" : "InAppPurchaseV2UpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "inAppPurchases" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "reviewNote" : {
                    "type" : "string"
                  },
                  "familySharable" : {
                    "type" : "boolean"
                  },
                  "availableInAllTerritories" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "PerfPowerMetric" : {
        "type" : "object",
        "title" : "PerfPowerMetric",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "perfPowerMetrics" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "platform" : {
                "type" : "string",
                "enum" : [ "IOS" ]
              },
              "metricType" : {
                "type" : "string",
                "enum" : [ "DISK", "HANG", "BATTERY", "LAUNCH", "MEMORY", "ANIMATION", "TERMINATION" ]
              },
              "deviceType" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "PrereleaseVersion" : {
        "type" : "object",
        "title" : "PrereleaseVersion",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "preReleaseVersions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "version" : {
                "type" : "string"
              },
              "platform" : {
                "$ref" : "#/components/schemas/Platform"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "builds" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "builds" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "PreReleaseVersionsResponse" : {
        "type" : "object",
        "title" : "PreReleaseVersionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrereleaseVersion"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/App"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "PrereleaseVersionResponse" : {
        "type" : "object",
        "title" : "PrereleaseVersionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PrereleaseVersion"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Build"
              }, {
                "$ref" : "#/components/schemas/App"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "Profile" : {
        "type" : "object",
        "title" : "Profile",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "profiles" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "platform" : {
                "$ref" : "#/components/schemas/BundleIdPlatform"
              },
              "profileType" : {
                "type" : "string",
                "enum" : [ "IOS_APP_DEVELOPMENT", "IOS_APP_STORE", "IOS_APP_ADHOC", "IOS_APP_INHOUSE", "MAC_APP_DEVELOPMENT", "MAC_APP_STORE", "MAC_APP_DIRECT", "TVOS_APP_DEVELOPMENT", "TVOS_APP_STORE", "TVOS_APP_ADHOC", "TVOS_APP_INHOUSE", "MAC_CATALYST_APP_DEVELOPMENT", "MAC_CATALYST_APP_STORE", "MAC_CATALYST_APP_DIRECT" ]
              },
              "profileState" : {
                "type" : "string",
                "enum" : [ "ACTIVE", "INVALID" ]
              },
              "profileContent" : {
                "type" : "string"
              },
              "uuid" : {
                "type" : "string"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "expirationDate" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "bundleId" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "bundleIds" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "devices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "devices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "certificates" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "certificates" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "ProfilesResponse" : {
        "type" : "object",
        "title" : "ProfilesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Profile"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/BundleId"
              }, {
                "$ref" : "#/components/schemas/Device"
              }, {
                "$ref" : "#/components/schemas/Certificate"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ProfileResponse" : {
        "type" : "object",
        "title" : "ProfileResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Profile"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/BundleId"
              }, {
                "$ref" : "#/components/schemas/Device"
              }, {
                "$ref" : "#/components/schemas/Certificate"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ProfileCreateRequest" : {
        "type" : "object",
        "title" : "ProfileCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "profiles" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "profileType" : {
                    "type" : "string",
                    "enum" : [ "IOS_APP_DEVELOPMENT", "IOS_APP_STORE", "IOS_APP_ADHOC", "IOS_APP_INHOUSE", "MAC_APP_DEVELOPMENT", "MAC_APP_STORE", "MAC_APP_DIRECT", "TVOS_APP_DEVELOPMENT", "TVOS_APP_STORE", "TVOS_APP_ADHOC", "TVOS_APP_INHOUSE", "MAC_CATALYST_APP_DEVELOPMENT", "MAC_CATALYST_APP_STORE", "MAC_CATALYST_APP_DIRECT" ]
                  }
                },
                "required" : [ "profileType", "name" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "bundleId" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "bundleIds" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "devices" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "devices" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  },
                  "certificates" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "certificates" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "certificates", "bundleId" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "PromotedPurchaseImage" : {
        "type" : "object",
        "title" : "PromotedPurchaseImage",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "promotedPurchaseImages" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "assetToken" : {
                "type" : "string"
              },
              "imageAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "assetType" : {
                "type" : "string"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "state" : {
                "type" : "string",
                "enum" : [ "AWAITING_UPLOAD", "UPLOAD_COMPLETE", "FAILED", "PREPARE_FOR_SUBMISSION", "WAITING_FOR_REVIEW", "APPROVED", "REJECTED" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "promotedPurchase" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "promotedPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "PromotedPurchaseImagesResponse" : {
        "type" : "object",
        "title" : "PromotedPurchaseImagesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PromotedPurchaseImage"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PromotedPurchase"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "PromotedPurchaseImageResponse" : {
        "type" : "object",
        "title" : "PromotedPurchaseImageResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PromotedPurchaseImage"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PromotedPurchase"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "PromotedPurchaseImageCreateRequest" : {
        "type" : "object",
        "title" : "PromotedPurchaseImageCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "promotedPurchaseImages" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "promotedPurchase" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "promotedPurchases" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "promotedPurchase" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "PromotedPurchaseImageUpdateRequest" : {
        "type" : "object",
        "title" : "PromotedPurchaseImageUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "promotedPurchaseImages" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "PromotedPurchase" : {
        "type" : "object",
        "title" : "PromotedPurchase",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "promotedPurchases" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "visibleForAllUsers" : {
                "type" : "boolean"
              },
              "enabled" : {
                "type" : "boolean"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "APPROVED", "IN_REVIEW", "PREPARE_FOR_SUBMISSION", "REJECTED" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "inAppPurchaseV2" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "inAppPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "promotionImages" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "promotedPurchaseImages" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "PromotedPurchasesResponse" : {
        "type" : "object",
        "title" : "PromotedPurchasesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PromotedPurchase"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/InAppPurchaseV2"
              }, {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/PromotedPurchaseImage"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "PromotedPurchaseResponse" : {
        "type" : "object",
        "title" : "PromotedPurchaseResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PromotedPurchase"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/InAppPurchaseV2"
              }, {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/PromotedPurchaseImage"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "PromotedPurchaseCreateRequest" : {
        "type" : "object",
        "title" : "PromotedPurchaseCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "promotedPurchases" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "visibleForAllUsers" : {
                    "type" : "boolean"
                  },
                  "enabled" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "visibleForAllUsers" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "inAppPurchaseV2" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "inAppPurchases" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "PromotedPurchaseUpdateRequest" : {
        "type" : "object",
        "title" : "PromotedPurchaseUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "promotedPurchases" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "visibleForAllUsers" : {
                    "type" : "boolean"
                  },
                  "enabled" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "ReviewSubmissionItem" : {
        "type" : "object",
        "title" : "ReviewSubmissionItem",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "reviewSubmissionItems" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "state" : {
                "type" : "string",
                "enum" : [ "READY_FOR_REVIEW", "ACCEPTED", "APPROVED", "REJECTED", "REMOVED" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appCustomProductPageVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appCustomProductPageVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appStoreVersionExperiment" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersionExperiments" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "appEvent" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appEvents" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "ReviewSubmissionItemsResponse" : {
        "type" : "object",
        "title" : "ReviewSubmissionItemsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReviewSubmissionItem"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageVersion"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperiment"
              }, {
                "$ref" : "#/components/schemas/AppEvent"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ReviewSubmissionItemResponse" : {
        "type" : "object",
        "title" : "ReviewSubmissionItemResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ReviewSubmissionItem"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/AppStoreVersion"
              }, {
                "$ref" : "#/components/schemas/AppCustomProductPageVersion"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersionExperiment"
              }, {
                "$ref" : "#/components/schemas/AppEvent"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ReviewSubmissionItemCreateRequest" : {
        "type" : "object",
        "title" : "ReviewSubmissionItemCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "reviewSubmissionItems" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "reviewSubmission" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "reviewSubmissions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appCustomProductPageVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appCustomProductPageVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appStoreVersionExperiment" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersionExperiments" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "appEvent" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appEvents" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                },
                "required" : [ "reviewSubmission" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "ReviewSubmissionItemUpdateRequest" : {
        "type" : "object",
        "title" : "ReviewSubmissionItemUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "reviewSubmissionItems" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "resolved" : {
                    "type" : "boolean"
                  },
                  "removed" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "ReviewSubmission" : {
        "type" : "object",
        "title" : "ReviewSubmission",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "reviewSubmissions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "platform" : {
                "$ref" : "#/components/schemas/Platform"
              },
              "submittedDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "READY_FOR_REVIEW", "WAITING_FOR_REVIEW", "IN_REVIEW", "UNRESOLVED_ISSUES", "CANCELING", "COMPLETING", "COMPLETE" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "app" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "apps" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "items" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "reviewSubmissionItems" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appStoreVersionForReview" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "ReviewSubmissionsResponse" : {
        "type" : "object",
        "title" : "ReviewSubmissionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ReviewSubmission"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/ReviewSubmissionItem"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersion"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ReviewSubmissionResponse" : {
        "type" : "object",
        "title" : "ReviewSubmissionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ReviewSubmission"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/App"
              }, {
                "$ref" : "#/components/schemas/ReviewSubmissionItem"
              }, {
                "$ref" : "#/components/schemas/AppStoreVersion"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ReviewSubmissionCreateRequest" : {
        "type" : "object",
        "title" : "ReviewSubmissionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "reviewSubmissions" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "platform" : {
                    "$ref" : "#/components/schemas/Platform"
                  }
                },
                "required" : [ "platform" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "ReviewSubmissionUpdateRequest" : {
        "type" : "object",
        "title" : "ReviewSubmissionUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "reviewSubmissions" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "submitted" : {
                    "type" : "boolean"
                  },
                  "canceled" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "RoutingAppCoverage" : {
        "type" : "object",
        "title" : "RoutingAppCoverage",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "routingAppCoverages" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "appStoreVersion" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "appStoreVersions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "RoutingAppCoverageResponse" : {
        "type" : "object",
        "title" : "RoutingAppCoverageResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RoutingAppCoverage"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppStoreVersion"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "RoutingAppCoverageCreateRequest" : {
        "type" : "object",
        "title" : "RoutingAppCoverageCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "routingAppCoverages" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "appStoreVersion" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "appStoreVersions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "appStoreVersion" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "RoutingAppCoverageUpdateRequest" : {
        "type" : "object",
        "title" : "RoutingAppCoverageUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "routingAppCoverages" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SandboxTesterV2" : {
        "type" : "object",
        "title" : "SandboxTesterV2",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "sandboxTesters" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "firstName" : {
                "type" : "string"
              },
              "lastName" : {
                "type" : "string"
              },
              "acAccountName" : {
                "type" : "string"
              },
              "territory" : {
                "$ref" : "#/components/schemas/TerritoryCode"
              },
              "applePayCompatible" : {
                "type" : "boolean"
              },
              "interruptPurchases" : {
                "type" : "boolean"
              },
              "subscriptionRenewalRate" : {
                "type" : "string",
                "enum" : [ "MONTHLY_RENEWAL_EVERY_ONE_HOUR", "MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES", "MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES", "MONTHLY_RENEWAL_EVERY_FIVE_MINUTES", "MONTHLY_RENEWAL_EVERY_THREE_MINUTES" ]
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SandboxTestersV2Response" : {
        "type" : "object",
        "title" : "SandboxTestersV2Response",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SandboxTesterV2"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SandboxTesterV2Response" : {
        "type" : "object",
        "title" : "SandboxTesterV2Response",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SandboxTesterV2"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SandboxTesterV2UpdateRequest" : {
        "type" : "object",
        "title" : "SandboxTesterV2UpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "sandboxTesters" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "territory" : {
                    "$ref" : "#/components/schemas/TerritoryCode"
                  },
                  "interruptPurchases" : {
                    "type" : "boolean"
                  },
                  "subscriptionRenewalRate" : {
                    "type" : "string",
                    "enum" : [ "MONTHLY_RENEWAL_EVERY_ONE_HOUR", "MONTHLY_RENEWAL_EVERY_THIRTY_MINUTES", "MONTHLY_RENEWAL_EVERY_FIFTEEN_MINUTES", "MONTHLY_RENEWAL_EVERY_FIVE_MINUTES", "MONTHLY_RENEWAL_EVERY_THREE_MINUTES" ]
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SandboxTestersClearPurchaseHistoryRequestV2" : {
        "type" : "object",
        "title" : "SandboxTestersClearPurchaseHistoryRequestV2",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "sandboxTestersClearPurchaseHistoryRequest" ]
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SandboxTestersClearPurchaseHistoryRequestV2Response" : {
        "type" : "object",
        "title" : "SandboxTestersClearPurchaseHistoryRequestV2Response",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SandboxTestersClearPurchaseHistoryRequestV2"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SandboxTestersClearPurchaseHistoryRequestV2CreateRequest" : {
        "type" : "object",
        "title" : "SandboxTestersClearPurchaseHistoryRequestV2CreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "sandboxTestersClearPurchaseHistoryRequest" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "sandboxTesters" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "sandboxTesters" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "sandboxTesters" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "ScmGitReference" : {
        "type" : "object",
        "title" : "ScmGitReference",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "scmGitReferences" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "canonicalName" : {
                "type" : "string"
              },
              "isDeleted" : {
                "type" : "boolean"
              },
              "kind" : {
                "$ref" : "#/components/schemas/CiGitRefKind"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "repository" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "scmRepositories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "ScmGitReferencesResponse" : {
        "type" : "object",
        "title" : "ScmGitReferencesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScmGitReference"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScmRepository"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ScmGitReferenceResponse" : {
        "type" : "object",
        "title" : "ScmGitReferenceResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ScmGitReference"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScmRepository"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ScmProvider" : {
        "type" : "object",
        "title" : "ScmProvider",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "scmProviders" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "scmProviderType" : {
                "$ref" : "#/components/schemas/ScmProviderType"
              },
              "url" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "ScmProvidersResponse" : {
        "type" : "object",
        "title" : "ScmProvidersResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScmProvider"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ScmProviderResponse" : {
        "type" : "object",
        "title" : "ScmProviderResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ScmProvider"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ScmPullRequest" : {
        "type" : "object",
        "title" : "ScmPullRequest",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "scmPullRequests" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "title" : {
                "type" : "string"
              },
              "number" : {
                "type" : "integer"
              },
              "webUrl" : {
                "type" : "string",
                "format" : "uri"
              },
              "sourceRepositoryOwner" : {
                "type" : "string"
              },
              "sourceRepositoryName" : {
                "type" : "string"
              },
              "sourceBranchName" : {
                "type" : "string"
              },
              "destinationRepositoryOwner" : {
                "type" : "string"
              },
              "destinationRepositoryName" : {
                "type" : "string"
              },
              "destinationBranchName" : {
                "type" : "string"
              },
              "isClosed" : {
                "type" : "boolean"
              },
              "isCrossRepository" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "repository" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "scmRepositories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "ScmPullRequestsResponse" : {
        "type" : "object",
        "title" : "ScmPullRequestsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScmPullRequest"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScmRepository"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ScmPullRequestResponse" : {
        "type" : "object",
        "title" : "ScmPullRequestResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ScmPullRequest"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScmRepository"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ScmRepository" : {
        "type" : "object",
        "title" : "ScmRepository",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "scmRepositories" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "lastAccessedDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "httpCloneUrl" : {
                "type" : "string",
                "format" : "uri"
              },
              "sshCloneUrl" : {
                "type" : "string",
                "format" : "uri"
              },
              "ownerName" : {
                "type" : "string"
              },
              "repositoryName" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "scmProvider" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "scmProviders" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "defaultBranch" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "scmGitReferences" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "ScmRepositoriesResponse" : {
        "type" : "object",
        "title" : "ScmRepositoriesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScmRepository"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/ScmProvider"
              }, {
                "$ref" : "#/components/schemas/ScmGitReference"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "ScmRepositoryResponse" : {
        "type" : "object",
        "title" : "ScmRepositoryResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ScmRepository"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/ScmProvider"
              }, {
                "$ref" : "#/components/schemas/ScmGitReference"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionAppStoreReviewScreenshot" : {
        "type" : "object",
        "title" : "SubscriptionAppStoreReviewScreenshot",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionAppStoreReviewScreenshots" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "fileSize" : {
                "type" : "integer"
              },
              "fileName" : {
                "type" : "string"
              },
              "sourceFileChecksum" : {
                "type" : "string"
              },
              "imageAsset" : {
                "$ref" : "#/components/schemas/ImageAsset"
              },
              "assetToken" : {
                "type" : "string"
              },
              "assetType" : {
                "type" : "string"
              },
              "uploadOperations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UploadOperation"
                }
              },
              "assetDeliveryState" : {
                "$ref" : "#/components/schemas/AppMediaAssetState"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionAppStoreReviewScreenshotResponse" : {
        "type" : "object",
        "title" : "SubscriptionAppStoreReviewScreenshotResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshot"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Subscription"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionAppStoreReviewScreenshotCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionAppStoreReviewScreenshotCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionAppStoreReviewScreenshots" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "fileSize" : {
                    "type" : "integer"
                  },
                  "fileName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "fileName", "fileSize" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscription" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionAppStoreReviewScreenshotUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionAppStoreReviewScreenshotUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionAppStoreReviewScreenshots" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "sourceFileChecksum" : {
                    "type" : "string"
                  },
                  "uploaded" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionAvailability" : {
        "type" : "object",
        "title" : "SubscriptionAvailability",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionAvailabilities" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "availableInNewTerritories" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "availableTerritories" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "territories" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionAvailabilityResponse" : {
        "type" : "object",
        "title" : "SubscriptionAvailabilityResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionAvailability"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/Territory"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionAvailabilityCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionAvailabilityCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionAvailabilities" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "availableInNewTerritories" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "availableInNewTerritories" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "availableTerritories" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "territories" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscription", "availableTerritories" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionGracePeriod" : {
        "type" : "object",
        "title" : "SubscriptionGracePeriod",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionGracePeriods" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "optIn" : {
                "type" : "boolean"
              },
              "sandboxOptIn" : {
                "type" : "boolean"
              },
              "duration" : {
                "$ref" : "#/components/schemas/SubscriptionGracePeriodDuration"
              },
              "renewalType" : {
                "type" : "string",
                "enum" : [ "ALL_RENEWALS", "PAID_TO_PAID_ONLY" ]
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionGracePeriodResponse" : {
        "type" : "object",
        "title" : "SubscriptionGracePeriodResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionGracePeriod"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionGracePeriodUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionGracePeriodUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionGracePeriods" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "optIn" : {
                    "type" : "boolean"
                  },
                  "sandboxOptIn" : {
                    "type" : "boolean"
                  },
                  "duration" : {
                    "$ref" : "#/components/schemas/SubscriptionGracePeriodDuration"
                  },
                  "renewalType" : {
                    "type" : "string",
                    "enum" : [ "ALL_RENEWALS", "PAID_TO_PAID_ONLY" ]
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionGroupLocalization" : {
        "type" : "object",
        "title" : "SubscriptionGroupLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionGroupLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "customAppName" : {
                "type" : "string"
              },
              "locale" : {
                "type" : "string"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "PREPARE_FOR_SUBMISSION", "WAITING_FOR_REVIEW", "APPROVED", "REJECTED" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscriptionGroup" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionGroups" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionGroupLocalizationsResponse" : {
        "type" : "object",
        "title" : "SubscriptionGroupLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionGroupLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionGroup"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionGroupLocalizationResponse" : {
        "type" : "object",
        "title" : "SubscriptionGroupLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionGroupLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionGroup"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionGroupLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionGroupLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionGroupLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "customAppName" : {
                    "type" : "string"
                  },
                  "locale" : {
                    "type" : "string"
                  }
                },
                "required" : [ "name", "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscriptionGroup" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptionGroups" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscriptionGroup" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionGroupLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionGroupLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionGroupLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "customAppName" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionGroupSubmission" : {
        "type" : "object",
        "title" : "SubscriptionGroupSubmission",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionGroupSubmissions" ]
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionGroupSubmissionResponse" : {
        "type" : "object",
        "title" : "SubscriptionGroupSubmissionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionGroupSubmission"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionGroupSubmissionCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionGroupSubmissionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionGroupSubmissions" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscriptionGroup" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptionGroups" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscriptionGroup" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionGroup" : {
        "type" : "object",
        "title" : "SubscriptionGroup",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionGroups" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "referenceName" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscriptions" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptions" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "subscriptionGroupLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionGroupLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionGroupsResponse" : {
        "type" : "object",
        "title" : "SubscriptionGroupsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionGroup"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/SubscriptionGroupLocalization"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionGroupResponse" : {
        "type" : "object",
        "title" : "SubscriptionGroupResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionGroup"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/SubscriptionGroupLocalization"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionGroupCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionGroupCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionGroups" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "referenceName" : {
                    "type" : "string"
                  }
                },
                "required" : [ "referenceName" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "app" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "apps" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "app" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionGroupUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionGroupUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionGroups" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "referenceName" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionIntroductoryOffer" : {
        "type" : "object",
        "title" : "SubscriptionIntroductoryOffer",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionIntroductoryOffers" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "startDate" : {
                "type" : "string",
                "format" : "date"
              },
              "endDate" : {
                "type" : "string",
                "format" : "date"
              },
              "duration" : {
                "$ref" : "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode" : {
                "$ref" : "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods" : {
                "type" : "integer"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscriptionPricePoint" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionIntroductoryOfferInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionIntroductoryOffers" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "startDate" : {
                "type" : "string",
                "format" : "date"
              },
              "endDate" : {
                "type" : "string",
                "format" : "date"
              },
              "duration" : {
                "$ref" : "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode" : {
                "$ref" : "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods" : {
                "type" : "integer"
              }
            },
            "required" : [ "duration", "numberOfPeriods", "offerMode" ]
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territory" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscriptionPricePoint" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          }
        },
        "required" : [ "attributes", "type" ]
      },
      "SubscriptionIntroductoryOffersResponse" : {
        "type" : "object",
        "title" : "SubscriptionIntroductoryOffersResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionIntroductoryOffer"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPricePoint"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionIntroductoryOfferResponse" : {
        "type" : "object",
        "title" : "SubscriptionIntroductoryOfferResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionIntroductoryOffer"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPricePoint"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionIntroductoryOfferCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionIntroductoryOfferCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionIntroductoryOffers" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "startDate" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "endDate" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "duration" : {
                    "$ref" : "#/components/schemas/SubscriptionOfferDuration"
                  },
                  "offerMode" : {
                    "$ref" : "#/components/schemas/SubscriptionOfferMode"
                  },
                  "numberOfPeriods" : {
                    "type" : "integer"
                  }
                },
                "required" : [ "duration", "numberOfPeriods", "offerMode" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "territory" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "territories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "subscriptionPricePoint" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptionPricePoints" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  }
                },
                "required" : [ "subscription" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionPricePointInlineCreate"
            }
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionIntroductoryOfferUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionIntroductoryOfferUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionIntroductoryOffers" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "endDate" : {
                    "type" : "string",
                    "format" : "date"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionLocalization" : {
        "type" : "object",
        "title" : "SubscriptionLocalization",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionLocalizations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "locale" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "PREPARE_FOR_SUBMISSION", "WAITING_FOR_REVIEW", "APPROVED", "REJECTED" ]
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionLocalizationsResponse" : {
        "type" : "object",
        "title" : "SubscriptionLocalizationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionLocalization"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Subscription"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionLocalizationResponse" : {
        "type" : "object",
        "title" : "SubscriptionLocalizationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionLocalization"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Subscription"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionLocalizationCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionLocalizationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionLocalizations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "locale" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  }
                },
                "required" : [ "name", "locale" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscription" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionLocalizationUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionLocalizationUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionLocalizations" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionOfferCodeCustomCode" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeCustomCode",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionOfferCodeCustomCodes" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "customCode" : {
                "type" : "string"
              },
              "numberOfCodes" : {
                "type" : "integer"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "expirationDate" : {
                "type" : "string",
                "format" : "date"
              },
              "active" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "offerCode" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionOfferCodes" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionOfferCodeCustomCodesResponse" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeCustomCodesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCode"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionOfferCodeCustomCodeResponse" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeCustomCodeResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCode"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionOfferCodeCustomCodeCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeCustomCodeCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionOfferCodeCustomCodes" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "customCode" : {
                    "type" : "string"
                  },
                  "numberOfCodes" : {
                    "type" : "integer"
                  },
                  "expirationDate" : {
                    "type" : "string",
                    "format" : "date"
                  }
                },
                "required" : [ "numberOfCodes", "customCode" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "offerCode" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptionOfferCodes" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "offerCode" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionOfferCodeCustomCodeUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeCustomCodeUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionOfferCodeCustomCodes" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "active" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionOfferCodeOneTimeUseCodeValue" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeOneTimeUseCodeValue",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionOfferCodeOneTimeUseCodeValues" ]
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionOfferCodeOneTimeUseCode" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeOneTimeUseCode",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionOfferCodeOneTimeUseCodes" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "numberOfCodes" : {
                "type" : "integer"
              },
              "createdDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "expirationDate" : {
                "type" : "string",
                "format" : "date"
              },
              "active" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "offerCode" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionOfferCodes" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionOfferCodeOneTimeUseCodesResponse" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeOneTimeUseCodesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCode"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionOfferCodeOneTimeUseCodeResponse" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeOneTimeUseCodeResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCode"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionOfferCodeOneTimeUseCodeCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeOneTimeUseCodeCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionOfferCodeOneTimeUseCodes" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "numberOfCodes" : {
                    "type" : "integer"
                  },
                  "expirationDate" : {
                    "type" : "string",
                    "format" : "date"
                  }
                },
                "required" : [ "numberOfCodes", "expirationDate" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "offerCode" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptionOfferCodes" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "offerCode" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionOfferCodeOneTimeUseCodeUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeOneTimeUseCodeUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionOfferCodeOneTimeUseCodes" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "active" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionOfferCodePrice" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodePrice",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionOfferCodePrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscriptionPricePoint" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionOfferCodePriceInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionOfferCodePrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "territory" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscriptionPricePoint" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          }
        },
        "required" : [ "type" ]
      },
      "SubscriptionOfferCodePricesResponse" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodePricesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCodePrice"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPricePoint"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionOfferCode" : {
        "type" : "object",
        "title" : "SubscriptionOfferCode",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionOfferCodes" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "customerEligibilities" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SubscriptionCustomerEligibility"
                }
              },
              "offerEligibility" : {
                "$ref" : "#/components/schemas/SubscriptionOfferEligibility"
              },
              "duration" : {
                "$ref" : "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode" : {
                "$ref" : "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods" : {
                "type" : "integer"
              },
              "totalNumberOfCodes" : {
                "type" : "integer"
              },
              "active" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "oneTimeUseCodes" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionOfferCodeOneTimeUseCodes" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "customCodes" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionOfferCodeCustomCodes" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "prices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionOfferCodePrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionOfferCodesResponse" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCode"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCode"
              }, {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCode"
              }, {
                "$ref" : "#/components/schemas/SubscriptionOfferCodePrice"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionOfferCodeResponse" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionOfferCode"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeOneTimeUseCode"
              }, {
                "$ref" : "#/components/schemas/SubscriptionOfferCodeCustomCode"
              }, {
                "$ref" : "#/components/schemas/SubscriptionOfferCodePrice"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionOfferCodeCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionOfferCodes" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "customerEligibilities" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/SubscriptionCustomerEligibility"
                    }
                  },
                  "offerEligibility" : {
                    "$ref" : "#/components/schemas/SubscriptionOfferEligibility"
                  },
                  "duration" : {
                    "$ref" : "#/components/schemas/SubscriptionOfferDuration"
                  },
                  "offerMode" : {
                    "$ref" : "#/components/schemas/SubscriptionOfferMode"
                  },
                  "numberOfPeriods" : {
                    "type" : "integer"
                  }
                },
                "required" : [ "duration", "offerEligibility", "name", "numberOfPeriods", "offerMode", "customerEligibilities" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "prices" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "subscriptionOfferCodePrices" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscription", "prices" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionOfferCodePriceInlineCreate"
            }
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionOfferCodeUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionOfferCodeUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionOfferCodes" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "active" : {
                    "type" : "boolean"
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionPricePoint" : {
        "type" : "object",
        "title" : "SubscriptionPricePoint",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionPricePoints" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "customerPrice" : {
                "type" : "string"
              },
              "proceeds" : {
                "type" : "string"
              },
              "proceedsYear2" : {
                "type" : "string"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionPricePointInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionPricePoints" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "SubscriptionPricePointsResponse" : {
        "type" : "object",
        "title" : "SubscriptionPricePointsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionPricePoint"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Territory"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionPricePointResponse" : {
        "type" : "object",
        "title" : "SubscriptionPricePointResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionPricePoint"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Territory"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionPrice" : {
        "type" : "object",
        "title" : "SubscriptionPrice",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionPrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "startDate" : {
                "type" : "string",
                "format" : "date"
              },
              "preserved" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscriptionPricePoint" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionPriceInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionPrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "startDate" : {
                "type" : "string",
                "format" : "date"
              },
              "preserveCurrentPrice" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "territory" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscriptionPricePoint" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          }
        },
        "required" : [ "type" ]
      },
      "SubscriptionPricesResponse" : {
        "type" : "object",
        "title" : "SubscriptionPricesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionPrice"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPricePoint"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionPriceResponse" : {
        "type" : "object",
        "title" : "SubscriptionPriceResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionPrice"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPricePoint"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionPriceCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionPriceCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionPrices" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "startDate" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "preserveCurrentPrice" : {
                    "type" : "boolean"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "territory" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "territories" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    }
                  },
                  "subscriptionPricePoint" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptionPricePoints" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscription", "subscriptionPricePoint" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionPromotionalOfferPrice" : {
        "type" : "object",
        "title" : "SubscriptionPromotionalOfferPrice",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionPromotionalOfferPrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "territory" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscriptionPricePoint" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionPromotionalOfferPriceInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionPromotionalOfferPrices" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "territory" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "territories" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "subscriptionPricePoint" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionPricePoints" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          }
        },
        "required" : [ "type" ]
      },
      "SubscriptionPromotionalOfferPricesResponse" : {
        "type" : "object",
        "title" : "SubscriptionPromotionalOfferPricesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionPromotionalOfferPrice"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Territory"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPricePoint"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionPromotionalOffer" : {
        "type" : "object",
        "title" : "SubscriptionPromotionalOffer",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionPromotionalOffers" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "offerCode" : {
                "type" : "string"
              },
              "duration" : {
                "$ref" : "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode" : {
                "$ref" : "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods" : {
                "type" : "integer"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "prices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionPromotionalOfferPrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionPromotionalOfferInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionPromotionalOffers" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "offerCode" : {
                "type" : "string"
              },
              "duration" : {
                "$ref" : "#/components/schemas/SubscriptionOfferDuration"
              },
              "offerMode" : {
                "$ref" : "#/components/schemas/SubscriptionOfferMode"
              },
              "numberOfPeriods" : {
                "type" : "integer"
              }
            },
            "required" : [ "duration", "offerCode", "name", "numberOfPeriods", "offerMode" ]
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "prices" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionPromotionalOfferPrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          }
        },
        "required" : [ "attributes", "type" ]
      },
      "SubscriptionPromotionalOffersResponse" : {
        "type" : "object",
        "title" : "SubscriptionPromotionalOffersResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionPromotionalOffer"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPromotionalOfferPrice"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionPromotionalOfferResponse" : {
        "type" : "object",
        "title" : "SubscriptionPromotionalOfferResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionPromotionalOffer"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/Subscription"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPromotionalOfferPrice"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionPromotionalOfferCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionPromotionalOfferCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionPromotionalOffers" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "offerCode" : {
                    "type" : "string"
                  },
                  "duration" : {
                    "$ref" : "#/components/schemas/SubscriptionOfferDuration"
                  },
                  "offerMode" : {
                    "$ref" : "#/components/schemas/SubscriptionOfferMode"
                  },
                  "numberOfPeriods" : {
                    "type" : "integer"
                  }
                },
                "required" : [ "duration", "offerCode", "name", "numberOfPeriods", "offerMode" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  },
                  "prices" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "subscriptionPromotionalOfferPrices" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscription", "prices" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionPromotionalOfferPriceInlineCreate"
            }
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionPromotionalOfferUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionPromotionalOfferUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionPromotionalOffers" ]
              },
              "id" : {
                "type" : "string"
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "prices" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "subscriptionPromotionalOfferPrices" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionPromotionalOfferPriceInlineCreate"
            }
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionSubmission" : {
        "type" : "object",
        "title" : "SubscriptionSubmission",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptionSubmissions" ]
          },
          "id" : {
            "type" : "string"
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscription" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptions" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionSubmissionResponse" : {
        "type" : "object",
        "title" : "SubscriptionSubmissionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SubscriptionSubmission"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Subscription"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionSubmissionCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionSubmissionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptionSubmissions" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "subscription" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptions" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "subscription" ]
              }
            },
            "required" : [ "relationships", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "Subscription" : {
        "type" : "object",
        "title" : "Subscription",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "subscriptions" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "productId" : {
                "type" : "string"
              },
              "familySharable" : {
                "type" : "boolean"
              },
              "state" : {
                "type" : "string",
                "enum" : [ "MISSING_METADATA", "READY_TO_SUBMIT", "WAITING_FOR_REVIEW", "IN_REVIEW", "DEVELOPER_ACTION_NEEDED", "PENDING_BINARY_APPROVAL", "APPROVED", "DEVELOPER_REMOVED_FROM_SALE", "REMOVED_FROM_SALE", "REJECTED" ]
              },
              "subscriptionPeriod" : {
                "type" : "string",
                "enum" : [ "ONE_WEEK", "ONE_MONTH", "TWO_MONTHS", "THREE_MONTHS", "SIX_MONTHS", "ONE_YEAR" ]
              },
              "reviewNote" : {
                "type" : "string"
              },
              "groupLevel" : {
                "type" : "integer"
              },
              "availableInAllTerritories" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "subscriptionLocalizations" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionLocalizations" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "appStoreReviewScreenshot" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionAppStoreReviewScreenshots" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "group" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "subscriptionGroups" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              },
              "introductoryOffers" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionIntroductoryOffers" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "promotionalOffers" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionPromotionalOffers" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "offerCodes" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionOfferCodes" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "prices" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "subscriptionPrices" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              },
              "promotedPurchase" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "promotedPurchases" ]
                      },
                      "id" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type" ]
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "SubscriptionsResponse" : {
        "type" : "object",
        "title" : "SubscriptionsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Subscription"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/SubscriptionLocalization"
              }, {
                "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshot"
              }, {
                "$ref" : "#/components/schemas/SubscriptionGroup"
              }, {
                "$ref" : "#/components/schemas/SubscriptionIntroductoryOffer"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPromotionalOffer"
              }, {
                "$ref" : "#/components/schemas/SubscriptionOfferCode"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPrice"
              }, {
                "$ref" : "#/components/schemas/PromotedPurchase"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionResponse" : {
        "type" : "object",
        "title" : "SubscriptionResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Subscription"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/SubscriptionLocalization"
              }, {
                "$ref" : "#/components/schemas/SubscriptionAppStoreReviewScreenshot"
              }, {
                "$ref" : "#/components/schemas/SubscriptionGroup"
              }, {
                "$ref" : "#/components/schemas/SubscriptionIntroductoryOffer"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPromotionalOffer"
              }, {
                "$ref" : "#/components/schemas/SubscriptionOfferCode"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPrice"
              }, {
                "$ref" : "#/components/schemas/PromotedPurchase"
              } ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionCreateRequest" : {
        "type" : "object",
        "title" : "SubscriptionCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptions" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "productId" : {
                    "type" : "string"
                  },
                  "familySharable" : {
                    "type" : "boolean"
                  },
                  "subscriptionPeriod" : {
                    "type" : "string",
                    "enum" : [ "ONE_WEEK", "ONE_MONTH", "TWO_MONTHS", "THREE_MONTHS", "SIX_MONTHS", "ONE_YEAR" ]
                  },
                  "reviewNote" : {
                    "type" : "string"
                  },
                  "groupLevel" : {
                    "type" : "integer"
                  },
                  "availableInAllTerritories" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "productId", "name" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "group" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "subscriptionGroups" ]
                          },
                          "id" : {
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ]
                      }
                    },
                    "required" : [ "data" ]
                  }
                },
                "required" : [ "group" ]
              }
            },
            "required" : [ "relationships", "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionUpdateRequest" : {
        "type" : "object",
        "title" : "SubscriptionUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "subscriptions" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "familySharable" : {
                    "type" : "boolean"
                  },
                  "subscriptionPeriod" : {
                    "type" : "string",
                    "enum" : [ "ONE_WEEK", "ONE_MONTH", "TWO_MONTHS", "THREE_MONTHS", "SIX_MONTHS", "ONE_YEAR" ]
                  },
                  "reviewNote" : {
                    "type" : "string"
                  },
                  "groupLevel" : {
                    "type" : "integer"
                  },
                  "availableInAllTerritories" : {
                    "type" : "boolean"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "introductoryOffers" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "subscriptionIntroductoryOffers" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  },
                  "promotionalOffers" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "subscriptionPromotionalOffers" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  },
                  "prices" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "subscriptionPrices" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          },
          "included" : {
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/SubscriptionPromotionalOfferInlineCreate"
              }, {
                "$ref" : "#/components/schemas/SubscriptionPriceInlineCreate"
              }, {
                "$ref" : "#/components/schemas/SubscriptionIntroductoryOfferInlineCreate"
              } ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "Territory" : {
        "type" : "object",
        "title" : "Territory",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "territories" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "currency" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "TerritoryInlineCreate" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "territories" ]
          },
          "id" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "TerritoriesResponse" : {
        "type" : "object",
        "title" : "TerritoriesResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Territory"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "TerritoryResponse" : {
        "type" : "object",
        "title" : "TerritoryResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Territory"
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "UserInvitation" : {
        "type" : "object",
        "title" : "UserInvitation",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "userInvitations" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "email" : {
                "type" : "string",
                "format" : "email"
              },
              "firstName" : {
                "type" : "string"
              },
              "lastName" : {
                "type" : "string"
              },
              "expirationDate" : {
                "type" : "string",
                "format" : "date-time"
              },
              "roles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UserRole"
                }
              },
              "allAppsVisible" : {
                "type" : "boolean"
              },
              "provisioningAllowed" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "visibleApps" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "apps" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "UserInvitationsResponse" : {
        "type" : "object",
        "title" : "UserInvitationsResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserInvitation"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "UserInvitationResponse" : {
        "type" : "object",
        "title" : "UserInvitationResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserInvitation"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "UserInvitationCreateRequest" : {
        "type" : "object",
        "title" : "UserInvitationCreateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "userInvitations" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "format" : "email"
                  },
                  "firstName" : {
                    "type" : "string"
                  },
                  "lastName" : {
                    "type" : "string"
                  },
                  "roles" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UserRole"
                    }
                  },
                  "allAppsVisible" : {
                    "type" : "boolean"
                  },
                  "provisioningAllowed" : {
                    "type" : "boolean"
                  }
                },
                "required" : [ "firstName", "lastName", "roles", "email" ]
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "visibleApps" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "apps" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "attributes", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "User" : {
        "type" : "object",
        "title" : "User",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "users" ]
          },
          "id" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "properties" : {
              "username" : {
                "type" : "string"
              },
              "firstName" : {
                "type" : "string"
              },
              "lastName" : {
                "type" : "string"
              },
              "roles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/UserRole"
                }
              },
              "allAppsVisible" : {
                "type" : "boolean"
              },
              "provisioningAllowed" : {
                "type" : "boolean"
              }
            }
          },
          "relationships" : {
            "type" : "object",
            "properties" : {
              "visibleApps" : {
                "type" : "object",
                "properties" : {
                  "links" : {
                    "type" : "object",
                    "properties" : {
                      "self" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      },
                      "related" : {
                        "type" : "string",
                        "format" : "uri-reference"
                      }
                    }
                  },
                  "meta" : {
                    "$ref" : "#/components/schemas/PagingInformation"
                  },
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "type" : {
                          "type" : "string",
                          "enum" : [ "apps" ]
                        },
                        "id" : {
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ]
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/ResourceLinks"
          }
        },
        "required" : [ "links", "id", "type" ]
      },
      "UsersResponse" : {
        "type" : "object",
        "title" : "UsersResponse",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "UserResponse" : {
        "type" : "object",
        "title" : "UserResponse",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "included" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "UserUpdateRequest" : {
        "type" : "object",
        "title" : "UserUpdateRequest",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "users" ]
              },
              "id" : {
                "type" : "string"
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "roles" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/UserRole"
                    }
                  },
                  "allAppsVisible" : {
                    "type" : "boolean"
                  },
                  "provisioningAllowed" : {
                    "type" : "boolean"
                  }
                }
              },
              "relationships" : {
                "type" : "object",
                "properties" : {
                  "visibleApps" : {
                    "type" : "object",
                    "properties" : {
                      "data" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "type" : {
                              "type" : "string",
                              "enum" : [ "apps" ]
                            },
                            "id" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "type" ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersions" ]
              },
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "type" ]
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appStoreVersions" ]
              },
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppEncryptionDeclarationBuildsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "builds" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "AppPreviewSetAppPreviewsLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "appPreviews" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPreviewSetAppPreviewsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "appPreviews" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "AppScreenshotSetAppScreenshotsLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "appScreenshots" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppScreenshotSetAppScreenshotsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "appScreenshots" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionAppClipDefaultExperienceLinkageResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipDefaultExperiences" ]
              },
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "type" ]
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionAppClipDefaultExperienceLinkageRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appClipDefaultExperiences" ]
              },
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppStoreVersionBuildLinkageResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "builds" ]
              },
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "type" ]
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppStoreVersionBuildLinkageRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "builds" ]
              },
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "AppBetaTestersLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "betaTesters" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "AppPromotedPurchasesLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "promotedPurchases" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "AppPromotedPurchasesLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "promotedPurchases" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "BetaGroupBetaTestersLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "betaTesters" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaGroupBetaTestersLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "betaTesters" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "BetaGroupBuildsLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "builds" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaGroupBuildsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "builds" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "BetaTesterAppsLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "apps" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaTesterAppsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "apps" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "BetaTesterBetaGroupsLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "betaGroups" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaTesterBetaGroupsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "betaGroups" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "BetaTesterBuildsLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "builds" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BetaTesterBuildsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "builds" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "BuildAppEncryptionDeclarationLinkageResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEncryptionDeclarations" ]
              },
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "type" ]
          },
          "links" : {
            "$ref" : "#/components/schemas/DocumentLinks"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BuildAppEncryptionDeclarationLinkageRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "appEncryptionDeclarations" ]
              },
              "id" : {
                "type" : "string"
              }
            },
            "required" : [ "id", "type" ]
          }
        },
        "required" : [ "data" ]
      },
      "BuildBetaGroupsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "betaGroups" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "BuildIndividualTestersLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "betaTesters" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "BuildIndividualTestersLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "betaTesters" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "GameCenterEnabledVersionCompatibleVersionsLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "gameCenterEnabledVersions" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "GameCenterEnabledVersionCompatibleVersionsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "gameCenterEnabledVersions" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionIntroductoryOffersLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "subscriptionIntroductoryOffers" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionIntroductoryOffersLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "subscriptionIntroductoryOffers" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "SubscriptionPricesLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "subscriptionPrices" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "SubscriptionPricesLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "subscriptionPrices" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "UserVisibleAppsLinkagesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "apps" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          },
          "links" : {
            "$ref" : "#/components/schemas/PagedDocumentLinks"
          },
          "meta" : {
            "$ref" : "#/components/schemas/PagingInformation"
          }
        },
        "required" : [ "data", "links" ]
      },
      "UserVisibleAppsLinkagesRequest" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "apps" ]
                },
                "id" : {
                  "type" : "string"
                }
              },
              "required" : [ "id", "type" ]
            }
          }
        },
        "required" : [ "data" ]
      },
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "status" : {
                  "type" : "string"
                },
                "code" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                },
                "detail" : {
                  "type" : "string"
                },
                "source" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/ErrorSourcePointer"
                  }, {
                    "$ref" : "#/components/schemas/ErrorSourceParameter"
                  } ]
                }
              },
              "required" : [ "code", "detail", "title", "status" ]
            }
          }
        }
      },
      "ErrorSourceParameter" : {
        "type" : "object",
        "title" : "Parameter",
        "properties" : {
          "parameter" : {
            "type" : "string"
          }
        }
      },
      "ErrorSourcePointer" : {
        "type" : "object",
        "title" : "JsonPointer",
        "properties" : {
          "pointer" : {
            "type" : "string"
          }
        }
      },
      "PagedDocumentLinks" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "format" : "uri-reference"
          },
          "first" : {
            "type" : "string",
            "format" : "uri-reference"
          },
          "next" : {
            "type" : "string",
            "format" : "uri-reference"
          }
        },
        "required" : [ "self" ]
      },
      "PagingInformation" : {
        "type" : "object",
        "properties" : {
          "paging" : {
            "type" : "object",
            "properties" : {
              "total" : {
                "type" : "integer"
              },
              "limit" : {
                "type" : "integer"
              }
            },
            "required" : [ "limit" ]
          }
        },
        "required" : [ "paging" ]
      },
      "DocumentLinks" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "format" : "uri-reference"
          }
        },
        "required" : [ "self" ]
      },
      "ResourceLinks" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "string",
            "format" : "uri-reference"
          }
        },
        "required" : [ "self" ]
      },
      "AppClipAction" : {
        "type" : "string",
        "enum" : [ "OPEN", "VIEW", "PLAY" ]
      },
      "AppClipAdvancedExperienceLanguage" : {
        "type" : "string",
        "enum" : [ "AR", "CA", "CS", "DA", "DE", "EL", "EN", "ES", "FI", "FR", "HE", "HI", "HR", "HU", "ID", "IT", "JA", "KO", "MS", "NL", "NO", "PL", "PT", "RO", "RU", "SK", "SV", "TH", "TR", "UK", "VI", "ZH" ]
      },
      "AppEncryptionDeclarationState" : {
        "type" : "string",
        "enum" : [ "CREATED", "IN_REVIEW", "APPROVED", "REJECTED", "INVALID", "EXPIRED" ]
      },
      "AppEventAssetType" : {
        "type" : "string",
        "enum" : [ "EVENT_CARD", "EVENT_DETAILS_PAGE" ]
      },
      "AppMediaAssetState" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppMediaStateError"
            }
          },
          "warnings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AppMediaStateError"
            }
          },
          "state" : {
            "type" : "string",
            "enum" : [ "AWAITING_UPLOAD", "UPLOAD_COMPLETE", "COMPLETE", "FAILED" ]
          }
        }
      },
      "AppMediaStateError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "AppStoreAgeRating" : {
        "type" : "string",
        "enum" : [ "FOUR_PLUS", "NINE_PLUS", "TWELVE_PLUS", "SEVENTEEN_PLUS" ]
      },
      "AppStoreVersionState" : {
        "type" : "string",
        "enum" : [ "ACCEPTED", "DEVELOPER_REMOVED_FROM_SALE", "DEVELOPER_REJECTED", "IN_REVIEW", "INVALID_BINARY", "METADATA_REJECTED", "PENDING_APPLE_RELEASE", "PENDING_CONTRACT", "PENDING_DEVELOPER_RELEASE", "PREPARE_FOR_SUBMISSION", "PREORDER_READY_FOR_SALE", "PROCESSING_FOR_APP_STORE", "READY_FOR_REVIEW", "READY_FOR_SALE", "REJECTED", "REMOVED_FROM_SALE", "WAITING_FOR_EXPORT_COMPLIANCE", "WAITING_FOR_REVIEW", "REPLACED_WITH_NEW_VERSION" ]
      },
      "BetaInviteType" : {
        "type" : "string",
        "enum" : [ "EMAIL", "PUBLIC_LINK" ]
      },
      "BetaReviewState" : {
        "type" : "string",
        "enum" : [ "WAITING_FOR_REVIEW", "IN_REVIEW", "REJECTED", "APPROVED" ]
      },
      "BrazilAgeRating" : {
        "type" : "string",
        "enum" : [ "L", "TEN", "TWELVE", "FOURTEEN", "SIXTEEN", "EIGHTEEN" ]
      },
      "BuildAudienceType" : {
        "type" : "string",
        "enum" : [ "INTERNAL_ONLY", "APP_STORE_ELIGIBLE" ]
      },
      "BundleIdPlatform" : {
        "type" : "string",
        "enum" : [ "IOS", "MAC_OS" ]
      },
      "CapabilityOption" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "enum" : [ "XCODE_5", "XCODE_6", "COMPLETE_PROTECTION", "PROTECTED_UNLESS_OPEN", "PROTECTED_UNTIL_FIRST_USER_AUTH", "PRIMARY_APP_CONSENT" ]
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "enabledByDefault" : {
            "type" : "boolean"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "supportsWildcard" : {
            "type" : "boolean"
          }
        }
      },
      "CapabilitySetting" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "enum" : [ "ICLOUD_VERSION", "DATA_PROTECTION_PERMISSION_LEVEL", "APPLE_ID_AUTH_APP_CONSENT" ]
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "enabledByDefault" : {
            "type" : "boolean"
          },
          "visible" : {
            "type" : "boolean"
          },
          "allowedInstances" : {
            "type" : "string",
            "enum" : [ "ENTRY", "SINGLE", "MULTIPLE" ]
          },
          "minInstances" : {
            "type" : "integer"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CapabilityOption"
            }
          }
        }
      },
      "CapabilityType" : {
        "type" : "string",
        "enum" : [ "ICLOUD", "IN_APP_PURCHASE", "GAME_CENTER", "PUSH_NOTIFICATIONS", "WALLET", "INTER_APP_AUDIO", "MAPS", "ASSOCIATED_DOMAINS", "PERSONAL_VPN", "APP_GROUPS", "HEALTHKIT", "HOMEKIT", "WIRELESS_ACCESSORY_CONFIGURATION", "APPLE_PAY", "DATA_PROTECTION", "SIRIKIT", "NETWORK_EXTENSIONS", "MULTIPATH", "HOT_SPOT", "NFC_TAG_READING", "CLASSKIT", "AUTOFILL_CREDENTIAL_PROVIDER", "ACCESS_WIFI_INFORMATION", "NETWORK_CUSTOM_PROTOCOL", "COREMEDIA_HLS_LOW_LATENCY", "SYSTEM_EXTENSION_INSTALL", "USER_MANAGEMENT", "APPLE_ID_AUTH" ]
      },
      "CertificateType" : {
        "type" : "string",
        "enum" : [ "IOS_DEVELOPMENT", "IOS_DISTRIBUTION", "MAC_APP_DISTRIBUTION", "MAC_INSTALLER_DISTRIBUTION", "MAC_APP_DEVELOPMENT", "DEVELOPER_ID_KEXT", "DEVELOPER_ID_APPLICATION", "DEVELOPMENT", "DISTRIBUTION", "PASS_TYPE_ID", "PASS_TYPE_ID_WITH_NFC" ]
      },
      "CiAction" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "actionType" : {
            "$ref" : "#/components/schemas/CiActionType"
          },
          "destination" : {
            "type" : "string",
            "enum" : [ "ANY_IOS_DEVICE", "ANY_IOS_SIMULATOR", "ANY_TVOS_DEVICE", "ANY_TVOS_SIMULATOR", "ANY_WATCHOS_DEVICE", "ANY_WATCHOS_SIMULATOR", "ANY_MAC", "ANY_MAC_CATALYST" ]
          },
          "buildDistributionAudience" : {
            "$ref" : "#/components/schemas/BuildAudienceType"
          },
          "testConfiguration" : {
            "type" : "object",
            "properties" : {
              "kind" : {
                "type" : "string",
                "enum" : [ "USE_SCHEME_SETTINGS", "SPECIFIC_TEST_PLANS" ]
              },
              "testPlanName" : {
                "type" : "string"
              },
              "testDestinations" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/CiTestDestination"
                }
              }
            }
          },
          "scheme" : {
            "type" : "string"
          },
          "platform" : {
            "type" : "string",
            "enum" : [ "MACOS", "IOS", "TVOS", "WATCHOS" ]
          },
          "isRequiredToPass" : {
            "type" : "boolean"
          }
        }
      },
      "CiActionType" : {
        "type" : "string",
        "enum" : [ "BUILD", "ANALYZE", "TEST", "ARCHIVE" ]
      },
      "CiBranchPatterns" : {
        "type" : "object",
        "properties" : {
          "isAllMatch" : {
            "type" : "boolean"
          },
          "patterns" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "pattern" : {
                  "type" : "string"
                },
                "isPrefix" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      },
      "CiBranchStartCondition" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/CiBranchPatterns"
          },
          "filesAndFoldersRule" : {
            "$ref" : "#/components/schemas/CiFilesAndFoldersRule"
          },
          "autoCancel" : {
            "type" : "boolean"
          }
        }
      },
      "CiCompletionStatus" : {
        "type" : "string",
        "enum" : [ "SUCCEEDED", "FAILED", "ERRORED", "CANCELED", "SKIPPED" ]
      },
      "CiExecutionProgress" : {
        "type" : "string",
        "enum" : [ "PENDING", "RUNNING", "COMPLETE" ]
      },
      "CiFilesAndFoldersRule" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "string",
            "enum" : [ "START_IF_ANY_FILE_MATCHES", "DO_NOT_START_IF_ALL_FILES_MATCH" ]
          },
          "matchers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CiStartConditionFileMatcher"
            }
          }
        }
      },
      "CiGitRefKind" : {
        "type" : "string",
        "enum" : [ "BRANCH", "TAG" ]
      },
      "CiGitUser" : {
        "type" : "object",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "avatarUrl" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "CiIssueCounts" : {
        "type" : "object",
        "properties" : {
          "analyzerWarnings" : {
            "type" : "integer"
          },
          "errors" : {
            "type" : "integer"
          },
          "testFailures" : {
            "type" : "integer"
          },
          "warnings" : {
            "type" : "integer"
          }
        }
      },
      "CiPullRequestStartCondition" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/CiBranchPatterns"
          },
          "destination" : {
            "$ref" : "#/components/schemas/CiBranchPatterns"
          },
          "filesAndFoldersRule" : {
            "$ref" : "#/components/schemas/CiFilesAndFoldersRule"
          },
          "autoCancel" : {
            "type" : "boolean"
          }
        }
      },
      "CiScheduledStartCondition" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/CiBranchPatterns"
          },
          "schedule" : {
            "type" : "object",
            "properties" : {
              "frequency" : {
                "type" : "string",
                "enum" : [ "WEEKLY", "DAILY", "HOURLY" ]
              },
              "days" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "enum" : [ "SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY" ]
                }
              },
              "hour" : {
                "type" : "integer"
              },
              "minute" : {
                "type" : "integer"
              },
              "timezone" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "CiStartConditionFileMatcher" : {
        "type" : "object",
        "properties" : {
          "directory" : {
            "type" : "string"
          },
          "fileExtension" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          }
        }
      },
      "CiTagPatterns" : {
        "type" : "object",
        "properties" : {
          "isAllMatch" : {
            "type" : "boolean"
          },
          "patterns" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "pattern" : {
                  "type" : "string"
                },
                "isPrefix" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      },
      "CiTagStartCondition" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/CiTagPatterns"
          },
          "filesAndFoldersRule" : {
            "$ref" : "#/components/schemas/CiFilesAndFoldersRule"
          },
          "autoCancel" : {
            "type" : "boolean"
          }
        }
      },
      "CiTestDestination" : {
        "type" : "object",
        "properties" : {
          "deviceTypeName" : {
            "type" : "string"
          },
          "deviceTypeIdentifier" : {
            "type" : "string"
          },
          "runtimeName" : {
            "type" : "string"
          },
          "runtimeIdentifier" : {
            "type" : "string"
          },
          "kind" : {
            "$ref" : "#/components/schemas/CiTestDestinationKind"
          }
        }
      },
      "CiTestDestinationKind" : {
        "type" : "string",
        "enum" : [ "SIMULATOR", "MAC" ]
      },
      "CiTestStatus" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "FAILURE", "MIXED", "SKIPPED", "EXPECTED_FAILURE" ]
      },
      "DiagnosticLogCallStackNode" : {
        "type" : "object",
        "properties" : {
          "sampleCount" : {
            "type" : "integer"
          },
          "isBlameFrame" : {
            "type" : "boolean"
          },
          "symbolName" : {
            "type" : "string"
          },
          "insightsCategory" : {
            "type" : "string"
          },
          "offsetIntoSymbol" : {
            "type" : "string"
          },
          "binaryName" : {
            "type" : "string"
          },
          "fileName" : {
            "type" : "string"
          },
          "binaryUUID" : {
            "type" : "string"
          },
          "lineNumber" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "offsetIntoBinaryTextSegment" : {
            "type" : "string"
          },
          "rawFrame" : {
            "type" : "string"
          },
          "subFrames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticLogCallStackNode"
            }
          }
        }
      },
      "ExternalBetaState" : {
        "type" : "string",
        "enum" : [ "PROCESSING", "PROCESSING_EXCEPTION", "MISSING_EXPORT_COMPLIANCE", "READY_FOR_BETA_TESTING", "IN_BETA_TESTING", "EXPIRED", "READY_FOR_BETA_SUBMISSION", "IN_EXPORT_COMPLIANCE_REVIEW", "WAITING_FOR_BETA_REVIEW", "IN_BETA_REVIEW", "BETA_REJECTED", "BETA_APPROVED" ]
      },
      "FileLocation" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string"
          },
          "lineNumber" : {
            "type" : "integer"
          }
        }
      },
      "HttpHeader" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "IconAssetType" : {
        "type" : "string",
        "enum" : [ "APP_STORE", "MESSAGES_APP_STORE", "WATCH_APP_STORE", "TV_OS_HOME_SCREEN", "TV_OS_TOP_SHELF", "ALTERNATE_EXPERIMENT" ]
      },
      "ImageAsset" : {
        "type" : "object",
        "properties" : {
          "templateUrl" : {
            "type" : "string"
          },
          "width" : {
            "type" : "integer"
          },
          "height" : {
            "type" : "integer"
          }
        }
      },
      "InAppPurchaseState" : {
        "type" : "string",
        "enum" : [ "MISSING_METADATA", "WAITING_FOR_UPLOAD", "PROCESSING_CONTENT", "READY_TO_SUBMIT", "WAITING_FOR_REVIEW", "IN_REVIEW", "DEVELOPER_ACTION_NEEDED", "PENDING_BINARY_APPROVAL", "APPROVED", "DEVELOPER_REMOVED_FROM_SALE", "REMOVED_FROM_SALE", "REJECTED" ]
      },
      "InAppPurchaseType" : {
        "type" : "string",
        "enum" : [ "CONSUMABLE", "NON_CONSUMABLE", "NON_RENEWING_SUBSCRIPTION" ]
      },
      "InternalBetaState" : {
        "type" : "string",
        "enum" : [ "PROCESSING", "PROCESSING_EXCEPTION", "MISSING_EXPORT_COMPLIANCE", "READY_FOR_BETA_TESTING", "IN_BETA_TESTING", "EXPIRED", "IN_EXPORT_COMPLIANCE_REVIEW" ]
      },
      "KidsAgeBand" : {
        "type" : "string",
        "enum" : [ "FIVE_AND_UNDER", "SIX_TO_EIGHT", "NINE_TO_ELEVEN" ]
      },
      "MetricCategory" : {
        "type" : "string",
        "enum" : [ "HANG", "LAUNCH", "MEMORY", "DISK", "BATTERY", "TERMINATION", "ANIMATION" ]
      },
      "MetricsInsight" : {
        "type" : "object",
        "properties" : {
          "metricCategory" : {
            "$ref" : "#/components/schemas/MetricCategory"
          },
          "latestVersion" : {
            "type" : "string"
          },
          "metric" : {
            "type" : "string"
          },
          "summaryString" : {
            "type" : "string"
          },
          "referenceVersions" : {
            "type" : "string"
          },
          "maxLatestVersionValue" : {
            "type" : "number"
          },
          "subSystemLabel" : {
            "type" : "string"
          },
          "highImpact" : {
            "type" : "boolean"
          },
          "populations" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "deltaPercentage" : {
                  "type" : "number"
                },
                "percentile" : {
                  "type" : "string"
                },
                "summaryString" : {
                  "type" : "string"
                },
                "referenceAverageValue" : {
                  "type" : "number"
                },
                "latestVersionValue" : {
                  "type" : "number"
                },
                "device" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "PhasedReleaseState" : {
        "type" : "string",
        "enum" : [ "INACTIVE", "ACTIVE", "PAUSED", "COMPLETE" ]
      },
      "Platform" : {
        "type" : "string",
        "enum" : [ "IOS", "MAC_OS", "TV_OS" ]
      },
      "PreviewType" : {
        "type" : "string",
        "enum" : [ "IPHONE_67", "IPHONE_61", "IPHONE_65", "IPHONE_58", "IPHONE_55", "IPHONE_47", "IPHONE_40", "IPHONE_35", "IPAD_PRO_3GEN_129", "IPAD_PRO_3GEN_11", "IPAD_PRO_129", "IPAD_105", "IPAD_97", "DESKTOP", "APPLE_TV" ]
      },
      "ScmProviderType" : {
        "type" : "object",
        "properties" : {
          "kind" : {
            "type" : "string",
            "enum" : [ "BITBUCKET_CLOUD", "BITBUCKET_SERVER", "GITHUB_CLOUD", "GITHUB_ENTERPRISE", "GITLAB_CLOUD", "GITLAB_SELF_MANAGED" ]
          },
          "displayName" : {
            "type" : "string"
          },
          "isOnPremise" : {
            "type" : "boolean"
          }
        }
      },
      "ScreenshotDisplayType" : {
        "type" : "string",
        "enum" : [ "APP_IPHONE_67", "APP_IPHONE_61", "APP_IPHONE_65", "APP_IPHONE_58", "APP_IPHONE_55", "APP_IPHONE_47", "APP_IPHONE_40", "APP_IPHONE_35", "APP_IPAD_PRO_3GEN_129", "APP_IPAD_PRO_3GEN_11", "APP_IPAD_PRO_129", "APP_IPAD_105", "APP_IPAD_97", "APP_DESKTOP", "APP_WATCH_ULTRA", "APP_WATCH_SERIES_7", "APP_WATCH_SERIES_4", "APP_WATCH_SERIES_3", "APP_APPLE_TV", "IMESSAGE_APP_IPHONE_67", "IMESSAGE_APP_IPHONE_61", "IMESSAGE_APP_IPHONE_65", "IMESSAGE_APP_IPHONE_58", "IMESSAGE_APP_IPHONE_55", "IMESSAGE_APP_IPHONE_47", "IMESSAGE_APP_IPHONE_40", "IMESSAGE_APP_IPAD_PRO_3GEN_129", "IMESSAGE_APP_IPAD_PRO_3GEN_11", "IMESSAGE_APP_IPAD_PRO_129", "IMESSAGE_APP_IPAD_105", "IMESSAGE_APP_IPAD_97" ]
      },
      "SubscriptionCustomerEligibility" : {
        "type" : "string",
        "enum" : [ "NEW", "EXISTING", "EXPIRED" ]
      },
      "SubscriptionGracePeriodDuration" : {
        "type" : "string",
        "enum" : [ "THREE_DAYS", "SIXTEEN_DAYS", "TWENTY_EIGHT_DAYS" ]
      },
      "SubscriptionOfferDuration" : {
        "type" : "string",
        "enum" : [ "ONE_DAY", "THREE_DAYS", "ONE_WEEK", "TWO_WEEKS", "ONE_MONTH", "TWO_MONTHS", "THREE_MONTHS", "SIX_MONTHS", "ONE_YEAR" ]
      },
      "SubscriptionOfferEligibility" : {
        "type" : "string",
        "enum" : [ "STACK_WITH_INTRO_OFFERS", "REPLACE_INTRO_OFFERS" ]
      },
      "SubscriptionOfferMode" : {
        "type" : "string",
        "enum" : [ "PAY_AS_YOU_GO", "PAY_UP_FRONT", "FREE_TRIAL" ]
      },
      "SubscriptionStatusUrlVersion" : {
        "type" : "string",
        "enum" : [ "V1", "V2", "v1", "v2" ]
      },
      "TerritoryCode" : {
        "type" : "string",
        "enum" : [ "ABW", "AFG", "AGO", "AIA", "ALB", "AND", "ANT", "ARE", "ARG", "ARM", "ASM", "ATG", "AUS", "AUT", "AZE", "BDI", "BEL", "BEN", "BES", "BFA", "BGD", "BGR", "BHR", "BHS", "BIH", "BLR", "BLZ", "BMU", "BOL", "BRA", "BRB", "BRN", "BTN", "BWA", "CAF", "CAN", "CHE", "CHL", "CHN", "CIV", "CMR", "COD", "COG", "COK", "COL", "COM", "CPV", "CRI", "CUB", "CUW", "CXR", "CYM", "CYP", "CZE", "DEU", "DJI", "DMA", "DNK", "DOM", "DZA", "ECU", "EGY", "ERI", "ESP", "EST", "ETH", "FIN", "FJI", "FLK", "FRA", "FRO", "FSM", "GAB", "GBR", "GEO", "GGY", "GHA", "GIB", "GIN", "GLP", "GMB", "GNB", "GNQ", "GRC", "GRD", "GRL", "GTM", "GUF", "GUM", "GUY", "HKG", "HND", "HRV", "HTI", "HUN", "IDN", "IMN", "IND", "IRL", "IRQ", "ISL", "ISR", "ITA", "JAM", "JEY", "JOR", "JPN", "KAZ", "KEN", "KGZ", "KHM", "KIR", "KNA", "KOR", "KWT", "LAO", "LBN", "LBR", "LBY", "LCA", "LIE", "LKA", "LSO", "LTU", "LUX", "LVA", "MAC", "MAR", "MCO", "MDA", "MDG", "MDV", "MEX", "MHL", "MKD", "MLI", "MLT", "MMR", "MNE", "MNG", "MNP", "MOZ", "MRT", "MSR", "MTQ", "MUS", "MWI", "MYS", "MYT", "NAM", "NCL", "NER", "NFK", "NGA", "NIC", "NIU", "NLD", "NOR", "NPL", "NRU", "NZL", "OMN", "PAK", "PAN", "PER", "PHL", "PLW", "PNG", "POL", "PRI", "PRT", "PRY", "PSE", "PYF", "QAT", "REU", "ROU", "RUS", "RWA", "SAU", "SEN", "SGP", "SHN", "SLB", "SLE", "SLV", "SMR", "SOM", "SPM", "SRB", "SSD", "STP", "SUR", "SVK", "SVN", "SWE", "SWZ", "SXM", "SYC", "TCA", "TCD", "TGO", "THA", "TJK", "TKM", "TLS", "TON", "TTO", "TUN", "TUR", "TUV", "TWN", "TZA", "UGA", "UKR", "UMI", "URY", "USA", "UZB", "VAT", "VCT", "VEN", "VGB", "VIR", "VNM", "VUT", "WLF", "WSM", "YEM", "ZAF", "ZMB", "ZWE" ]
      },
      "UploadOperation" : {
        "type" : "object",
        "properties" : {
          "method" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "length" : {
            "type" : "integer"
          },
          "offset" : {
            "type" : "integer"
          },
          "requestHeaders" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HttpHeader"
            }
          }
        }
      },
      "UserRole" : {
        "type" : "string",
        "enum" : [ "ADMIN", "FINANCE", "ACCOUNT_HOLDER", "SALES", "MARKETING", "APP_MANAGER", "DEVELOPER", "ACCESS_TO_REPORTS", "CUSTOMER_SUPPORT", "IMAGE_MANAGER", "CREATE_APPS", "CLOUD_MANAGED_DEVELOPER_ID", "CLOUD_MANAGED_APP_DISTRIBUTION" ]
      },
      "csv" : {
        "type" : "string"
      },
      "diagnosticLogs" : {
        "type" : "object",
        "properties" : {
          "productData" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "signatureId" : {
                  "type" : "string"
                },
                "diagnosticInsights" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "insightsURL" : {
                        "type" : "string"
                      },
                      "insightsCategory" : {
                        "type" : "string"
                      },
                      "insightsString" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "diagnosticLogs" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "callStackTree" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "callStackPerThread" : {
                              "type" : "boolean"
                            },
                            "callStacks" : {
                              "type" : "array",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "callStackRootFrames" : {
                                    "type" : "array",
                                    "items" : {
                                      "$ref" : "#/components/schemas/DiagnosticLogCallStackNode"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "diagnosticMetaData" : {
                        "type" : "object",
                        "properties" : {
                          "bundleId" : {
                            "type" : "string"
                          },
                          "event" : {
                            "type" : "string"
                          },
                          "osVersion" : {
                            "type" : "string"
                          },
                          "appVersion" : {
                            "type" : "string"
                          },
                          "writesCaused" : {
                            "type" : "string"
                          },
                          "deviceType" : {
                            "type" : "string"
                          },
                          "platformArchitecture" : {
                            "type" : "string"
                          },
                          "eventDetail" : {
                            "type" : "string"
                          },
                          "buildVersion" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "version" : {
            "type" : "string"
          }
        }
      },
      "gzip" : {
        "type" : "string",
        "format" : "binary"
      },
      "xcodeMetrics" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string"
          },
          "insights" : {
            "type" : "object",
            "properties" : {
              "trendingUp" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MetricsInsight"
                }
              },
              "regressions" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MetricsInsight"
                }
              }
            }
          },
          "productData" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "platform" : {
                  "type" : "string"
                },
                "metricCategories" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "identifier" : {
                        "$ref" : "#/components/schemas/MetricCategory"
                      },
                      "metrics" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "identifier" : {
                              "type" : "string"
                            },
                            "goalKeys" : {
                              "type" : "array",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "goalKey" : {
                                    "type" : "string"
                                  },
                                  "lowerBound" : {
                                    "type" : "integer"
                                  },
                                  "upperBound" : {
                                    "type" : "integer"
                                  }
                                }
                              }
                            },
                            "unit" : {
                              "type" : "object",
                              "properties" : {
                                "identifier" : {
                                  "type" : "string"
                                },
                                "displayName" : {
                                  "type" : "string"
                                }
                              }
                            },
                            "datasets" : {
                              "type" : "array",
                              "items" : {
                                "type" : "object",
                                "properties" : {
                                  "filterCriteria" : {
                                    "type" : "object",
                                    "properties" : {
                                      "percentile" : {
                                        "type" : "string"
                                      },
                                      "device" : {
                                        "type" : "string"
                                      },
                                      "deviceMarketingName" : {
                                        "type" : "string"
                                      }
                                    }
                                  },
                                  "points" : {
                                    "type" : "array",
                                    "items" : {
                                      "type" : "object",
                                      "properties" : {
                                        "version" : {
                                          "type" : "string"
                                        },
                                        "value" : {
                                          "type" : "number"
                                        },
                                        "errorMargin" : {
                                          "type" : "number"
                                        },
                                        "percentageBreakdown" : {
                                          "type" : "object",
                                          "properties" : {
                                            "value" : {
                                              "type" : "number"
                                            },
                                            "subSystemLabel" : {
                                              "type" : "string"
                                            }
                                          }
                                        },
                                        "goal" : {
                                          "type" : "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "itc-bearer-token" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  },
  "security" : [ {
    "itc-bearer-token" : [ ]
  } ]
}