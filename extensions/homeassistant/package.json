{
  "$schema": "https://www.raycast.com/schemas/extension.json",
  "name": "homeassistant",
  "title": "Home Assistant",
  "version": "1.2.4",
  "author": "tonka3000",
  "contributors": [
    "altrdev",
    "rspeicher",
    "amuelli",
    "xilopaint"
  ],
  "license": "MIT",
  "description": "Manage your smart home with Raycast",
  "icon": "home-assistant.png",
  "commands": [
    {
      "name": "index",
      "title": "All Entities",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant entities",
      "mode": "view"
    },
    {
      "name": "covers",
      "title": "Covers",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant covers",
      "mode": "view"
    },
    {
      "name": "fans",
      "title": "Fans",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant fans",
      "mode": "view"
    },
    {
      "name": "lights",
      "title": "Lights",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant lights",
      "mode": "view"
    },
    {
      "name": "persons",
      "title": "Persons",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant persons",
      "mode": "view"
    },
    {
      "name": "sensors",
      "title": "Sensors",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant sensors",
      "mode": "view"
    },
    {
      "name": "binarysensors",
      "title": "Binary Sensors",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant binary sensors",
      "mode": "view"
    },
    {
      "name": "mediaplayers",
      "title": "Media Players",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant mediaplayers",
      "mode": "view"
    },
    {
      "name": "automations",
      "title": "Automations",
      "subtitle": "Home Assistant",
      "description": "Home Assistant automations",
      "mode": "view"
    },
    {
      "name": "dashboard",
      "title": "Dashboard",
      "subtitle": "Home Assistant",
      "description": "Open Home Assistant dashboard",
      "mode": "no-view"
    },
    {
      "name": "climate",
      "title": "Climate",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant climate entities",
      "mode": "view"
    },
    {
      "name": "attributes",
      "title": "All Entities with Attributes",
      "subtitle": "Home Assistant",
      "description": "Query Home Assistant entity attributes",
      "mode": "view"
    },
    {
      "name": "batteries",
      "title": "Batteries",
      "subtitle": "Home Assistant",
      "description": "Query Batteries",
      "mode": "view"
    },
    {
      "name": "motions",
      "title": "Motions",
      "subtitle": "Home Assistant",
      "description": "Query Motion Sensors",
      "mode": "view"
    },
    {
      "name": "vacuums",
      "title": "Vacuum Cleaners",
      "subtitle": "Home Assistant",
      "description": "Query Vacuum Cleaners",
      "mode": "view"
    },
    {
      "name": "cameras",
      "title": "Cameras",
      "subtitle": "Home Assistant",
      "description": "Query Cameras",
      "mode": "view"
    },
    {
      "name": "scripts",
      "title": "Scripts",
      "subtitle": "Home Assistant",
      "description": "Query Scripts",
      "mode": "view"
    },
    {
      "name": "buttons",
      "title": "Buttons",
      "subtitle": "Home Assistant",
      "description": "Query Buttons",
      "mode": "view"
    },
    {
      "name": "scenes",
      "title": "Scenes",
      "subtitle": "Home Assistant",
      "description": "Query Scenes",
      "mode": "view"
    },
    {
      "name": "switches",
      "title": "Switches",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant Switches",
      "mode": "view"
    },
    {
      "name": "helpers",
      "title": "Helpers",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant Helpers",
      "mode": "view"
    },
    {
      "name": "updates",
      "title": "Updates",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant Entity Updates",
      "mode": "view"
    },
    {
      "name": "doors",
      "title": "Doors",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant Entity with device class door",
      "mode": "view"
    },
    {
      "name": "weather",
      "title": "Weather",
      "subtitle": "Home Assistant",
      "description": "Get Weather states of Home Assistant Entity Weather",
      "mode": "view"
    },
    {
      "name": "windows",
      "title": "Windows",
      "subtitle": "Home Assistant",
      "description": "Get/Set states of Home Assistant Entity with device class window",
      "mode": "view"
    },
    {
      "name": "notificationmenu",
      "title": "Notifications Menu",
      "description": "Display persistent notifications, low batteries and updates in the menu bar",
      "mode": "menu-bar",
      "subtitle": "Home Assistant",
      "interval": "1m",
      "preferences": [
        {
          "name": "showcount",
          "description": "Show notification count in menu",
          "type": "checkbox",
          "label": "Show notification count in the menu bar",
          "required": false,
          "default": false
        },
        {
          "name": "indicatorUpdates",
          "description": "Pending updates will activate the indicator",
          "type": "checkbox",
          "required": false,
          "title": "Indicator",
          "label": "Updates",
          "default": true
        }
      ]
    },
    {
      "name": "zones",
      "title": "Zones",
      "description": "Get states about zones",
      "mode": "view",
      "subtitle": "Home Assistant"
    },
    {
      "name": "weathermenu",
      "title": "Weather Menu",
      "description": "Display Weather entity in the menu bar",
      "mode": "menu-bar",
      "interval": "15m",
      "preferences": [
        {
          "name": "entity",
          "description": "Weather Entity ID which will be shown",
          "type": "textfield",
          "required": false,
          "title": "Weather Entity",
          "placeholder": "weather.home"
        },
        {
          "name": "temperatureEntity",
          "description": "Temperature sensor which is used instead of the weather entity",
          "type": "textfield",
          "required": false,
          "title": "Temperature Sensor",
          "placeholder": "Entity ID"
        },
        {
          "name": "humidityEntity",
          "description": "Humidity sensor which is used instead of the weather entity",
          "type": "textfield",
          "required": false,
          "title": "Humidity Sensor",
          "placeholder": "Entity ID"
        },
        {
          "name": "maxHourlyForecastItems",
          "description": "Maximum number of hourly forecast items to display (0 to disable)",
          "type": "textfield",
          "required": false,
          "title": "Max Hourly Forecast Items",
          "placeholder": "5"
        },
        {
          "name": "maxDailyForecastItems",
          "description": "Maximum number of daily forecast items to display (0 to disable)",
          "type": "textfield",
          "required": false,
          "title": "Max Daily Forecast Items",
          "placeholder": "10"
        }
      ]
    },
    {
      "name": "assist",
      "title": "Assist",
      "description": "Conversation with Home Assistant Assist",
      "mode": "view",
      "subtitle": "Home Assistant"
    },
    {
      "name": "connection",
      "title": "Connection Check",
      "description": "Check the connection to Home Assistant",
      "mode": "view",
      "subtitle": "Home Assistant",
      "disabledByDefault": true
    },
    {
      "name": "mediaplayermenu",
      "title": "Media Player Menu",
      "description": "Display media players in the menu bar",
      "mode": "menu-bar",
      "interval": "1m",
      "preferences": [
        {
          "name": "includedEntities",
          "description": "Comma-separated list of entities to include in the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Included Entities",
          "placeholder": "media_player.*"
        },
        {
          "name": "excludedEntities",
          "description": "Comma-separated list of entities to exclude from the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Excluded Entities",
          "placeholder": "media_player.player1,media_player.player2,media_player.bath*"
        }
      ]
    },
    {
      "name": "lightsmenu",
      "title": "Lights Menu",
      "description": "Display lights in the menu bar",
      "mode": "menu-bar",
      "interval": "1m",
      "preferences": [
        {
          "name": "includedEntities",
          "description": "Comma-separated list of entities to include in the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Included Entities",
          "placeholder": "light.*"
        },
        {
          "name": "excludedEntities",
          "description": "Comma-separated list of entities to exclude from the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Excluded Entities",
          "placeholder": "light.mylight1,light.mylight2,light.bath*"
        }
      ]
    },
    {
      "name": "coversmenu",
      "title": "Covers Menu",
      "description": "Display covers in the menu bar",
      "mode": "menu-bar",
      "interval": "15m",
      "preferences": [
        {
          "name": "includedEntities",
          "description": "Comma-separated list of entities to include in the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Included Entities",
          "placeholder": "cover.*"
        },
        {
          "name": "excludedEntities",
          "description": "Comma-separated list of entities to exclude from the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Excluded Entities",
          "placeholder": "cover.mycover1,cover.bath*"
        }
      ]
    },
    {
      "name": "batteriesmenu",
      "title": "Batteries Menu",
      "description": "Display batteries in the menu bar",
      "mode": "menu-bar",
      "interval": "30m",
      "preferences": [
        {
          "name": "includedEntities",
          "description": "Comma-separated list of entities to include in the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Included Entities",
          "placeholder": "sensor.*"
        },
        {
          "name": "excludedEntities",
          "description": "Comma-separated list of entities to exclude from the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Excluded Entities",
          "placeholder": "sensor.mysensor1,cover.mysensor*"
        },
        {
          "name": "excludeHigher",
          "description": "Exclude battery with a level higher then the given value. Keep empty to disable the filter",
          "type": "textfield",
          "required": false,
          "title": "Exclude Higher then",
          "placeholder": "50"
        }
      ]
    },
    {
      "name": "entitiesmenu",
      "title": "Entities Menu",
      "description": "Show given entities in the menu bar",
      "mode": "menu-bar",
      "interval": "15m",
      "preferences": [
        {
          "name": "includedEntities",
          "description": "Comma-separated list of entities to include in the menu, with wildcard support",
          "type": "textfield",
          "required": true,
          "title": "Included Entities",
          "placeholder": "cover.*"
        },
        {
          "name": "excludedEntities",
          "description": "Comma-separated list of entities to exclude from the menu, with wildcard support",
          "type": "textfield",
          "required": false,
          "title": "Excluded Entities",
          "placeholder": "cover.mycover1,cover.bath*"
        }
      ]
    },
    {
      "name": "entitymenu01",
      "title": "Entity Menu 1",
      "description": "Show a single entity directly in the menu bar",
      "mode": "menu-bar",
      "interval": "5m",
      "preferences": [
        {
          "name": "entity",
          "description": "Entity ID which will be shown",
          "type": "textfield",
          "required": true,
          "title": "Weather Entity",
          "placeholder": "weather.home"
        }
      ]
    },
    {
      "name": "entitymenu02",
      "title": "Entity Menu 2",
      "description": "Show a single entity directly in the menu bar",
      "mode": "menu-bar",
      "interval": "5m",
      "disabledByDefault": true,
      "preferences": [
        {
          "name": "entity",
          "description": "Entity ID which will be shown",
          "type": "textfield",
          "required": true,
          "title": "Weather Entity",
          "placeholder": "weather.home"
        }
      ]
    },
    {
      "name": "entitymenu03",
      "title": "Entity Menu 3",
      "description": "Show a single entity directly in the menu bar",
      "mode": "menu-bar",
      "interval": "5m",
      "disabledByDefault": true,
      "preferences": [
        {
          "name": "entity",
          "description": "Entity ID which will be shown",
          "type": "textfield",
          "required": true,
          "title": "Weather Entity",
          "placeholder": "weather.home"
        }
      ]
    },
    {
      "name": "services",
      "title": "Services",
      "description": "Interact with Home Assistant services",
      "mode": "view"
    },
    {
      "name": "runService",
      "title": "Run Service",
      "description": "Run a service with support for quicklinks and deeplinks via context arguments",
      "mode": "no-view"
    },
    {
      "name": "calendar",
      "title": "Calendar",
      "description": "Query calendars",
      "mode": "view"
    },
    {
      "name": "calendarmenu",
      "title": "Calendar Menu",
      "description": "Display calendar in the menu bar",
      "mode": "menu-bar",
      "interval": "1m",
      "preferences": [
        {
          "name": "maxRootTextLength",
          "description": "Maximum length of root text (0 to disable)",
          "type": "textfield",
          "required": false,
          "title": "Maximum Root Text Length",
          "placeholder": "10"
        },
        {
          "name": "pastEventHandling",
          "description": "Handling past events",
          "type": "dropdown",
          "required": false,
          "title": "Past Events Handling",
          "default": "show",
          "data": [
            {
              "title": "Show",
              "value": "show"
            },
            {
              "title": "Disable",
              "value": "disable"
            },
            {
              "title": "Hide",
              "value": "hide"
            }
          ]
        }
      ]
    }
  ],
  "tools": [
    {
      "name": "get-entities",
      "title": "Get Entities",
      "description": "Get entities from Home Assistant"
    },
    {
      "name": "run-service",
      "title": "Run Service",
      "description": "Run a Home Assistant service"
    }
  ],
  "ai": {
    "instructions": "Communication Style:\nUse a friendly and approachable tone with emojis to make interactions more engaging.\n\nTo control Home Assistant devices:\n1. First, use get-entities to find the correct entity IDs for the devices the user wants to control.\n2. EXCLUDE from the operation the entities that are already in the desired state, and inform the user that the device will not be controlled (e.g., 'the kitchen light is already on').\n3. If an entity is unique to its type (e.g., a single air conditioner switched on, a single light switched off, etc.), INCLUDE it in the operation without asking for user consent.\n4. If there are multiple entities of the same type (e.g., two lights to turn off or three air conditioners to toggle), ask the user to specify which device they want to control by providing a list of available entities with their current states (e.g., the user tells 'turn on the light' but there are multiple lights switched off).\n5. DO NOT control multiple entities at once without asking for consent, unless the user explicitly indicates that they want to control all entities of the same type (e.g., 'turn off the lights' or 'turn on all lights').\n6. Once you have the user's confirmation, use run-service to execute the operation.",
    "evals": [
      {
        "input": "@homeassistant set the bedroom light to a romantic color and brightness",
        "mocks": {
          "run-service": {},
          "get-entities": {
            "entities": [
              {
                "friendly_name": "Philips Hue",
                "state": "off",
                "entity_id": "light.philips_hue",
                "attributes": {
                  "min_mireds": 153,
                  "rgb_color": null,
                  "color_mode": null,
                  "min_color_temp_kelvin": 2000,
                  "hs_color": null,
                  "max_mireds": 500,
                  "max_color_temp_kelvin": 6500,
                  "xy_color": null,
                  "color_temp": null,
                  "friendly_name": "Philips Hue",
                  "supported_features": 0,
                  "color_temp_kelvin": null,
                  "brightness": null,
                  "supported_color_modes": [
                    "color_temp",
                    "hs"
                  ]
                }
              }
            ]
          }
        },
        "expected": [
          {
            "callsTool": {
              "name": "get-entities",
              "arguments": {}
            }
          },
          {
            "callsTool": {
              "name": "run-service",
              "arguments": {
                "service": "turn_on",
                "data.entity_id.0": "light.philips_hue"
              }
            }
          },
          {
            "meetsCriteria": "Tells that the light has been set to a romantic color and brightness"
          }
        ]
      },
      {
        "input": "@homeassistant how's the temperature and humidity in the living room?",
        "mocks": {
          "get-entities": {
            "entities": [
              {
                "friendly_name": "Living Room Climate Sensor Humidity",
                "state": "70.8",
                "entity_id": "sensor.living_room_climate_sensor_humidity",
                "attributes": {
                  "state_class": "measurement",
                  "unit_of_measurement": "%",
                  "device_class": "humidity",
                  "friendly_name": "Living Room Climate Sensor Humidity"
                }
              },
              {
                "friendly_name": "Living Room Climate Sensor Temperature",
                "state": "28.6",
                "entity_id": "sensor.living_room_climate_sensor_temperature",
                "attributes": {
                  "state_class": "measurement",
                  "unit_of_measurement": "°C",
                  "device_class": "temperature",
                  "friendly_name": "Living Room Climate Sensor Temperature"
                }
              }
            ]
          }
        },
        "expected": [
          {
            "callsTool": {
              "name": "get-entities",
              "arguments": {}
            }
          },
          {
            "meetsCriteria": "Returns the temperature and humidity in the living room"
          }
        ]
      }
    ]
  },
  "preferences": [
    {
      "name": "instance",
      "type": "textfield",
      "required": true,
      "title": "Home Assistant URL",
      "description": "URL of your Home Assistant instance",
      "placeholder": "http://homeassistant.local:8123"
    },
    {
      "name": "instanceInternal",
      "type": "textfield",
      "required": false,
      "title": "Internal Home Assistant URL (optional)",
      "description": "URL of your Home Assistant instance in your home network used when the current Wi-Fi SSID is in the SSID list of your home Wi-Fi or the URL is pingable",
      "placeholder": "http://homeassistant.local:8123"
    },
    {
      "name": "homeSSIDs",
      "type": "textfield",
      "required": false,
      "title": "Home Network Detection",
      "description": "Comma-separated list of home Wi-Fi SSIDs used for detecting your home network when using the internal Home Assistant URL",
      "placeholder": "HomeWiFi1,HomeWiFi2"
    },
    {
      "name": "usePing",
      "description": "Use ping to detect home network",
      "type": "checkbox",
      "required": false,
      "label": "Use Ping",
      "default": true
    },
    {
      "name": "token",
      "type": "password",
      "required": true,
      "title": "API Token",
      "description": "Your Home Assistant long-lived access token",
      "placeholder": "Enter your Home Assistant access token"
    },
    {
      "name": "ignorecerts",
      "type": "checkbox",
      "label": "Ignore Certificates",
      "required": false,
      "default": false,
      "title": "Network Settings",
      "description": "Ignore Certificates",
      "placeholder": "Ignore Certificates"
    },
    {
      "name": "showEntityId",
      "type": "checkbox",
      "label": "Show Entity IDs",
      "required": false,
      "default": false,
      "title": "Style",
      "description": "Show Entity IDs as subtitle"
    },
    {
      "name": "camerarefreshinterval",
      "type": "textfield",
      "required": false,
      "default": "3000",
      "title": "Camera Refresh Interval (ms)",
      "description": "Specify the camera stream refresh interval in milliseconds (minimum 2000ms recommended, 0 disables auto-refresh)",
      "placeholder": "3000"
    },
    {
      "name": "preferredapp",
      "description": "Preferred application to open",
      "type": "dropdown",
      "required": false,
      "title": "Preferred Application",
      "data": [
        {
          "title": "Browser",
          "value": "browser"
        },
        {
          "title": "Companion",
          "value": "companion"
        }
      ]
    }
  ],
  "categories": [
    "Other"
  ],
  "dependencies": {
    "@raycast-community/ui": "^0.1.1",
    "@raycast/api": "^1.91.1",
    "@raycast/utils": "^1.18.1",
    "home-assistant-js-websocket": "^8.2.0",
    "javascript-time-ago": "^2.5.11",
    "lodash-es": "^4.17.21",
    "multicast-dns": "^7.2.5",
    "node-fetch": "^2.7.0",
    "open": "^8.4.2",
    "ping": "^0.4.4",
    "plist": "^3.1.0",
    "url-join": "^4.0.1",
    "ws": "^8.18.0",
    "yaml": "^2.5.1"
  },
  "devDependencies": {
    "@raycast/eslint-config": "^1.0.11",
    "@types/lodash-es": "^4.17.12",
    "@types/multicast-dns": "^7.2.4",
    "@types/node": "^20.16.5",
    "@types/node-fetch": "^2.6.11",
    "@types/ping": "^0.4.4",
    "@types/plist": "^3.0.5",
    "@types/react": "^18.3.5",
    "@types/url-join": "^4.0.3",
    "@types/ws": "^8.5.12",
    "eslint": "^7.32.0",
    "prettier": "^3.3.3",
    "react": "^18.2.0",
    "typescript": "^4.9.5"
  },
  "scripts": {
    "dev": "ray develop",
    "build": "ray build -e dist",
    "fix-lint": "ray lint --fix",
    "lint": "ray lint",
    "publish": "npx @raycast/api@latest publish"
  }
}
