import { ActionPanel, Action, Color, List } from "@raycast/api";
import { useFetch, getFavicon } from "@raycast/utils";

type Program = {
  name: string;
  url: string;
  bounty: boolean;
  swag: boolean;
  domains: string[];
};

function getRealFavicon(program: Program) {
  let source = program.url;
  if (program.domains.length > 0) {
    source = `https://${program.domains[0]}`;
  }

  return getFavicon(source);
}

function getTags(bounty: boolean, swag: boolean) {
  const tags = [];

  if (swag) {
    tags.push({ tag: { value: "swag", color: Color.Blue } });
  }

  if (bounty) {
    tags.push({ tag: { value: "bounty", color: Color.Green } });
  }

  return tags;
}

export default function Command() {
  const { isLoading, data: json } = useFetch<string>(
    "https://raw.githubusercontent.com/projectdiscovery/public-bugbounty-programs/main/chaos-bugbounty-list.json",
  );

  const programs: Program[] = json ? JSON.parse(json).programs : [];

  const uniquePrograms: Program[] = programs.filter(
    (program, index, self) => self.findIndex((p) => p.name === program.name) === index,
  );

  return (
    <List isLoading={isLoading}>
      {(uniquePrograms || []).map((program: Program) => (
        <List.Item
          key={program.name}
          icon={getRealFavicon(program)}
          title={program.name}
          subtitle={`${program.domains.length} domains`}
          accessories={getTags(program.bounty, program.swag)}
          actions={
            <ActionPanel>
              <Action.OpenInBrowser url={program.url} />
            </ActionPanel>
          }
        />
      ))}
    </List>
  );
}
