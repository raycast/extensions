{
  "openapi": "3.0.1",
  "info": {
    "title": "Stats API Documentation",
    "description": "Official API for Major League Baseball.",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://statsapi.mlb.com",
      "description": "Production"
    },
    {
      "url": "https://beta-statsapi.mlb.com",
      "description": "Beta"
    },
    {
      "url": "https://qa-statsapi.mlb.com",
      "description": "QA"
    },
    {
      "url": "http://localhost:8080",
      "description": "Local"
    }
  ],
  "tags": [
    {
      "name": "Reviews"
    },
    {
      "name": "Bat Tracking",
      "description": "Operations pertaining to bat tracking data "
    },
    {
      "name": "Attendance"
    },
    {
      "name": "League",
      "description": "Operations pertaining to leagues"
    },
    {
      "name": "Predictions"
    },
    {
      "name": "Sports",
      "description": "Operations pertaining to sports"
    },
    {
      "name": "Weather",
      "description": "Operations pertaining to weather data "
    },
    {
      "name": "Misc"
    },
    {
      "name": "High/Low",
      "description": "Operations pertaining to high/low stats"
    },
    {
      "name": "Job",
      "description": "Operations pertaining to jobs"
    },
    {
      "name": "Division",
      "description": "Operations pertaining to divisions"
    },
    {
      "name": "Game",
      "description": "Operations pertaining to games"
    },
    {
      "name": "Misc",
      "description": "Config elements"
    },
    {
      "name": "Homerun Derby",
      "description": "Operations pertaining to home run derby"
    },
    {
      "name": "Closed",
      "description": "Collapsed tags",
      "x-tag-expanded": "false"
    },
    {
      "name": "Streaks",
      "description": "Endpoints for stats streaks"
    },
    {
      "name": "Stats",
      "description": "Operations pertaining to stats"
    },
    {
      "name": "Venues",
      "description": "Operations pertaining to venues"
    },
    {
      "name": "Person",
      "description": "Operations pertaining to players"
    },
    {
      "name": "Awards",
      "description": "Operations pertaining to awards"
    },
    {
      "name": "Game Pace"
    },
    {
      "name": "analytics",
      "description": "Operations pertaining to field tracking and analytics.",
      "x-tag-expanded": "true"
    },
    {
      "name": "Broadcast",
      "description": "Operations pertaining to broadcasts"
    },
    {
      "name": "Schedule",
      "description": "Operations pertaining to schedules",
      "x-tag-expanded": "false"
    },
    {
      "name": "Uniforms",
      "description": "Operations pertaining to uniforms"
    },
    {
      "name": "Draft",
      "description": "Operations pertaining to MLB BaseballDraft"
    },
    {
      "name": "Teams",
      "description": "Operations pertaining to teams"
    },
    {
      "name": "Biomechanics",
      "description": "Operations pertaining to biomechanical data "
    },
    {
      "name": "Standings",
      "description": "Operations pertaining to teams"
    },
    {
      "name": "Conference",
      "description": "Operations pertaining to conferences"
    },
    {
      "name": "Transactions",
      "description": "Operations pertaining to transactions"
    },
    {
      "name": "Skeletal",
      "description": "Operations pertaining to skeletal data "
    },
    {
      "name": "Season",
      "description": "Operations pertaining to seasons"
    },
    {
      "name": "Milestones",
      "description": "Operations pertaining to milestones"
    }
  ],
  "paths": {
    "/api/v1/teams/{teamId}/alumni": {
      "get": {
        "tags": ["Teams"],
        "summary": "View all team alumni",
        "operationId": "alumni",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatGroup"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleRestObject"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Teams"],
        "operationId": "updateAlumni",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatGroup"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/jobTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all job types",
        "operationId": "jobTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobTypeRestObject"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Misc"],
        "operationId": "updateJobTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gameStatus": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all status types",
        "operationId": "gameStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestObject"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Misc"],
        "summary": "Clear all status types",
        "operationId": "updateGameStatuses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/game/{gamePk}/{guid}/contextMetricsAverages": {
      "get": {
        "tags": ["analytics"],
        "summary": "Get a json file containing raw coordinate data and refined calculated metrics.",
        "description": "Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass \"Accept-Encoding: gzip\" as a header to have the responses compressed.",
        "operationId": "contextMetricsWithAverages",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "description": "Unique identifier for a play within a game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalculatedMetricRestObject"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["analytics"],
        "summary": "Get a json file containing raw coordinate data and refined calculated metrics.",
        "description": "Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass \"Accept-Encoding: gzip\" as a header to have the responses compressed.",
        "operationId": "contextMetricsWithAveragesPost",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "description": "Unique identifier for a play within a game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalculatedMetricRestObject"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/windDirection": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all wind direction options",
        "operationId": "windDirection",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/weatherTrajectoryConfidences": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all weather trajectories",
        "operationId": "weatherTrajectoryConfidences",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherTrajectoryConfidenceTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/weather/venues/{venueId}/full": {
      "get": {
        "tags": ["Weather"],
        "summary": "Get full weather for a venue.",
        "description": "Returns a json file containing full weather for a specific venue.",
        "operationId": "weatherFull",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "description": "Unique Venue Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/FullWeatherWrapperRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/weather/venues/{venueId}/basic": {
      "get": {
        "tags": ["Weather"],
        "summary": "Get basic weather for a venue.",
        "description": "Returns a json file containing basic weather for a specific venue.",
        "operationId": "weatherBasic",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "description": "Unique Venue Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/BasicWeatherWrapperRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/weather/game/{gamePk}/{playId}": {
      "get": {
        "tags": ["Weather"],
        "summary": "Get the raw field weather data.",
        "description": "Returns a json file containing weather for the current play.",
        "operationId": "weatherDataBasedOnPlay",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playId",
            "in": "path",
            "description": "Unique identifier for a play within a game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PlayWeatherWrapperRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/weather/game/{gamePk}/forecast/{roofType}": {
      "get": {
        "tags": ["Weather"],
        "summary": "Get the weather forecast for a game.",
        "description": "Returns a json file containing the weather forecast for a specific game.",
        "operationId": "weatherForecast",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "roofType",
            "in": "path",
            "description": "Venue roof type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RoofType"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ForecastWeatherWrapperRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/violationTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "View available violationType options",
        "operationId": "violationTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ViolationTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/videoResolutionTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "View video resolution options",
        "operationId": "videoResolutionTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VideoResolutionEnumRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/venues": {
      "get": {
        "tags": ["Venues"],
        "summary": "View venue info",
        "description": "This endpoint allows you to pull venues",
        "operationId": "venues",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "description": "Unique Venue Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "venueIds",
            "in": "query",
            "description": "Comma delimited list of Unique venue identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Whether or not a player is active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeEvents",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VenuesRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/venues/{venueId}": {
      "get": {
        "tags": ["Venues"],
        "summary": "View venue info",
        "description": "This endpoint allows you to pull venues",
        "operationId": "venues_1",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "description": "Unique Venue Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "venueIds",
            "in": "query",
            "description": "Comma delimited list of Unique venue identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Whether or not a player is active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeEvents",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VenuesRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/uniforms/team": {
      "get": {
        "tags": ["Uniforms"],
        "summary": "View Team Uniform info",
        "description": "This endpoint allows you to pull team uniform data for a season",
        "operationId": "uniformsByTeam",
        "parameters": [
          {
            "name": "teamIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UniformsTeamsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/uniforms/game": {
      "get": {
        "tags": ["Uniforms"],
        "summary": "View Game Uniform info",
        "description": "This endpoint allows you to pull team uniform data for a game",
        "operationId": "uniformsByGame",
        "parameters": [
          {
            "name": "gamePks",
            "in": "query",
            "description": "Comma delimited list of unique primary keys",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UniformsGamesRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions": {
      "get": {
        "tags": ["Transactions"],
        "summary": "View transaction info",
        "description": "This endpoint allows you to pull transactions.",
        "operationId": "transactions",
        "parameters": [
          {
            "name": "leagueId",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Comma delimited list of Unique Team identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "transactionIds",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "transactionTypes",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "divisionIds",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactionTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all transaction types",
        "operationId": "transactionTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/trackingVersions": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all tracking versions",
        "operationId": "trackingVersions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackingVersion"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/trackingVendors": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all tracking vendors",
        "operationId": "trackingVendors",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackingVendor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/trackingSystemOwners": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all tracking system owners",
        "operationId": "trackingSystemOwners",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackingSystemOwner"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/trackingSoftwareVersions": {
      "get": {
        "tags": ["Misc"],
        "summary": "List the tracking software versions and notes",
        "operationId": "trackingSoftwareVersions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrackingSoftwareVersionRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}/stats": {
      "get": {
        "tags": ["Teams"],
        "summary": "View a teams stats",
        "operationId": "stats",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "stats",
            "in": "query",
            "description": "Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "sortStat",
            "in": "query",
            "description": "Baseball stat to sort splits by.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballStatsEnum"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupByEnum"
              }
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "opposingPlayerId",
            "in": "query",
            "description": "A unique identifier for the opposing team",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "description": "Situation code for a given stat split.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}/roster": {
      "get": {
        "tags": ["Teams"],
        "summary": "View a teams roster",
        "description": "This endpoint allows you to pull teams",
        "operationId": "roster",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "rosterType",
            "in": "path",
            "description": "Type of roster. Available types in /api/v1/rosterTypes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RosterRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}/roster/{rosterType}": {
      "get": {
        "tags": ["Teams"],
        "summary": "View a teams roster",
        "description": "This endpoint allows you to pull teams",
        "operationId": "roster_1",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "rosterType",
            "in": "path",
            "description": "Type of roster. Available types in /api/v1/rosterTypes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RosterRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}/personnel": {
      "get": {
        "tags": ["Teams"],
        "summary": "View all coaches for a team",
        "operationId": "personnel",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RosterRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}/leaders": {
      "get": {
        "tags": ["Teams"],
        "summary": "View team stat leaders",
        "operationId": "leaders",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leaderCategories",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PersonLeadersEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "leaderGameTypes",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExpandEnum"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playerPool",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PlayerPoolEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamLeaderContainerRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}/history": {
      "get": {
        "tags": ["Teams"],
        "summary": "View historical records for a list of teams",
        "operationId": "allTeams",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Comma delimited list of Unique Team identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "startSeason",
            "in": "query",
            "description": "Start date for range of data (used with end date optionally). Example: '2018' or '2018.2'",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endSeason",
            "in": "query",
            "description": "End date for range of data (used with start date optionally). Format: '2018' or '2018.2'",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/history": {
      "get": {
        "tags": ["Teams"],
        "summary": "View historical records for a list of teams",
        "operationId": "allTeams_1",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Comma delimited list of Unique Team identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "startSeason",
            "in": "query",
            "description": "Start date for range of data (used with end date optionally). Example: '2018' or '2018.2'",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endSeason",
            "in": "query",
            "description": "End date for range of data (used with start date optionally). Format: '2018' or '2018.2'",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}/coaches": {
      "get": {
        "tags": ["Teams"],
        "summary": "View all coaches for a team",
        "operationId": "coaches",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RosterRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}/affiliates": {
      "get": {
        "tags": ["Teams"],
        "summary": "View team and affiliate teams",
        "operationId": "affiliates",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/affiliates": {
      "get": {
        "tags": ["Teams"],
        "summary": "View team and affiliate teams",
        "operationId": "affiliates_1",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/stats": {
      "get": {
        "tags": ["Teams"],
        "summary": "View a teams stats",
        "operationId": "stats_1",
        "parameters": [
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "stats",
            "in": "query",
            "description": "Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "sortStat",
            "in": "query",
            "description": "Baseball stat to sort splits by.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballStatsEnum"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "daysBack",
            "in": "query",
            "description": "Returns results from the last 'X' days (Starting from yesterday).",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "description": "Situation code for a given stat split.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "combineSits",
            "in": "query",
            "description": "If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/stats/leaders": {
      "get": {
        "tags": ["Teams"],
        "summary": "View leaders for team stats",
        "operationId": "leaders_1",
        "parameters": [
          {
            "name": "leaderCategories",
            "in": "query",
            "description": "TBD",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PersonLeadersEnum"
              }
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "stats",
            "in": "query",
            "description": "Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "statType",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatType"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statGroup",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "daysBack",
            "in": "query",
            "description": "Returns results from the last 'X' days (Starting from yesterday).",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "description": "Situation code for a given stat split.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueLeaderContainerRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams": {
      "get": {
        "tags": ["Teams"],
        "summary": "View info for all teams",
        "description": "This endpoint allows you to pull teams",
        "operationId": "teams",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "divisionId",
            "in": "query",
            "description": "Unique Division Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Flag for fetching teams that are currently active (Y), inactive (N), pending (P), or all teams (B)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TeamActiveStatusEnum"
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "allStarStatuses",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AllStarEnum"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/teams/{teamId}": {
      "get": {
        "tags": ["Teams"],
        "summary": "View info for all teams",
        "description": "This endpoint allows you to pull teams",
        "operationId": "teams_1",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "divisionId",
            "in": "query",
            "description": "Unique Division Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Flag for fetching teams that are currently active (Y), inactive (N), pending (P), or all teams (B)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TeamActiveStatusEnum"
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "allStarStatuses",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AllStarEnum"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TeamsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/streaks": {
      "get": {
        "tags": ["Streaks"],
        "summary": "View streaks",
        "operationId": "getStreaks",
        "parameters": [
          {
            "name": "streakOrg",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrganizationType"
            }
          },
          {
            "name": "streakStat",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StreakStatEnum"
              }
            }
          },
          {
            "name": "streakSpan",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StreakSpanEnum"
            }
          },
          {
            "name": "streakLevel",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StreakLevelEnum"
            }
          },
          {
            "name": "streakThreshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inverse",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "startersOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "statGroup",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "activeStreak",
            "in": "query",
            "description": "Whether or not a player is active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StreaksWrapperRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/streaks/types": {
      "get": {
        "tags": ["Streaks"],
        "summary": "View streaks parameter options",
        "operationId": "streakTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats": {
      "get": {
        "tags": ["Stats"],
        "summary": "View stats",
        "operationId": "stats_2",
        "parameters": [
          {
            "name": "stats",
            "in": "query",
            "description": "Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "personId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Comma delimited list of Unique Team identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MetricType"
              }
            }
          },
          {
            "name": "gamePk",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batterTeamId",
            "in": "query",
            "description": "A unique identifier for the batter's team",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitcherTeamId",
            "in": "query",
            "description": "A unique identifier for the pitcher's team",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "batterId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pitcherId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "description": "Situation code for a given stat split.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "combineSits",
            "in": "query",
            "description": "If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortStat",
            "in": "query",
            "description": "Baseball stat to sort splits by.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballStatsEnum"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "playerPool",
            "in": "query",
            "description": "Return \"ALL\" or only \"QUALIFIED\" players based on plate appearances.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PlayerPoolEnum"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Position number. Format: 1, 2, 3, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseballPosition"
              }
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "daysBack",
            "in": "query",
            "description": "Returns results from the last 'X' days (Starting from yesterday).",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamesBack",
            "in": "query",
            "description": "Returns results from the last 'X' games played.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "excludeTradedPlayers",
            "in": "query",
            "description": "Excludes players who have since been traded from the input team",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/search": {
      "get": {
        "tags": ["Stats"],
        "summary": "View stats from search",
        "operationId": "beastStats",
        "parameters": [
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "gamePks",
            "in": "query",
            "description": "Comma delimited list of unique primary keys",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "playIds",
            "in": "query",
            "description": "Comma delimited list of unique play identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitcherTeamIds",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "batterTeamIds",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitcherSportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "batterSportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitcherLeagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "batterLeagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "divisionIds",
            "in": "query",
            "description": "Comma delimited list of Unique League Identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitcherDivisionIds",
            "in": "query",
            "description": "Comma delimited list of Unique League Identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "batterDivisionIds",
            "in": "query",
            "description": "Comma delimited list of Unique League Identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitchersOnTeamIds",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "battersOnTeamIds",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "playerIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "playerPool",
            "in": "query",
            "description": "Return \"ALL\" or only \"QUALIFIED\" players based on plate appearances.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PlayerPoolEnum"
            }
          },
          {
            "name": "pitcherIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "batterIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "catcherIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "firstBasemanIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "secondBasemanIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "thirdBasemanIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "shortstopIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leftFielderIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "centerFielderIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "rightFielderIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "runnerFirstIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "runnerSecondIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "runnerThirdIds",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "venueIds",
            "in": "query",
            "description": "Unique Venue Identifier",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitchHand",
            "in": "query",
            "description": "Handedness of pitcher",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batSide",
            "in": "query",
            "description": "Bat side of hitter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pitchTypes",
            "in": "query",
            "description": "Classification of pitch (fastball, curveball, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PitchType"
              }
            }
          },
          {
            "name": "pitchCodes",
            "in": "query",
            "description": "Result of the pitch (ball, called strike, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PitchCode"
              }
            }
          },
          {
            "name": "eventTypes",
            "in": "query",
            "description": "Type of event",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventType"
              }
            }
          },
          {
            "name": "positions",
            "in": "query",
            "description": "All of the details of a player's position",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseballPosition"
              }
            }
          },
          {
            "name": "primaryPositions",
            "in": "query",
            "description": "All of the details of a player's position",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseballPosition"
              }
            }
          },
          {
            "name": "minPitchSpeed",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxPitchSpeed",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minSpinRate",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxSpinRate",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minExtension",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxExtension",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minExitVelocityAgainst",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxExitVelocityAgainst",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minLaunchAngleAgainst",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxLaunchAngleAgainst",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minExitVelocity",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxExitVelocity",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minLaunchAngle",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxLaunchAngle",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minHomeRunDistance",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxHomeRunDistance",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minHitDistance",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxHitDistance",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minHangTime",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxHangTime",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minHitProbability",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxHitProbability",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minCatchProbability",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxCatchProbability",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minAttackAngle",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxAttackAngle",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minBatSpeed",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxBatSpeed",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "minHomeRunXBallparks",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxHomeRunXBallparks",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "isBarrel",
            "in": "query",
            "description": "Whether or not a play resulted in a barreled ball",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hitTrajectories",
            "in": "query",
            "description": "Trajectory of hit (line drive, fly ball, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HitTrajectory"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupByEnum"
              }
            }
          },
          {
            "name": "compareOver",
            "in": "query",
            "description": "Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupByEnum"
              }
            }
          },
          {
            "name": "sortStat",
            "in": "query",
            "description": "Baseball stat to sort splits by.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballStatsEnum"
            }
          },
          {
            "name": "sortModifier",
            "in": "query",
            "description": "The prefix modifier for the sort stat.  avg, min, max. I.E minExitVelocity, maxLaunchAngle, avgHitDistance",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AggregateSortTypeEnum"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "percentile",
            "in": "query",
            "description": "Only return averages above this percentile. used for best effort plays",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minOccurrences",
            "in": "query",
            "description": "Minimum occurrences to filter upon",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minPlateAppearances",
            "in": "query",
            "description": "Minimum occurrences to filter upon",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minInnings",
            "in": "query",
            "description": "Minimum occurrences to filter upon",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "qualifierRate",
            "in": "query",
            "description": "Minimum occurrences to filter upon",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "description": "Situation code for a given stat split.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "showTotals",
            "in": "query",
            "description": "Columns to return totals",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeNullMetrics",
            "in": "query",
            "description": "Show events with null metrics",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "statFields",
            "in": "query",
            "description": "Baseball stat fields to populate",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatField"
              }
            }
          },
          {
            "name": "atBatNumbers",
            "in": "query",
            "description": "The at bat number of a given game. Format: 1, 2, 3, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitchNumbers",
            "in": "query",
            "description": "The pitch number of a given game. Format: 1, 2, 3, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "debug",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Whether or not a player is active",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PlayerActiveStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatContainerRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/stats/search/stats": {
      "get": {
        "tags": ["Misc"],
        "summary": "List stat search stats",
        "operationId": "statSearchStats",
        "parameters": [
          {
            "name": "filterLevel",
            "in": "query",
            "description": "Categories of filters for stat search",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FilterLevelEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatSearchStatRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/search/params": {
      "get": {
        "tags": ["Misc"],
        "summary": "List stat search parameters",
        "operationId": "statSearchParams",
        "parameters": [
          {
            "name": "filterLevel",
            "in": "query",
            "description": "Categories of filters for stat search",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FilterLevelEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatSearchParamRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/search/groupByTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List groupBy types",
        "operationId": "statSearchGroupByTypes",
        "parameters": [
          {
            "name": "filterLevel",
            "in": "query",
            "description": "Categories of filters for stat search",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FilterLevelEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupByEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/search/config": {
      "get": {
        "tags": ["Misc"],
        "summary": "Stats Search Config Endpoint",
        "operationId": "statSearchConfig",
        "parameters": [
          {
            "name": "filterLevel",
            "in": "query",
            "description": "Categories of filters for stat search",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FilterLevelEnum"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatSearchConfigRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/metrics": {
      "get": {
        "tags": ["Stats"],
        "summary": "View metric stats",
        "operationId": "metricStats",
        "parameters": [
          {
            "name": "personId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "personIds",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "batterId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pitcherId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stats",
            "in": "query",
            "description": "Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "opposingPlayerId",
            "in": "query",
            "description": "A unique identifier for the opposing team",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "All of the details of a player's position",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseballPosition"
              }
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Type of event",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventType"
              }
            }
          },
          {
            "name": "pitchType",
            "in": "query",
            "description": "Classification of pitch (fastball, curveball, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "hitTrajectory",
            "in": "query",
            "description": "Trajectory of hit (line drive, fly ball, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HitTrajectory"
              }
            }
          },
          {
            "name": "batSide",
            "in": "query",
            "description": "Bat side of hitter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pitchHand",
            "in": "query",
            "description": "Handedness of pitcher",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "venueId",
            "in": "query",
            "description": "All of the details of a venue",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MetricType"
              }
            }
          },
          {
            "name": "gamePk",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minValue",
            "in": "query",
            "description": "Minimum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxValue",
            "in": "query",
            "description": "Maximum value to filter on",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "percentile",
            "in": "query",
            "description": "Only return averages above this percentile. used for best effort plays",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "minOccurrences",
            "in": "query",
            "description": "Minimum occurrences to filter upon",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "batterTeamId",
            "in": "query",
            "description": "A unique identifier for the batter's team",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitcherTeamId",
            "in": "query",
            "description": "A unique identifier for the pitcher's team",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "debug",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/stats/leaders": {
      "get": {
        "tags": ["Stats"],
        "summary": "Get leaders for a statistic",
        "operationId": "leaders_2",
        "parameters": [
          {
            "name": "leaderCategories",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PersonLeadersEnum"
              }
            }
          },
          {
            "name": "leaderGameTypes",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "statGroup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExpandEnum"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "playerPool",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PlayerPoolEnum"
            }
          },
          {
            "name": "statType",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatType"
            }
          },
          {
            "name": "playerActive",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PlayerActiveStatusEnum"
            }
          },
          {
            "name": "position",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseballPosition"
              }
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "daysBack",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamesBack",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GroupByEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueLeaderContainerRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/grouped": {
      "get": {
        "tags": ["Stats"],
        "summary": "View grouped stats",
        "operationId": "groupedStats",
        "parameters": [
          {
            "name": "stats",
            "in": "query",
            "description": "Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "personId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Comma delimited list of Unique Team identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MetricType"
              }
            }
          },
          {
            "name": "gamePk",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batterTeamId",
            "in": "query",
            "description": "A unique identifier for the batter's team",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pitcherTeamId",
            "in": "query",
            "description": "A unique identifier for the pitcher's team",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "batterId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pitcherId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "description": "Situation code for a given stat split.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "combineSits",
            "in": "query",
            "description": "If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortStat",
            "in": "query",
            "description": "Baseball stat to sort splits by.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballStatsEnum"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "playerPool",
            "in": "query",
            "description": "Return \"ALL\" or only \"QUALIFIED\" players based on plate appearances.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PlayerPoolEnum"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Position number. Format: 1, 2, 3, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseballPosition"
              }
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "daysBack",
            "in": "query",
            "description": "Returns results from the last 'X' days (Starting from yesterday).",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamesBack",
            "in": "query",
            "description": "Returns results from the last 'X' games played.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "excludeTradedPlayers",
            "in": "query",
            "description": "Excludes players who have since been traded from the input team",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "statFields",
            "in": "query",
            "description": "Baseball stat fields to populate",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatField"
              }
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Baseball statField to sort on.  If no statField is given, sortField defaults to BASIC.  If 1 statField is given, that is the default sortField.",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/analytics/stolenBaseProbability": {
      "get": {
        "tags": ["Stats"],
        "summary": "Get the probability of a hit for the given hit data",
        "operationId": "getStolenBaseProbability",
        "parameters": [
          {
            "name": "gamePk",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/stats/analytics/sprayChart": {
      "get": {
        "tags": ["Stats"],
        "summary": "Get the spray chart info for the current batter",
        "operationId": "getSprayChart",
        "parameters": [
          {
            "name": "gamePk",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/stats/analytics/outsAboveAverage": {
      "get": {
        "tags": ["Stats"],
        "summary": "Get outs above average for the current batter",
        "operationId": "getOutsAboveAverage",
        "parameters": [
          {
            "name": "gamePk",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/statcastPositionTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all statcast position types",
        "operationId": "statcastPositionTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatcastPositionRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all stat types",
        "operationId": "statTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statGroups": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all stat groups",
        "operationId": "statGroups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statFields": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all stat fields",
        "operationId": "statFields",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StatField"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/standingsTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all standings types",
        "operationId": "standingsTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StandingsType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/standings/{standingsType}": {
      "get": {
        "tags": ["Standings"],
        "summary": "View standings for a league",
        "description": "This endpoint allows you to pull standings",
        "operationId": "standings",
        "parameters": [
          {
            "name": "standingsType",
            "in": "path",
            "description": "Type of season. Available types in /api/v1/standingsTypes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standingsTypes",
            "in": "query",
            "description": "Type of season. Available types in /api/v1/standingsTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandingsType"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeMLB",
            "in": "query",
            "description": "Determines whether to include major league teams when using the 'BY_ORGANIZATION' standings type",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandingsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/standings": {
      "get": {
        "tags": ["Standings"],
        "summary": "View standings for a league",
        "description": "This endpoint allows you to pull standings",
        "operationId": "standings_1",
        "parameters": [
          {
            "name": "standingsType",
            "in": "path",
            "description": "Type of season. Available types in /api/v1/standingsTypes",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standingsTypes",
            "in": "query",
            "description": "Type of season. Available types in /api/v1/standingsTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandingsType"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeMLB",
            "in": "query",
            "description": "Determines whether to include major league teams when using the 'BY_ORGANIZATION' standings type",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StandingsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sports/{sportId}/players": {
      "get": {
        "tags": ["Sports"],
        "summary": "Get all players for a sport level",
        "description": "This endpoint allows you to pull all players for a given sport",
        "operationId": "sportPlayers",
        "parameters": [
          {
            "name": "sportId",
            "in": "path",
            "description": "Top level organization of a sport",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "hasStats",
            "in": "query",
            "description": "Returns sports that have individual player stats",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sports/{sportId}/allSportBallot": {
      "get": {
        "tags": ["Sports"],
        "summary": "Get ALL MLB ballot for sport",
        "description": "This endpoint allows you to get all players for MLB ballot",
        "operationId": "allSportBallot",
        "parameters": [
          {
            "name": "sportId",
            "in": "path",
            "description": "Top level organization of a sport",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "season",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sports": {
      "get": {
        "tags": ["Sports"],
        "summary": "Get sports information",
        "description": "This endpoint allows you to pull sports",
        "operationId": "sports",
        "parameters": [
          {
            "name": "sportId",
            "in": "path",
            "description": "Top level organization of a sport",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "hasStats",
            "in": "query",
            "description": "Returns sports that have individual player stats",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Flag for fetching sports that are currently active (Y), inactive (N), pending (P), or all teams (B)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SportActiveStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SportsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sports/{sportId}": {
      "get": {
        "tags": ["Sports"],
        "summary": "Get sports information",
        "description": "This endpoint allows you to pull sports",
        "operationId": "sports_1",
        "parameters": [
          {
            "name": "sportId",
            "in": "path",
            "description": "Top level organization of a sport",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "hasStats",
            "in": "query",
            "description": "Returns sports that have individual player stats",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Flag for fetching sports that are currently active (Y), inactive (N), pending (P), or all teams (B)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SportActiveStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SportsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sortModifiers": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all stat fields",
        "operationId": "aggregateSortEnum",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AggregateSortTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sky": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all sky options",
        "operationId": "sky",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/situationCodes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all situation codes",
        "operationId": "sitCodes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statGroup",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SituationCodeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/seasons/all": {
      "get": {
        "tags": ["Season"],
        "summary": "View all seasons",
        "description": "This endpoint allows you to view all seasons for a given Division, League or Sport",
        "operationId": "allSeasons",
        "parameters": [
          {
            "name": "divisionId",
            "in": "query",
            "description": "Unique Division Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withGameTypeDates",
            "in": "query",
            "description": "Retrieve dates for each game type",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/seasons": {
      "get": {
        "tags": ["Season"],
        "summary": "View season info",
        "description": "This endpoint allows you to pull seasons",
        "operationId": "seasons",
        "parameters": [
          {
            "name": "seasonId",
            "in": "path",
            "description": "Season of play",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withGameTypeDates",
            "in": "query",
            "description": "Retrieve dates for each game type",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/seasons/{seasonId}": {
      "get": {
        "tags": ["Season"],
        "summary": "View season info",
        "description": "This endpoint allows you to pull seasons",
        "operationId": "seasons_1",
        "parameters": [
          {
            "name": "seasonId",
            "in": "path",
            "description": "Season of play",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withGameTypeDates",
            "in": "query",
            "description": "Retrieve dates for each game type",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/scheduleTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all possible schedule types",
        "operationId": "scheduleTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTypeEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/scheduleEventTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all schedule event types",
        "operationId": "scheduleEventTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleEventTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/trackingEvents": {
      "get": {
        "tags": ["Schedule"],
        "summary": "Get tracking event schedules",
        "description": "This endpoint allows you to pull schedules for tracking events",
        "operationId": "trackingEventsSchedule",
        "parameters": [
          {
            "name": "calendarTypes",
            "in": "query",
            "description": "Comma delimited list of type of calendar types",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CalendarTypes"
              }
            }
          },
          {
            "name": "eventTypes",
            "in": "query",
            "description": "Comma delimited list of type of events. <b>Note: Don't Use. This will be deprecated in favor of calendarTypes</b>",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CalendarTypes"
              }
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gamePk",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamePks",
            "in": "query",
            "description": "Comma delimited list of unique primary keys",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "eventIds",
            "in": "query",
            "description": "A unique identifier for non-game event",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "venueIds",
            "in": "query",
            "description": "Unique Venue Identifier",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "performerIds",
            "in": "query",
            "description": "A unique identifier for non-team event performers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useLatestGames",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "opponentId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "publicFacing",
            "in": "query",
            "description": "Return public, non-public or all games. Format: Public Facing = 'Y', Non-Public Facing = 'N', All = 'A'",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PublicFacingEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/schedule/postseason": {
      "get": {
        "tags": ["Schedule"],
        "summary": "Get postseason schedule",
        "description": "This endpoint allows you to pull postseason schedules",
        "operationId": "postseasonSchedule",
        "parameters": [
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "seriesNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useLatestGames",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "useFeaturedGame",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "season",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publicFacing",
            "in": "query",
            "description": "Return public, non-public or all games. Format: Public Facing = 'Y', Non-Public Facing = 'N', All = 'A'",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PublicFacingEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/postseason/tuneIn": {
      "get": {
        "tags": ["Schedule"],
        "summary": "Get postseason TuneIn schedules",
        "description": "This endpoint allows you to pull postseason schedules",
        "operationId": "tuneIn",
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/postseason/series": {
      "get": {
        "tags": ["Schedule"],
        "summary": "Get postseason series schedules",
        "description": "This endpoint allows you to pull postseason schedules",
        "operationId": "postseasonScheduleSeries",
        "parameters": [
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "seriesNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "useLatestGames",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "useFeaturedGame",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "season",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PostseasonScheduleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/games/tied": {
      "get": {
        "tags": ["Schedule"],
        "summary": "Get tied game schedules",
        "description": "This endpoint allows you to pull tie game schedules for the given season",
        "operationId": "tieGames",
        "parameters": [
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule": {
      "get": {
        "tags": ["Schedule"],
        "summary": "View schedule info based on scheduleType.",
        "description": "View schedule info. This endpoint allows you to pull schedules",
        "operationId": "schedule",
        "parameters": [
          {
            "name": "calendarTypes",
            "in": "query",
            "description": "Comma delimited list of type of calendar types",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CalendarTypes"
              }
            }
          },
          {
            "name": "eventTypes",
            "in": "query",
            "description": "Comma delimited list of type of events. <b>Note: Don't Use. This will be deprecated in favor of calendarTypes</b>",
            "required": false,
            "deprecated": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CalendarTypes"
              }
            }
          },
          {
            "name": "scheduleEventTypes",
            "in": "query",
            "description": "Comma delimited list of type of event types",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScheduleEventTypes"
              }
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gamePk",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamePks",
            "in": "query",
            "description": "Comma delimited list of unique primary keys",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "eventIds",
            "in": "query",
            "description": "A unique identifier for non-game event",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "venueIds",
            "in": "query",
            "description": "Unique Venue Identifier",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "performerIds",
            "in": "query",
            "description": "A unique identifier for non-team event performers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useLatestGames",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "opponentId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "publicFacing",
            "in": "query",
            "description": "Return public, non-public or all games. Format: Public Facing = 'Y', Non-Public Facing = 'N', All = 'A'",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PublicFacingEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "usingPrivateEndpoint",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/schedule/{scheduleType}": {
      "get": {
        "tags": ["Schedule"],
        "summary": "View schedule info based on scheduleType.",
        "description": "View schedule info. This endpoint allows you to pull schedules",
        "operationId": "schedule_1",
        "parameters": [
          {
            "name": "calendarTypes",
            "in": "query",
            "description": "Comma delimited list of type of calendar types",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CalendarTypes"
              }
            }
          },
          {
            "name": "eventTypes",
            "in": "query",
            "description": "Comma delimited list of type of events. <b>Note: Don't Use. This will be deprecated in favor of calendarTypes</b>",
            "required": false,
            "deprecated": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CalendarTypes"
              }
            }
          },
          {
            "name": "scheduleEventTypes",
            "in": "query",
            "description": "Comma delimited list of type of event types",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScheduleEventTypes"
              }
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gamePk",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamePks",
            "in": "query",
            "description": "Comma delimited list of unique primary keys",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "eventIds",
            "in": "query",
            "description": "A unique identifier for non-game event",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "venueIds",
            "in": "query",
            "description": "Unique Venue Identifier",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "performerIds",
            "in": "query",
            "description": "A unique identifier for non-team event performers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useLatestGames",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "opponentId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "publicFacing",
            "in": "query",
            "description": "Return public, non-public or all games. Format: Public Facing = 'Y', Non-Public Facing = 'N', All = 'A'",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PublicFacingEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "usingPrivateEndpoint",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runnerDetailTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List runner detail types",
        "operationId": "runnerDetailTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunnerDetailType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ruleSettings": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all ruleSettings",
        "operationId": "ruleSettings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RuleSettingsRestObject"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/rosterTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all possible roster types",
        "operationId": "rosterTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RosterType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roofTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all roof types",
        "operationId": "roofTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoofTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/review": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get review info",
        "operationId": "getReviewInfo",
        "parameters": [
          {
            "name": "sportId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatContainerRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviewReasons": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all replay review reasons",
        "operationId": "reviewReasons",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/props/play/predictions": {
      "get": {
        "tags": ["Predictions"],
        "summary": "Get play-level predictions based on input scenarios",
        "description": "This endpoint allows you to get play-level predictions based on input scenarios",
        "operationId": "getProps",
        "parameters": [
          {
            "name": "batterId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pitcherId",
            "in": "query",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "venueId",
            "in": "query",
            "description": "Unique Venue Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batSide",
            "in": "query",
            "description": "Bat side of hitter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pitchHand",
            "in": "query",
            "description": "Handedness of pitcher",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batterPosition",
            "in": "query",
            "description": "Position abbreviation. Format: SS, P, 1B, etc",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pitcherPosition",
            "in": "query",
            "description": "Position abbreviation. Format: SS, P, 1B, etc",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/props/play/predictions/adjust": {
      "get": {
        "tags": ["Predictions"],
        "summary": "Get play-level predictions based on input scenarios",
        "description": "This endpoint allows you to get play-level predictions based on input scenarios",
        "operationId": "getPropsAdjust",
        "parameters": [
          {
            "name": "gamePk",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/positions": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all possible positions",
        "operationId": "positions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseballPosition"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/playerStatusCodes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all player status codes",
        "operationId": "playerStatusCodes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/platforms": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all possible platforms",
        "operationId": "platforms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Platform"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pitchTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all pitch classification types",
        "operationId": "pitchTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pitchCodes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all pitch codes",
        "operationId": "pitchCodes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PitchCodeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/performerTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all possible performer types",
        "operationId": "performerTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PerformerType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/people/{personId}/stats": {
      "get": {
        "tags": ["Person"],
        "summary": "View a players stats",
        "operationId": "stats_3",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stats",
            "in": "query",
            "description": "Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "opposingPlayerId",
            "in": "query",
            "description": "A unique identifier for the opposing team",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MetricType"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "description": "Situation code for a given stat split.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "combineSits",
            "in": "query",
            "description": "If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "daysBack",
            "in": "query",
            "description": "Returns results from the last 'X' days (Starting from yesterday).",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamesBack",
            "in": "query",
            "description": "Returns results from the last 'X' games played.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Type of event",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventType"
              }
            }
          },
          {
            "name": "pitchType",
            "in": "query",
            "description": "Classification of pitch (fastball, curveball, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "hitTrajectory",
            "in": "query",
            "description": "Trajectory of hit (line drive, fly ball, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HitTrajectory"
              }
            }
          },
          {
            "name": "batSide",
            "in": "query",
            "description": "Bat side of hitter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupByEnum"
              }
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/people/{personId}/stats/metrics": {
      "get": {
        "tags": ["Person"],
        "summary": "View a player's stat metrics",
        "operationId": "statsMetrics",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stats",
            "in": "query",
            "description": "Type of statistics. Format: Individual, Team, Career, etc. Available types in /api/v1/statTypes",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatType"
              }
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "opposingTeamId",
            "in": "query",
            "description": "A unique identifier for the opposing team. Must be used with Team ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "opposingPlayerId",
            "in": "query",
            "description": "A unique identifier for the opposing team",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "Name of metric(s) for metric log stats.  Available metrics in /api/v1/metrics",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MetricType"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "sitCodes",
            "in": "query",
            "description": "Situation code for a given stat split.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "combineSits",
            "in": "query",
            "description": "If true, gathers stats where all of the situational criteria are met. If false, returns stats where any of the situational criteria are met. Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "daysBack",
            "in": "query",
            "description": "Returns results from the last 'X' days (Starting from yesterday).",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamesBack",
            "in": "query",
            "description": "Returns results from the last 'X' games played.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "description": "Type of event",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventType"
              }
            }
          },
          {
            "name": "pitchType",
            "in": "query",
            "description": "Classification of pitch (fastball, curveball, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "hitTrajectory",
            "in": "query",
            "description": "Trajectory of hit (line drive, fly ball, etc...)",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HitTrajectory"
              }
            }
          },
          {
            "name": "batSide",
            "in": "query",
            "description": "Bat side of hitter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "description": "Group stats by PLAYER, TEAM, SEASON, VENUE, SPORT or STAT_GROUP",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupByEnum"
              }
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/people/{personId}/stats/game/{gamePk}": {
      "get": {
        "tags": ["Person"],
        "summary": "View a player's game stats",
        "operationId": "playerGameStats",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/people/{personId}/awards": {
      "get": {
        "tags": ["Person"],
        "summary": "View a player's awards",
        "operationId": "award",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AwardsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/people/{personId}": {
      "get": {
        "tags": ["Person"],
        "summary": "View a player",
        "description": "This endpoint allows you to pull the information of players",
        "operationId": "person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "personIds",
            "in": "query",
            "description": "Comma delimited list of person ID. Format: 1234, 2345",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/people": {
      "get": {
        "tags": ["Person"],
        "summary": "View a player",
        "description": "This endpoint allows you to pull the information of players",
        "operationId": "person_1",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique Player Identifier. Format: 434538, 429665, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "personIds",
            "in": "query",
            "description": "Comma delimited list of person ID. Format: 1234, 2345",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/people/search": {
      "get": {
        "tags": ["Person"],
        "summary": "Search for a player by name",
        "operationId": "search",
        "parameters": [
          {
            "name": "names",
            "in": "query",
            "description": "Name a player uses",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "personIds",
            "in": "query",
            "description": "Comma delimited list of person ID. Format: 1234, 2345",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Comma delimited list of Unique Team identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Whether or not a player is active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "verified",
            "in": "query",
            "description": "Complete and confirmed all biographical data",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "rookie",
            "in": "query",
            "description": "Whether or not a player is a rookie",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/people/freeAgents": {
      "get": {
        "tags": ["Person"],
        "summary": "Get free agents",
        "operationId": "freeAgents",
        "parameters": [
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FreeAgentListRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/people/changes": {
      "get": {
        "tags": ["Person"],
        "summary": "View a player's change log",
        "operationId": "currentGameStats",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PeopleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moundVisitTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all mound visit types",
        "operationId": "moundVisitTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/milestones": {
      "get": {
        "tags": ["Milestones"],
        "summary": "View pending and achieved milestones.",
        "operationId": "milestones",
        "parameters": [
          {
            "name": "orgType",
            "in": "query",
            "description": "Organization level. Format: T(Team), L(League), S(Sport)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrganizationType"
            }
          },
          {
            "name": "achievementStatuses",
            "in": "query",
            "description": "Comma delimited list of milestone achievement types",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MilestoneAchievementType"
              }
            }
          },
          {
            "name": "milestoneTypes",
            "in": "query",
            "description": "Comma delimited list of milestone types",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MilestoneType"
              }
            }
          },
          {
            "name": "isLastAchievement",
            "in": "query",
            "description": "Filters out milestones that have already been surpassed.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "milestoneStatistics",
            "in": "query",
            "description": "Comma delimited list of milestone statistics",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Statistic"
              }
            }
          },
          {
            "name": "milestoneValues",
            "in": "query",
            "description": "Comma delimited list of milestone values",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "playerIds",
            "in": "query",
            "description": "A unique identifier for players",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Comma delimited list of Unique Team identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "statGroup",
            "in": "query",
            "description": "Category of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatGroup"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "venueIds",
            "in": "query",
            "description": "Comma delimited list of Unique venue identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gamePks",
            "in": "query",
            "description": "Comma delimited list of unique primary keys",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "showFirsts",
            "in": "query",
            "description": "True to show play first milestones, like first HR, first Save, etc",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MilestoneContainerRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/milestoneTypes": {
      "get": {
        "tags": ["Milestones"],
        "summary": "View available milestoneType options",
        "operationId": "milestoneTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MilestoneType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/milestoneStatistics": {
      "get": {
        "tags": ["Milestones"],
        "summary": "View available milestone statistics options",
        "operationId": "milestoneStatistics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MilestoneStatisticRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/milestoneLookups": {
      "get": {
        "tags": ["Milestones"],
        "summary": "View available milestoneLookup options",
        "operationId": "milestoneLookups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/milestoneDurations": {
      "get": {
        "tags": ["Milestones"],
        "summary": "View available milestoneDurations options",
        "operationId": "milestoneDurations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MilestoneDuration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/metrics": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all possible metrics",
        "operationId": "metrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mediaState": {
      "get": {
        "tags": ["Misc"],
        "summary": "View media state options",
        "operationId": "mediaStateTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaStateRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lookup/values/all": {
      "get": {
        "tags": ["Misc"],
        "summary": "View all lookup values",
        "operationId": "getLookupValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/logicalEvents": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all logical event types",
        "operationId": "logicalEvents",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leagueLeaderTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all possible player league leader types",
        "operationId": "leagueLeaderTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeagueLeaderTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/league/{leagueId}/allStarWriteIns": {
      "get": {
        "tags": ["League"],
        "summary": "View all star write ins info",
        "operationId": "allStarWriteIns",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leagues/{leagueId}/allStarWriteIns": {
      "get": {
        "tags": ["League"],
        "summary": "View all star write ins info",
        "operationId": "allStarWriteIns_1",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/league/{leagueId}/allStarFinalVote": {
      "get": {
        "tags": ["League"],
        "summary": "View all star final vote info",
        "operationId": "allStarFinalVote",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leagues/{leagueId}/allStarFinalVote": {
      "get": {
        "tags": ["League"],
        "summary": "View all star final vote info",
        "operationId": "allStarFinalVote_1",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/league/allStarBallot": {
      "get": {
        "tags": ["League"],
        "summary": "View al star ballot info",
        "operationId": "allStarBallot",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/league/{leagueId}/allStarBallot": {
      "get": {
        "tags": ["League"],
        "summary": "View al star ballot info",
        "operationId": "allStarBallot_1",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leagues/allStarBallot": {
      "get": {
        "tags": ["League"],
        "summary": "View al star ballot info",
        "operationId": "allStarBallot_2",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leagues/{leagueId}/allStarBallot": {
      "get": {
        "tags": ["League"],
        "summary": "View al star ballot info",
        "operationId": "allStarBallot_3",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/league": {
      "get": {
        "tags": ["League"],
        "summary": "View league info",
        "operationId": "league",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Flag for fetching leagues that are currently active (Y), inactive (N), pending (P), or all teams (B)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueActiveStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/league/{leagueId}": {
      "get": {
        "tags": ["League"],
        "summary": "View league info",
        "operationId": "league_1",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Flag for fetching leagues that are currently active (Y), inactive (N), pending (P), or all teams (B)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueActiveStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leagues": {
      "get": {
        "tags": ["League"],
        "summary": "View league info",
        "operationId": "league_2",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Flag for fetching leagues that are currently active (Y), inactive (N), pending (P), or all teams (B)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueActiveStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leagues/{leagueId}": {
      "get": {
        "tags": ["League"],
        "summary": "View league info",
        "operationId": "league_3",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "description": "Unique League Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seasons",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Flag for fetching leagues that are currently active (Y), inactive (N), pending (P), or all teams (B)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueActiveStatusEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/languages": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all support languages",
        "operationId": "languages",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs": {
      "get": {
        "tags": ["Job"],
        "summary": "Get jobs by type",
        "description": "This endpoint allows you to pull teams",
        "operationId": "getJobsByType",
        "parameters": [
          {
            "name": "jobType",
            "in": "query",
            "description": "Job Type Identifier (ie. UMPR, etc..)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RosterRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/umpires": {
      "get": {
        "tags": ["Job"],
        "summary": "Get umpires",
        "description": "This endpoint allows you to pull teams",
        "operationId": "umpires",
        "parameters": [
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RosterRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/umpires/games/{umpireId}": {
      "get": {
        "tags": ["Job"],
        "summary": "Get umpires and associated game for umpireId",
        "description": "This endpoint allows you to pull teams",
        "operationId": "umpireSchedule",
        "parameters": [
          {
            "name": "umpireId",
            "in": "path",
            "description": "A unique identifier for an umpire",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/jobs/officialScorers": {
      "get": {
        "tags": ["Job"],
        "summary": "Get official scorers",
        "description": "This endpoint allows you to pull teams",
        "operationId": "officialScorers",
        "parameters": [
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RosterRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/datacasters": {
      "get": {
        "tags": ["Job"],
        "summary": "Get datacaster jobs",
        "description": "Get datacaster jobs",
        "operationId": "datacasters",
        "parameters": [
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RosterRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/homeRunDerby/{gamePk}/pool": {
      "get": {
        "tags": ["Homerun Derby"],
        "summary": "View home run derby pool",
        "description": "This endpoint allows you to pull home run derby information",
        "operationId": "homeRunDerbyPool",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeRunDerbyRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/homeRunDerby/pool": {
      "get": {
        "tags": ["Homerun Derby"],
        "summary": "View home run derby pool",
        "description": "This endpoint allows you to pull home run derby information",
        "operationId": "homeRunDerbyPool_1",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeRunDerbyRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/homeRunDerby/{gamePk}/mixed": {
      "get": {
        "tags": ["Homerun Derby"],
        "summary": "View home run derby mixed mode (Bracket/Pool combo)",
        "description": "This endpoint allows you to pull home run derby information",
        "operationId": "homeRunDerbyMixedMode",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeRunDerbyRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/homeRunDerby/mixed": {
      "get": {
        "tags": ["Homerun Derby"],
        "summary": "View home run derby mixed mode (Bracket/Pool combo)",
        "description": "This endpoint allows you to pull home run derby information",
        "operationId": "homeRunDerbyMixedMode_1",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeRunDerbyRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/homeRunDerby/{gamePk}": {
      "get": {
        "tags": ["Homerun Derby"],
        "summary": "View a home run derby object",
        "description": "This endpoint allows you to pull home run derby information",
        "operationId": "homeRunDerbyBracket",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeRunDerbyRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/homeRunDerby": {
      "get": {
        "tags": ["Homerun Derby"],
        "summary": "View a home run derby object",
        "description": "This endpoint allows you to pull home run derby information",
        "operationId": "homeRunDerbyBracket_1",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeRunDerbyRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/homeRunDerby/{gamePk}/bracket": {
      "get": {
        "tags": ["Homerun Derby"],
        "summary": "View a home run derby object",
        "description": "This endpoint allows you to pull home run derby information",
        "operationId": "homeRunDerbyBracket_2",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeRunDerbyRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/homeRunDerby/bracket": {
      "get": {
        "tags": ["Homerun Derby"],
        "summary": "View a home run derby object",
        "description": "This endpoint allows you to pull home run derby information",
        "operationId": "homeRunDerbyBracket_3",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeRunDerbyRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/hitTrajectories": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all hit trajectories",
        "operationId": "hitTrajectories",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/highLow/{highLowType}": {
      "get": {
        "tags": ["High/Low"],
        "summary": "View high/low stats by player or team",
        "operationId": "highLow",
        "parameters": [
          {
            "name": "highLowType",
            "in": "path",
            "description": "Type of high/low stats ('player', 'team', 'game')",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HighLowTypeEnum"
            }
          },
          {
            "name": "statGroup",
            "in": "query",
            "description": "Comma delimited list of  categories of statistic to return. Available types in /api/v1/statGroups",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StatGroup"
              }
            }
          },
          {
            "name": "sortStat",
            "in": "query",
            "description": "Comma delimited list of baseball stats to sort splits by.",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HighLowStatEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HighLowWrapperRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/highLow/types": {
      "get": {
        "tags": ["High/Low"],
        "summary": "View high/low stat types",
        "operationId": "highLowStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseballStatsTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/groupByTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List groupBy types",
        "operationId": "groupByTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupByEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gamedayTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all gameday types",
        "operationId": "gamedayTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GeneralLookupRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gameTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all game types",
        "operationId": "gameTypes",
        "parameters": [
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GameTypeEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gamePace": {
      "get": {
        "tags": ["Game Pace"],
        "summary": "View time of game info",
        "operationId": "gamePace",
        "parameters": [
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "teamIds",
            "in": "query",
            "description": "Comma delimited list of Unique Team identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueIds",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "venueIds",
            "in": "query",
            "description": "Comma delimited list of Unique venue identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "excludeVenueIds",
            "in": "query",
            "description": "Comma delimited list of Unique venue identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "excludeGamePks",
            "in": "query",
            "description": "Comma delimited list of unique primary keys",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "orgType",
            "in": "query",
            "description": "Organization level. Format: T(Team), L(League), S(Sport)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/OrganizationType"
            }
          },
          {
            "name": "includeChildren",
            "in": "query",
            "description": "Determines weather to include results from an organization's children (ex. a sport would also include results for the teams and leagues)",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GamePaceWrapperRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{game_pk}/playByPlay": {
      "get": {
        "tags": ["Game"],
        "summary": "Get game play By Play",
        "description": "This endpoint allows you to pull the play by play of a game",
        "operationId": "playByPlay",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inclusiveTimecode",
            "in": "query",
            "description": "True to include plays that happen before or at the specified timecode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballPlayByPlayRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{game_pk}/linescore": {
      "get": {
        "tags": ["Game"],
        "summary": "Get game linescore",
        "description": "This endpoint allows you to pull the linescore for a game",
        "operationId": "linescore",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inclusiveTimecode",
            "in": "query",
            "description": "True to include plays that happen before or at the specified timecode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballLinescoreRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{game_pk}/feed/color": {
      "get": {
        "tags": ["Game"],
        "summary": "Get game color feed.",
        "description": "This API can return very large payloads.  It is STRONGLY recommended that clients ask for diffs and use \"Accept-Encoding: gzip\" header.",
        "operationId": "colorFeed",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{game_pk}/feed/color/timestamps": {
      "get": {
        "tags": ["Game"],
        "summary": "Retrieve all of the color timestamps for a game.",
        "description": "This can be used for replaying games.  Endpoint returns all of the timecodes that can be used with diffs for /v1/game/{game_pk}/feed/color",
        "operationId": "colorTimestamps",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{game_pk}/content": {
      "get": {
        "tags": ["Game"],
        "summary": "Retrieve all content for a game.",
        "operationId": "content",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "highlightLimit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/GameContentRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{game_pk}/boxscore": {
      "get": {
        "tags": ["Game"],
        "summary": "Get game boxscore.",
        "description": "This endpoint allows you to pull a boxscore",
        "operationId": "boxscore",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inclusiveTimecode",
            "in": "query",
            "description": "True to include plays that happen before or at the specified timecode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "numPlayers",
            "in": "query",
            "description": "Number of top player game scores to show. Default is 3.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            }
          },
          {
            "name": "noTies",
            "in": "query",
            "description": "If set to false, will show all players tied for the last spot in the game scores list.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballBoxscoreRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{gamePk}/{playId}/analytics/skeletalData/files": {
      "get": {
        "tags": ["Skeletal"],
        "summary": "View Skeletal Data by playId and gameId files",
        "description": "This endpoint allows you to pull chunked skeletal tracking data by gameId and playId",
        "operationId": "skeletalDataFileNames",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playId",
            "in": "path",
            "description": "Unique play identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkeletalFileData"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/game/{gamePk}/{playId}/analytics/skeletalData/chunked": {
      "get": {
        "tags": ["Skeletal"],
        "summary": "View Skeletal Data by playId and gameId chunked",
        "description": "This endpoint allows you to pull chunked skeletal tracking data by gameId and playId",
        "operationId": "skeletalChunked",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playId",
            "in": "path",
            "description": "Unique play identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Skeletal chunked file name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/game/{gamePk}/{playId}/analytics/biomechanics/{positionId}": {
      "get": {
        "tags": ["Biomechanics"],
        "summary": "View Biomechanical data by playId and gameId filtered by player positionId",
        "description": "This endpoint allows you to pull biomechanical tracking data by gameId and playId filtered by player positionId",
        "operationId": "biomechanical",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playId",
            "in": "path",
            "description": "Unique play identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionId",
            "in": "path",
            "description": "Position number. Format: 1, 2, 3, etc",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkeletalDataWrapperRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/game/{gamePk}/{guid}/homeRunBallparks": {
      "get": {
        "tags": ["analytics"],
        "summary": "Get if the play is a home run is each park for a specific play.",
        "description": "Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass \"Accept-Encoding: gzip\" as a header to have the responses compressed.",
        "operationId": "homeRunBallparks",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "description": "Unique identifier for a play within a game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isHomeRunParks",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/VenuesRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{gamePk}/{guid}/contextMetrics": {
      "get": {
        "tags": ["analytics"],
        "summary": "Get context metrics for a specific gamePk.",
        "description": "Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass \"Accept-Encoding: gzip\" as a header to have the responses compressed.",
        "operationId": "contextMetrics",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "description": "Unique identifier for a play within a game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalculatedMetricRestObject"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/game/{gamePk}/{guid}/analytics": {
      "get": {
        "tags": ["analytics"],
        "summary": "Get Statcast data for a specific play.",
        "description": "Returns a json file containing raw coordinate data and refined calculated metrics.<br/><br/>This responses can be very large, so it is strongly recommended that you pass \"Accept-Encoding: gzip\" as a header to have the responses compressed.",
        "operationId": "parsedJsonFormattedAnalytics",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "guid",
            "in": "path",
            "description": "Unique identifier for a play within a game",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/game/{gamePk}/withMetrics": {
      "get": {
        "tags": ["Game"],
        "summary": "Get game info with metrics",
        "operationId": "getGameWithMetrics",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inclusiveTimecode",
            "in": "query",
            "description": "True to include plays that happen before or at the specified timecode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballGameRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{gamePk}/winProbability": {
      "get": {
        "tags": ["Game"],
        "summary": "Get the win probability for this game",
        "operationId": "getWinProbability",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inclusiveTimecode",
            "in": "query",
            "description": "True to include plays that happen before or at the specified timecode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseballPlayRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/{gamePk}/guids": {
      "get": {
        "tags": ["analytics"],
        "summary": "Get the GUIDs (plays) for a specific game. ",
        "operationId": "gameGuids",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "gameModeId",
            "in": "query",
            "description": "Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isPitch",
            "in": "query",
            "description": "If there was a pitch",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isHit",
            "in": "query",
            "description": "If there was a hit ball tracked",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isPickoff",
            "in": "query",
            "description": "If there was a pickoff",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "hasUpdates",
            "in": "query",
            "description": "True if updated by an auditor",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastPlayTime",
            "in": "query",
            "description": "Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastMetricsUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastAuditUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastVideoUpdatedTime",
            "in": "query",
            "description": "The last time SportyBot video was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnalyticsPlayMetadataRestObject"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/game/{gamePk}/contextMetrics": {
      "get": {
        "tags": ["Game"],
        "summary": "Get the context metrics for this game based on its current state",
        "operationId": "getGameContextMetrics",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballGameContextRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/game/lastPitch": {
      "get": {
        "tags": ["analytics"],
        "summary": "Get the last pitch for a list of games",
        "operationId": "gameLastPitch",
        "parameters": [
          {
            "name": "gamePks",
            "in": "query",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnalyticsPlayMetadataRestObject"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/game/changes": {
      "get": {
        "tags": ["Game"],
        "summary": "View a game change log",
        "operationId": "currentGameStats_1",
        "parameters": [
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportIds",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "gameTypes",
            "in": "query",
            "description": "Comma delimited list of type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gamePks",
            "in": "query",
            "description": "Comma delimited list of unique primary keys",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/freeGameTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "View free game types",
        "operationId": "freeGameTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FreeGameTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fielderDetailTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List fielder detail types",
        "operationId": "fielderDetailTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FielderDetailType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eventTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all event types",
        "operationId": "eventTypes",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eventStatus": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all possible event status types",
        "operationId": "eventStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IGameStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/draft/{year}/latest": {
      "get": {
        "tags": ["Draft"],
        "summary": "Get the last drafted player and the next 5 teams up to pick",
        "operationId": "latestDraftPicks",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Year the player was drafted. Format: 2000",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballDraftLatestRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/draft/prospects": {
      "get": {
        "tags": ["Draft"],
        "summary": "View MLB Draft Prospects",
        "operationId": "draftProspects",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Year the player was drafted. Format: 2000",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the set of data by the specified field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drafted",
            "in": "query",
            "description": "Whether or not the players been drafted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "round",
            "in": "query",
            "description": "Round in which a player was drafted",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter players by the first letter of their name using using the specific character",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "school",
            "in": "query",
            "description": "Filter players by the first letter of their school using using the specific character",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Position number. Format: 1, 2, 3, etc",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballPosition"
            }
          },
          {
            "name": "team",
            "in": "query",
            "description": "Unique Team Code. Format: tor, nya, etc",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State where the venue is located. Format: Ohio",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter players by their home country",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bisPlayerId",
            "in": "query",
            "description": "A unique identifier for a player in the EBIS system",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectListRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/draft/prospects/{year}": {
      "get": {
        "tags": ["Draft"],
        "summary": "View MLB Draft Prospects",
        "operationId": "draftProspects_1",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Year the player was drafted. Format: 2000",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the set of data by the specified field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drafted",
            "in": "query",
            "description": "Whether or not the players been drafted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "round",
            "in": "query",
            "description": "Round in which a player was drafted",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter players by the first letter of their name using using the specific character",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "school",
            "in": "query",
            "description": "Filter players by the first letter of their school using using the specific character",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Position number. Format: 1, 2, 3, etc",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballPosition"
            }
          },
          {
            "name": "team",
            "in": "query",
            "description": "Unique Team Code. Format: tor, nya, etc",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State where the venue is located. Format: Ohio",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter players by their home country",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bisPlayerId",
            "in": "query",
            "description": "A unique identifier for a player in the EBIS system",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectListRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/draft": {
      "get": {
        "tags": ["Draft"],
        "summary": "View MLB Drafted Players",
        "operationId": "draftPicks",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Year the player was drafted. Format: 2000",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the set of data by the specified field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drafted",
            "in": "query",
            "description": "Whether or not the players been drafted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "round",
            "in": "query",
            "description": "Round in which a player was drafted",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter players by the first letter of their name using using the specific character",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "school",
            "in": "query",
            "description": "Filter players by the first letter of their school using using the specific character",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Position number. Format: 1, 2, 3, etc",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballPosition"
            }
          },
          {
            "name": "team",
            "in": "query",
            "description": "Unique Team Code. Format: tor, nya, etc",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State where the venue is located. Format: Ohio",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter players by their home country",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bisPlayerId",
            "in": "query",
            "description": "A unique identifier for a player in the EBIS system",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballDraftListRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/draft/{year}": {
      "get": {
        "tags": ["Draft"],
        "summary": "View MLB Drafted Players",
        "operationId": "draftPicks_1",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Year the player was drafted. Format: 2000",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of sorting, ascending or descending",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SortOrderEnum"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the set of data by the specified field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drafted",
            "in": "query",
            "description": "Whether or not the players been drafted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "round",
            "in": "query",
            "description": "Round in which a player was drafted",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter players by the first letter of their name using using the specific character",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "school",
            "in": "query",
            "description": "Filter players by the first letter of their school using using the specific character",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "position",
            "in": "query",
            "description": "Position number. Format: 1, 2, 3, etc",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BaseballPosition"
            }
          },
          {
            "name": "team",
            "in": "query",
            "description": "Unique Team Code. Format: tor, nya, etc",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State where the venue is located. Format: Ohio",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter players by their home country",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "A unique identifier for a player",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bisPlayerId",
            "in": "query",
            "description": "A unique identifier for a player in the EBIS system",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballDraftListRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/divisions": {
      "get": {
        "tags": ["Division"],
        "summary": "Get division information",
        "description": "This endpoint allows you to pull divisions",
        "operationId": "divisions",
        "parameters": [
          {
            "name": "divisionId",
            "in": "path",
            "description": "Unique Division Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "Whether or not to include inactive",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DivisionsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/divisions/{divisionId}": {
      "get": {
        "tags": ["Division"],
        "summary": "Get division information",
        "description": "This endpoint allows you to pull divisions",
        "operationId": "divisions_1",
        "parameters": [
          {
            "name": "divisionId",
            "in": "path",
            "description": "Unique Division Identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "Whether or not to include inactive",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Unique League Identifier",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DivisionsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conferences": {
      "get": {
        "tags": ["Conference"],
        "summary": "View conference info",
        "operationId": "conferences",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ConferencesRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/conferences/{conferenceId}": {
      "get": {
        "tags": ["Conference"],
        "summary": "View conference info",
        "operationId": "conferences_1",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ConferencesRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/coachingVideoTypes": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all coaching video types",
        "operationId": "coachingVideoTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/broadcasters": {
      "get": {
        "tags": ["Broadcast"],
        "summary": "Get All Active Broadcasters",
        "operationId": "getAllBroadcasters",
        "parameters": [
          {
            "name": "activeStatus",
            "in": "query",
            "description": "Current status of the broadcaster. Format: Active = y, inactive = n, both = b",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BroadcasterActiveStatusEnum"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcasterRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/broadcast": {
      "get": {
        "tags": ["Broadcast"],
        "summary": "Get Broadcasters",
        "operationId": "getBroadcasts",
        "parameters": [
          {
            "name": "broadcasterIds",
            "in": "query",
            "description": "All of the broadcast details",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcasterRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/broadcastAvailability": {
      "get": {
        "tags": ["Misc"],
        "summary": "View broadcast availability options",
        "operationId": "broadcastAvailabilityTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BroadcastAvailabilityRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/batTracking/game/{gamePk}/{playId}": {
      "get": {
        "tags": ["Bat Tracking"],
        "summary": "View Bat Tracking Data by playId and gameId",
        "description": "This endpoint allows you to pull bat tracking data by gameId and playId",
        "operationId": "batTracking",
        "parameters": [
          {
            "name": "gamePk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playId",
            "in": "path",
            "description": "Unique play identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatTrackingRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/baseballStats": {
      "get": {
        "tags": ["Misc"],
        "summary": "List all baseball stats",
        "operationId": "baseballStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseballStatsTypeRestObject"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/awards/{awardId}/recipients": {
      "get": {
        "tags": ["Awards"],
        "summary": "View recipients of an award",
        "operationId": "awardRecipients",
        "parameters": [
          {
            "name": "awardId",
            "in": "path",
            "description": "Unique Award Identifier. Available awards in /api/v1/awards",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AwardsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/awards": {
      "get": {
        "tags": ["Awards"],
        "summary": "View awards info",
        "operationId": "awards",
        "parameters": [
          {
            "name": "awardId",
            "in": "path",
            "description": "Unique Award Identifier. Available awards in /api/v1/awards",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AwardsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/awards/{awardId}": {
      "get": {
        "tags": ["Awards"],
        "summary": "View awards info",
        "operationId": "awards_1",
        "parameters": [
          {
            "name": "awardId",
            "in": "path",
            "description": "Unique Award Identifier. Available awards in /api/v1/awards",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgId",
            "in": "query",
            "description": "Comma delimited list of top level organizations of a sport",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AwardsRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/attendance": {
      "get": {
        "tags": ["Attendance"],
        "summary": "Get team attendance",
        "operationId": "getTeamAttendance",
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique Team Identifier. Format: 141, 147, etc",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "leagueId",
            "in": "query",
            "description": "Comma delimited list of Unique league identifiers",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Comma delimited list of Seasons of play",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "leagueListId",
            "in": "query",
            "description": "Unique League List Identifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LeagueListsEnum"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GameTypeEnum"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for range of data (must be used with end date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for range of data (must be used with start date). Format: MM/DD/YYYY",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/guids": {
      "get": {
        "tags": ["analytics"],
        "summary": "Get the GUIDs (plays) for a specific game. ",
        "operationId": "gameGuidsFromPostgresRange",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "gameModeId",
            "in": "query",
            "description": "Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isPitch",
            "in": "query",
            "description": "If there was a pitch",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isHit",
            "in": "query",
            "description": "If there was a hit ball tracked",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isPickoff",
            "in": "query",
            "description": "If there was a pickoff",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isNonStatcast",
            "in": "query",
            "description": "If non statcast games need to be included",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "gamedayType",
            "in": "query",
            "description": "Indicates the level of Gameday (tracking, play-by-play, linescore, etc...)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasUpdates",
            "in": "query",
            "description": "True if updated by an auditor",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "lastPlayTime",
            "in": "query",
            "description": "Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastMetricsUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastAuditUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastVideoUpdatedTime",
            "in": "query",
            "description": "The last time SportyBot video was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gameDate",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "trackingSystemOwner",
            "in": "query",
            "description": "Owner of the tracking system",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TrackingSystemOwner"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the set of data by the specified field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsPlayMetadataWrapperRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/analytics/game": {
      "get": {
        "tags": ["analytics"],
        "summary": "Get all games by updated date.",
        "operationId": "gameGuidsFromPostgresRangeByGame",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "gameModeId",
            "in": "query",
            "description": "Statcast game mode. Format: 0 = Batting Practive, 1 = Warmup 2 = Live",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isPitch",
            "in": "query",
            "description": "If there was a pitch",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isHit",
            "in": "query",
            "description": "If there was a hit ball tracked",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isPickoff",
            "in": "query",
            "description": "If there was a pickoff",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isNonStatcast",
            "in": "query",
            "description": "If non statcast games need to be included",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "gamedayType",
            "in": "query",
            "description": "Indicates the level of Gameday (tracking, play-by-play, linescore, etc...)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hasUpdates",
            "in": "query",
            "description": "True if updated by an auditor",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "lastPlayTime",
            "in": "query",
            "description": "Returns all data that was created after the specified timestamp. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastVideoUpdatedTime",
            "in": "query",
            "description": "The last time SportyBot video was updated",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastMetricsUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastAuditUpdatedTime",
            "in": "query",
            "description": "Return data updated since a specified date. Format: YYYY-MM-DDTHH:MM:SSZ",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "gameDate",
            "in": "query",
            "description": "Date of Game. Format: YYYY-MM-DD",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sportId",
            "in": "query",
            "description": "Top level organization of a sport",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "gameType",
            "in": "query",
            "description": "Type of Game. Available types in /api/v1/gameTypes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          {
            "name": "season",
            "in": "query",
            "description": "Season of play",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trackingSystemOwner",
            "in": "query",
            "description": "Owner of the tracking system",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TrackingSystemOwner"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the set of data by the specified field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The pointer to start for a return set; used for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "scheduleEventTypes",
            "in": "query",
            "description": "Comma delimited list of type of event types",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScheduleEventTypes"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyticsGameMetadataWrapperRestObject"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/achievementStatuses": {
      "get": {
        "tags": ["Milestones"],
        "summary": "View available achievementStatus options",
        "operationId": "achievementStatuses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MilestoneAchievementType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.1/game/{game_pk}/feed/live": {
      "get": {
        "tags": ["Game"],
        "summary": "Get live game status.",
        "description": "This API can return very large payloads.  It is STRONGLY recommended that clients ask for diffs and use \"Accept-Encoding: gzip\" header.",
        "operationId": "liveGameV1",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timecode",
            "in": "query",
            "description": "Use this parameter to return a snapshot of the data at the specified time. Format: YYYYMMDD_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma delimited list of specific fields to be returned. Format: topLevelNode, childNode, attribute",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inclusiveTimecode",
            "in": "query",
            "description": "True to include plays that happen before or at the specified timecode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/BaseballGameRestObject"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.1/game/{game_pk}/feed/live/timestamps": {
      "get": {
        "tags": ["Game"],
        "summary": "Retrieve all of the play timestamps for a game.",
        "description": "This can be used for replaying games.  Endpoint returns all of the timecodes that can be used with diffs for /v1/game/{game_pk}/feed/live",
        "operationId": "liveTimestampv11",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1.1/game/{game_pk}/feed/live/diffPatch": {
      "get": {
        "tags": ["Game"],
        "summary": "Get live game status diffPatch.",
        "description": "This endpoint allows comparison of game files and shows any differences/discrepancies between the two<br/><br/><b>Diff/Patch System:</b> startTimecode and endTimecode can be used for getting diffs.<br/>Expected usage:  <br/> 1) Request full payload by not passing startTimecode or endTimecode.  This will return the most recent game state.<br/> 2) Find the latest timecode in this response.  <br/> 3) Wait X seconds<br/> 4) Use the timecode from 2 as the startTimecode.  This will give you a diff of everything that has happened since startTimecode.  <br/> 5) If no data is returned, wait X seconds and do the same request.  <br/> 6) If data is returned, get a new timeStamp from the response, and use that for the next call as startTimecode.",
        "operationId": "liveGameDiffPatchV1",
        "parameters": [
          {
            "name": "game_pk",
            "in": "path",
            "description": "Unique Primary Key Representing a Game",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startTimecode",
            "in": "query",
            "description": "Start time code will give you everything since that time. Format: MMDDYYYY_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTimecode",
            "in": "query",
            "description": "End time code will give you a snapshot at that specific time. Format: MMDDYYYY_HHMMSS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Boolean value to specify wanting a person's name with accents or without",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContactPointPositionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "description": "Location in the horizontal dimension, negative toward third base, positive toward first base.",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Location in the depth dimension, negative toward the backstop, positive toward pitcher’s mound.",
            "format": "double"
          },
          "z": {
            "type": "number",
            "description": "Location in the vertical dimension, from the ground upward.",
            "format": "double"
          },
          "timeStamp": {
            "type": "string"
          }
        },
        "description": "Location of impact point."
      },
      "HandlePositionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "description": "Location in the horizontal dimension, negative toward third base, positive toward first base.",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Location in the depth dimension, negative toward the backstop, positive toward pitcher’s mound.",
            "format": "double"
          },
          "z": {
            "type": "number",
            "description": "Location in the vertical dimension, from the ground upward.",
            "format": "double"
          },
          "timeStamp": {
            "type": "string"
          }
        },
        "description": "Location of the handle of the bat during impact. The distance from head to handle is currently fixed at 32.677 inches."
      },
      "HeadPositionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "description": "Location in the horizontal dimension, negative toward third base, positive toward first base.",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Location in the depth dimension, negative toward the backstop, positive toward pitcher’s mound.",
            "format": "double"
          },
          "z": {
            "type": "number",
            "description": "Location in the vertical dimension, from the ground upward.",
            "format": "double"
          },
          "timeStamp": {
            "type": "string"
          }
        },
        "description": "Location of the head of the bat during impact."
      },
      "BatImpactVelocityRestObjectBefore": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "description": "Represents the horizontal dimension, negative toward third base, positive toward first base.",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Represents the depth dimension, negative toward the backstop, positive toward pitcher’s mound.",
            "format": "double"
          },
          "z": {
            "type": "number",
            "description": "Represents the vertical dimension, from the ground upward.",
            "format": "double"
          }
        },
        "description": "Velocity of the given point, right before impact."
      },
      "BatImpactVelocityRestObjectAfter": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "description": "Represents the horizontal dimension, negative toward third base, positive toward first base.",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Represents the depth dimension, negative toward the backstop, positive toward pitcher’s mound.",
            "format": "double"
          },
          "z": {
            "type": "number",
            "description": "Represents the vertical dimension, from the ground upward.",
            "format": "double"
          }
        },
        "description": "Velocity of the given point, right after impact."
      },
      "BatTrackingSystemRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "configuration": {
            "type": "string"
          }
        }
      },
      "WeatherPitchSegmentActual": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/WeatherPitchTrajectoryDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/LandingDataRestObject"
          },
          "conditions": {
            "$ref": "#/components/schemas/WeatherMetricRestObject"
          },
          "deviations": {
            "$ref": "#/components/schemas/WeatherDeviationRestObject"
          }
        },
        "description": "Pitch segment data for the actual pitched ball."
      },
      "WeatherPitchSegmentCalm": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/WeatherPitchTrajectoryDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/LandingDataRestObject"
          },
          "conditions": {
            "$ref": "#/components/schemas/WeatherMetricRestObject"
          },
          "deviations": {
            "$ref": "#/components/schemas/WeatherDeviationRestObject"
          }
        },
        "description": "Pitch segment data for the calm scenario. Wind speed is fixed at 0."
      },
      "WeatherHitSegmentActual": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/WeatherHitTrajectoryDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/LandingDataRestObject"
          },
          "conditions": {
            "$ref": "#/components/schemas/WeatherMetricRestObject"
          },
          "flags": {
            "$ref": "#/components/schemas/WeatherConditionFlagRestObject"
          },
          "deviations": {
            "$ref": "#/components/schemas/WeatherDeviationRestObject"
          }
        },
        "description": "Hit segment data for the actual batted ball."
      },
      "WeatherHitSegmentCalm": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/WeatherHitTrajectoryDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/LandingDataRestObject"
          },
          "conditions": {
            "$ref": "#/components/schemas/WeatherMetricRestObject"
          },
          "flags": {
            "$ref": "#/components/schemas/WeatherConditionFlagRestObject"
          },
          "deviations": {
            "$ref": "#/components/schemas/WeatherDeviationRestObject"
          }
        },
        "description": "Hit segment data for the calm scenario. Wind speed is fixed at 0."
      },
      "IndoorDeviation": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "horizontal": {
            "type": "number",
            "format": "double"
          },
          "time": {
            "type": "number",
            "format": "double"
          },
          "apex": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Weather deviation data in indoor conditions. `distance`: Calculated deviation in distance of the standard 80-ft-apex flyball hit in indoor conditions. `horizontal`: Calculated deviation in horizontal distance of the standard 80-ft-apex flyball hit in indoor conditions. A negative deviation means the ball ended up more towards left field."
      },
      "CalmDeviation": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "horizontal": {
            "type": "number",
            "format": "double"
          },
          "time": {
            "type": "number",
            "format": "double"
          },
          "apex": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Weather deviation data in calm conditions. `distance`: Calculated deviation in distance of the standard 80-ft-apex flyball hit in calm conditions. `horizontal`: Calculated deviation in horizontal distance of the standard 80-ft-apex flyball hit in calm conditions. A negative deviation means the ball ended up more towards left field."
      },
      "LandingPositionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "description": "Location in the horizontal dimension, negative toward third base, positive toward first base.",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Location in the depth dimension, negative toward the backstop, positive toward pitcher’s mound.",
            "format": "double"
          },
          "z": {
            "type": "number",
            "description": "Location in the vertical dimension, from the ground upward.",
            "format": "double"
          },
          "timeStamp": {
            "type": "string"
          }
        },
        "description": "The x-coordinate of the landing position for the ball's trajectory. This is defined using the x,y position at z=0. The y-coordinate of the landing position for the ball's trajectory. This is defined using the x,y position at z=0. The z-coordinate of the landing position for the ball's trajectory. This will always be z=0 by definition."
      },
      "StatGroup": {
        "type": "string",
        "enum": ["HITTING", "PITCHING", "FIELDING", "CATCHING", "RUNNING", "GAME", "TEAM", "STREAK"]
      },
      "CalculatedMetricRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "estimated": {
            "type": "boolean"
          },
          "group": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "valueUnrounded": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "averageValue": {
            "type": "number",
            "format": "double"
          },
          "minValue": {
            "type": "number",
            "format": "double"
          },
          "maxValue": {
            "type": "number",
            "format": "double"
          },
          "numOccurrences": {
            "type": "integer",
            "format": "int32"
          },
          "percentile50Value": {
            "type": "number",
            "format": "double"
          },
          "percentile75Value": {
            "type": "number",
            "format": "double"
          },
          "percentile90Value": {
            "type": "number",
            "format": "double"
          },
          "competitiveValue": {
            "type": "number",
            "format": "double"
          },
          "numCompetitiveOccurrences": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "type": "string"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "playId": {
            "type": "string"
          },
          "metricId": {
            "type": "integer",
            "format": "int32"
          },
          "timeCode": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "base": {
            "type": "string"
          },
          "isRadarTracked": {
            "type": "boolean"
          },
          "isHeldOn": {
            "type": "boolean"
          },
          "isEstimated": {
            "type": "boolean"
          },
          "supportLevel": {
            "type": "string"
          },
          "additionalFields": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "GeneralLookupRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "base": {
            "$ref": "#/components/schemas/GenericLookup"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "GenericLookup": {
        "type": "string",
        "enum": [
          "BAT_SIDE",
          "BATS",
          "DOUBLE_HEADER_SW",
          "DRAFT_TYPE",
          "GAMEDAY_SW",
          "HIT_HARDNESS",
          "HIT_TRAJECTORY",
          "IF_NECESSARY",
          "MOUND_VISIT_TYPE",
          "PITCH_CODE",
          "PITCH_HAND",
          "PITCH_TYPE",
          "PLAYER_STATUS",
          "REVIEW_REASON",
          "SIT_CODE",
          "SKY",
          "TIEBREAKER_SW",
          "TRANS_TYPE",
          "THROWS",
          "WIND_DIRECTION"
        ]
      },
      "WeatherTrajectoryConfidenceTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "FieldZoneRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "fieldZone": {
            "$ref": "#/components/schemas/FieldZoneTypeRestObject"
          },
          "calm": {
            "$ref": "#/components/schemas/CalmDeviation"
          },
          "indoor": {
            "$ref": "#/components/schemas/IndoorDeviation"
          }
        }
      },
      "FieldZoneTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "FullWeatherRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "conditions": {
            "$ref": "#/components/schemas/WeatherConditionsRestObject"
          },
          "context": {
            "$ref": "#/components/schemas/WeatherContextRestObject"
          },
          "deviations": {
            "$ref": "#/components/schemas/WeatherDeviationsRestObject"
          }
        }
      },
      "FullWeatherWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "units": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "data": {
            "$ref": "#/components/schemas/FullWeatherRestObject"
          }
        }
      },
      "PitchHandTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "PitchTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "WeatherConditionsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "dewPoint": {
            "type": "number",
            "description": "The atmospheric temperature below which dew will form.",
            "format": "double"
          },
          "analysedTimeStamp": {
            "type": "string"
          },
          "pressure": {
            "type": "number",
            "description": "Atmospheric pressure as measured in venue in mm of Hg.",
            "format": "double"
          },
          "observedTimeStamp": {
            "type": "string"
          },
          "relativeHumidity": {
            "type": "number",
            "description": "Humidity as measured in venue in % relative humidity",
            "format": "double"
          },
          "temperature": {
            "type": "number",
            "format": "double"
          },
          "wind": {
            "$ref": "#/components/schemas/WeatherWindRestObject"
          }
        }
      },
      "WeatherContextRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "conditionType": {
            "type": "string"
          }
        }
      },
      "WeatherDeviationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "horizontal": {
            "type": "number",
            "format": "double"
          },
          "time": {
            "type": "number",
            "format": "double"
          },
          "apex": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "WeatherDeviationsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hit": {
            "$ref": "#/components/schemas/WeatherHitRestObject"
          },
          "pitch": {
            "$ref": "#/components/schemas/WeatherPitchRestObject"
          }
        }
      },
      "WeatherFlyballStandard80RestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "fieldZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldZoneRestObject"
            }
          }
        }
      },
      "WeatherHitRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "flyballStandard80": {
            "$ref": "#/components/schemas/WeatherFlyballStandard80RestObject"
          }
        }
      },
      "WeatherPitchHandRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "pitchHand": {
            "$ref": "#/components/schemas/PitchHandTypeRestObject"
          },
          "calm": {
            "$ref": "#/components/schemas/WeatherDeviationRestObject"
          },
          "indoor": {
            "$ref": "#/components/schemas/WeatherDeviationRestObject"
          }
        }
      },
      "WeatherPitchRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "pitchTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeatherPitchTypeRestObject"
            }
          }
        }
      },
      "WeatherPitchTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "pitchType": {
            "$ref": "#/components/schemas/PitchTypeRestObject"
          },
          "pitchHands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeatherPitchHandRestObject"
            }
          }
        }
      },
      "WeatherWindRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "direction": {
            "type": "number",
            "description": "Azimuth direction in degrees from North, of the prevailing wind. wind.direction increases clockwise from North.",
            "format": "double"
          },
          "gust": {
            "type": "number",
            "description": "Peak transient wind speed in mph.",
            "format": "double"
          },
          "speed": {
            "type": "number",
            "description": "Prevailing wind speed in mph.",
            "format": "double"
          }
        }
      },
      "BasicWeatherWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "units": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "data": {
            "$ref": "#/components/schemas/WeatherConditionsRestObject"
          }
        }
      },
      "CoordinatesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "description": "Represents the horizontal dimension, negative toward third base, positive toward first base.",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Represents the depth dimension, negative toward the backstop, positive toward pitcher’s mound.",
            "format": "double"
          },
          "z": {
            "type": "number",
            "description": "Represents the vertical dimension, from the ground upward.",
            "format": "double"
          }
        }
      },
      "HitTrajectoryDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryPolynomialX": {
            "type": "array",
            "description": "Polynomial describing x position of the ball's hit trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing x position of the ball's hit trajectory.",
              "format": "double"
            }
          },
          "trajectoryPolynomialY": {
            "type": "array",
            "description": "Polynomial describing y position of the ball's hit trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing y position of the ball's hit trajectory.",
              "format": "double"
            }
          },
          "trajectoryPolynomialZ": {
            "type": "array",
            "description": "Polynomial describing z position of the ball's hit trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing z position of the ball's hit trajectory.",
              "format": "double"
            }
          },
          "validTimeInterval": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "measuredTimeInterval": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxHeightPosition": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "hitPositionAt110Feet": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          }
        }
      },
      "LandingDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "time": {
            "type": "number",
            "description": "Hang time of the ball's trajectory.",
            "format": "double"
          },
          "position": {
            "$ref": "#/components/schemas/LandingPositionRestObject"
          },
          "distance": {
            "type": "number",
            "description": "Straight-line distance to the landing point of the ball's trajectory. If the ball hits above z=0 this distance is projected down to z=0.",
            "format": "double"
          },
          "offsetSpin": {
            "type": "number",
            "description": "Additional distance attributed to the ball's spin.",
            "format": "double"
          },
          "offsetWind": {
            "type": "number",
            "description": "Landing position offset attributed to the wind's impact on the ball's trajectory.",
            "format": "double"
          }
        }
      },
      "PlayWeatherWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "units": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "data": {
            "$ref": "#/components/schemas/WeatherPlayRestObject"
          }
        }
      },
      "PositionRestObject": {
        "$ref": "#/components/schemas/LandingPositionRestObject"
      },
      "WeatherConditionFlagRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "homeRun": {
            "type": "boolean"
          },
          "homeRunChange": {
            "type": "boolean"
          },
          "offTheWall": {
            "type": "boolean"
          },
          "offTheWallChange": {
            "type": "boolean"
          },
          "foul": {
            "type": "boolean"
          },
          "foulChange": {
            "type": "boolean"
          }
        }
      },
      "WeatherHitSegmentRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/WeatherHitTrajectoryDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/LandingDataRestObject"
          },
          "conditions": {
            "$ref": "#/components/schemas/WeatherMetricRestObject"
          },
          "flags": {
            "$ref": "#/components/schemas/WeatherConditionFlagRestObject"
          },
          "deviations": {
            "$ref": "#/components/schemas/WeatherDeviationRestObject"
          }
        },
        "description": "Hit segment data for the indoor scenario. `conditions.pressure`: fixed at 22.92 mm Hg or 1 standard atmosphere. `conditions.relativeHumidity`: fixed at 55%. `conditions.temperature`: fixed at 72 degrees Fahrenheit. `conditions.windDirection`: fixed at 0."
      },
      "WeatherHitTrajectoryDataRestObject": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/HitTrajectoryDataRestObject"
          },
          {
            "type": "object",
            "properties": {
              "copyright": {
                "type": "string"
              },
              "trajectoryPolynomialX": {
                "type": "array",
                "description": "Polynomial describing x position of the ball's hit trajectory.",
                "items": {
                  "type": "number",
                  "description": "Polynomial describing x position of the ball's hit trajectory.",
                  "format": "double"
                }
              },
              "trajectoryPolynomialY": {
                "type": "array",
                "description": "Polynomial describing y position of the ball's hit trajectory.",
                "items": {
                  "type": "number",
                  "description": "Polynomial describing y position of the ball's hit trajectory.",
                  "format": "double"
                }
              },
              "trajectoryPolynomialZ": {
                "type": "array",
                "description": "Polynomial describing z position of the ball's hit trajectory.",
                "items": {
                  "type": "number",
                  "description": "Polynomial describing z position of the ball's hit trajectory.",
                  "format": "double"
                }
              },
              "windSpeed": {
                "$ref": "#/components/schemas/WindSpeedRestObject"
              },
              "apex": {
                "type": "number",
                "format": "double"
              },
              "trajectoryConfidence": {
                "$ref": "#/components/schemas/WeatherTrajectoryConfidenceTypeRestObject"
              }
            }
          }
        ]
      },
      "WeatherMetricRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string",
            "description": "UTC timestamp for atmospheric condition measurements."
          },
          "pressure": {
            "type": "number",
            "description": "Atmospheric pressure in venue in mm Hg, as measured above the venue.",
            "format": "double"
          },
          "relativeHumidity": {
            "type": "number",
            "description": "Relative humidity in venue in %, as measured above the venue.",
            "format": "double"
          },
          "temperature": {
            "type": "number",
            "description": "Venue temperature in degrees Fahrenheit.",
            "format": "double"
          },
          "wind": {
            "$ref": "#/components/schemas/WeatherWindRestObject"
          }
        }
      },
      "WeatherPitchSegmentRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/WeatherPitchTrajectoryDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/LandingDataRestObject"
          },
          "conditions": {
            "$ref": "#/components/schemas/WeatherMetricRestObject"
          },
          "deviations": {
            "$ref": "#/components/schemas/WeatherDeviationRestObject"
          }
        },
        "description": "Pitch segment data for the indoor scenario. `conditions.pressure`: fixed at 22.92 mm Hg or 1 standard atmosphere. `conditions.relativeHumidity`: fixed at 55%. `conditions.temperature`: fixed at 72 degrees Fahrenheit. `conditions.windDirection`: fixed at 0."
      },
      "WeatherPitchTrajectoryDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryPolynomialX": {
            "type": "array",
            "description": "Polynomial describing x position of the ball's pitch trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing x position of the ball's pitch trajectory.",
              "format": "double"
            }
          },
          "trajectoryPolynomialY": {
            "type": "array",
            "description": "Polynomial describing y position of the ball's pitch trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing y position of the ball's pitch trajectory.",
              "format": "double"
            }
          },
          "trajectoryPolynomialZ": {
            "type": "array",
            "description": "Polynomial describing z position of the ball's pitch trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing z position of the ball's pitch trajectory.",
              "format": "double"
            }
          },
          "location": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "windSpeed": {
            "$ref": "#/components/schemas/WindSpeedRestObject"
          },
          "apex": {
            "type": "number",
            "format": "double"
          },
          "trajectoryConfidence": {
            "$ref": "#/components/schemas/WeatherTrajectoryConfidenceTypeRestObject"
          }
        }
      },
      "WeatherPlayRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hitSegmentActual": {
            "$ref": "#/components/schemas/WeatherHitSegmentActual"
          },
          "hitSegmentCalm": {
            "$ref": "#/components/schemas/WeatherHitSegmentCalm"
          },
          "hitSegmentIndoor": {
            "$ref": "#/components/schemas/WeatherHitSegmentRestObject"
          },
          "pitchSegmentActual": {
            "$ref": "#/components/schemas/WeatherPitchSegmentActual"
          },
          "pitchSegmentCalm": {
            "$ref": "#/components/schemas/WeatherPitchSegmentCalm"
          },
          "pitchSegmentIndoor": {
            "$ref": "#/components/schemas/WeatherPitchSegmentRestObject"
          }
        }
      },
      "WindSpeedRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "side": {
            "type": "number",
            "description": "Mean wind speed calculated at a right angle (transverse) to the trajectory of the ball in the horizontal direction.",
            "format": "double"
          },
          "tail": {
            "type": "number",
            "description": "Mean wind speed calculated along the trajectory of the ball. A tail wind is positive and a headwind is negative.",
            "format": "double"
          },
          "vertical": {
            "type": "number",
            "description": "Mean wind speed component affecting the pitch trajectory in the vertical (z) direction.",
            "format": "double"
          }
        }
      },
      "RoofType": {
        "type": "string",
        "enum": ["roofOpen", "roofClosedNoPanel", "roofClosedPanelOpen", "roofClosedPanelClosed", "noRoof", "unknown"]
      },
      "ForecastWeatherWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "units": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "data": {
            "$ref": "#/components/schemas/WeatherForecastRestObject"
          }
        }
      },
      "WeatherForecastRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "conditions": {
            "$ref": "#/components/schemas/WeatherConditionsRestObject"
          },
          "context": {
            "$ref": "#/components/schemas/WeatherContextRestObject"
          },
          "deviations": {
            "$ref": "#/components/schemas/WeatherDeviationsRestObject"
          }
        }
      },
      "ViolationTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "violation_type_desc": {
            "type": "string"
          },
          "violationTypeDesc": {
            "type": "string"
          },
          "violationTypeCode": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "eventTypeCode": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "violatorCode": {
            "type": "string"
          }
        }
      },
      "VideoResolutionEnumRestObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "resolutionShort": {
            "type": "string"
          },
          "resolutionFull": {
            "type": "string"
          }
        }
      },
      "GameTypeEnum": {
        "type": "string",
        "enum": [
          "SPRING_TRAINING",
          "REGULAR_SEASON",
          "FIRST_ROUND",
          "DIVISION_SERIES",
          "LEAGUE_CHAMPIONSHIP_SERIES",
          "WORLD_SERIES",
          "CHAMPIONSHIP",
          "NINETEENTH_CENTURY_SERIES",
          "PLAYOFFS",
          "ALL_STAR",
          "INTRASQUAD",
          "EXHIBITION"
        ]
      },
      "About": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "atBatIndex": {
            "type": "integer",
            "format": "int32"
          },
          "halfInning": {
            "type": "string"
          },
          "isTopInning": {
            "type": "boolean"
          },
          "inning": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "isComplete": {
            "type": "boolean"
          },
          "isScoringPlay": {
            "type": "boolean"
          },
          "hasReview": {
            "type": "boolean"
          },
          "hasOut": {
            "type": "boolean",
            "description": "Does the play include an out?"
          },
          "captivatingIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AdditionalBio": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "homeTown": {
            "type": "string"
          }
        }
      },
      "AdditionalBioRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "homeTown": {
            "type": "string"
          }
        }
      },
      "AllStarEnum": {
        "type": "string",
        "enum": ["N", "Y", "F", "T", "O", "I"]
      },
      "ApplicationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "androidPackage": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "intent": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "androidUrl": {
            "type": "string"
          },
          "iosUrl": {
            "type": "string"
          },
          "iosPackage": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "Article": {
        "type": "object",
        "properties": {
          "article": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "playerId": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Award": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardResult"
            }
          },
          "winners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardWinner"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "recipientType": {
            "type": "string"
          },
          "history": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "imageUrl": {
            "type": "string"
          },
          "homePageUrl": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "season": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "votes": {
            "type": "integer",
            "format": "int32"
          },
          "votesAvailable": {
            "type": "integer",
            "format": "int32"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "notes": {
            "type": "string"
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "AwardRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "recipientType": {
            "type": "string"
          },
          "history": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "homePageUrl": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "season": {
            "type": "string"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardResultRestObject"
            }
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "votes": {
            "type": "integer",
            "format": "int32"
          },
          "votesAvailable": {
            "type": "integer",
            "format": "int32"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "AwardResult": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "seasonId": {
            "type": "integer",
            "format": "int32"
          },
          "winners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardWinner"
            }
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "AwardResultRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "seasonId": {
            "type": "integer",
            "format": "int32"
          },
          "winners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardWinnerRestObject"
            }
          }
        }
      },
      "AwardWinner": {
        "type": "object",
        "properties": {
          "awardId": {
            "type": "integer",
            "format": "int32"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "coachId": {
            "type": "integer",
            "format": "int32"
          },
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "string"
          },
          "person": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "coach": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "awardDate": {
            "type": "string",
            "format": "date"
          },
          "season": {
            "type": "string"
          },
          "empty": {
            "type": "boolean"
          },
          "notEmpty": {
            "type": "boolean"
          }
        }
      },
      "AwardWinnerRestObject": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "coach": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "copyright": {
            "type": "string"
          }
        }
      },
      "BaseballABSChallenge": {
        "type": "object",
        "properties": {
          "hasChallenges": {
            "type": "boolean"
          },
          "awayChallengesUsed": {
            "type": "integer",
            "format": "int32"
          },
          "awayChallengesRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "homeChallengesUsed": {
            "type": "integer",
            "format": "int32"
          },
          "homeChallengesRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "challengingTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "reviewReason": {
            "type": "string"
          },
          "limit9thInning": {
            "type": "integer",
            "format": "int32"
          },
          "awayChallengesUsedOverturned": {
            "type": "integer",
            "format": "int32"
          },
          "awayChallengesUsedStands": {
            "type": "integer",
            "format": "int32"
          },
          "homeChallengesUsedOverturned": {
            "type": "integer",
            "format": "int32"
          },
          "homeChallengesUsedStands": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BaseballABSChallengeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hasChallenges": {
            "type": "boolean"
          },
          "reason": {
            "type": "string"
          },
          "away": {
            "$ref": "#/components/schemas/BaseballTeamReview"
          },
          "home": {
            "$ref": "#/components/schemas/BaseballTeamReview"
          },
          "challengingTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          }
        }
      },
      "BaseballChallenge": {
        "type": "object",
        "properties": {
          "hasChallenges": {
            "type": "boolean"
          },
          "awayChallengesUsed": {
            "type": "integer",
            "format": "int32"
          },
          "awayChallengesRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "homeChallengesUsed": {
            "type": "integer",
            "format": "int32"
          },
          "homeChallengesRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "challengingTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "reviewReason": {
            "type": "string"
          },
          "limit9thInning": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BaseballDecision": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "winner": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "loser": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "save": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "empty": {
            "type": "boolean"
          },
          "notEmpty": {
            "type": "boolean"
          },
          "hydratedPeople": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballDecisionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "winner": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "loser": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "save": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          }
        }
      },
      "BaseballDefenseRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "pitcher": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "catcher": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "first": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "second": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "third": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "shortstop": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "left": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "center": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "right": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "batter": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "onDeck": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "inHole": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "battingOrder": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          }
        }
      },
      "BaseballDraftProspect": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "bisPlayerId": {
            "type": "integer",
            "format": "int32"
          },
          "bisSchoolId": {
            "type": "integer",
            "format": "int32"
          },
          "draftPlayerId": {
            "type": "integer",
            "format": "int32"
          },
          "pickRound": {
            "type": "string"
          },
          "pickRoundLabel": {
            "type": "string"
          },
          "pickNumber": {
            "type": "integer",
            "format": "int32"
          },
          "displayPickNumber": {
            "type": "integer",
            "format": "int32"
          },
          "roundPickNumber": {
            "type": "integer",
            "format": "int32"
          },
          "englishBlurb": {
            "type": "string"
          },
          "spanishBlurb": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "pickedTeamCode": {
            "type": "string"
          },
          "home": {
            "$ref": "#/components/schemas/Location"
          },
          "scoutingReport": {
            "type": "string"
          },
          "photoFlag": {
            "type": "boolean"
          },
          "school": {
            "$ref": "#/components/schemas/School"
          },
          "comments": {
            "type": "string"
          },
          "headshotLink": {
            "type": "string"
          },
          "pickValue": {
            "type": "string"
          },
          "signingBonus": {
            "type": "string"
          },
          "person": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "draftType": {
            "$ref": "#/components/schemas/DraftTypeEnum"
          },
          "draftStatus": {
            "$ref": "#/components/schemas/DraftStatusEnum"
          },
          "wasPassed": {
            "type": "boolean"
          },
          "wasLastPick": {
            "type": "boolean"
          },
          "wasSelected": {
            "type": "boolean"
          },
          "year": {
            "type": "string"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballDraftProspectRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "bisPlayerId": {
            "type": "integer",
            "format": "int32"
          },
          "bisSchoolId": {
            "type": "integer",
            "format": "int32"
          },
          "pickRound": {
            "type": "string"
          },
          "pickNumber": {
            "type": "integer",
            "format": "int32"
          },
          "displayPickNumber": {
            "type": "integer",
            "format": "int32"
          },
          "roundPickNumber": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "pickValue": {
            "type": "string"
          },
          "signingBonus": {
            "type": "string"
          },
          "home": {
            "$ref": "#/components/schemas/LocationRestObject"
          },
          "scoutingReport": {
            "type": "string"
          },
          "school": {
            "$ref": "#/components/schemas/SchoolRestObject"
          },
          "blurb": {
            "type": "string"
          },
          "headshotLink": {
            "type": "string"
          },
          "person": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "draftType": {
            "$ref": "#/components/schemas/DraftTypeEnumRestObject"
          },
          "isDrafted": {
            "type": "boolean"
          },
          "isPass": {
            "type": "boolean"
          },
          "year": {
            "type": "string"
          }
        }
      },
      "BaseballGameAlert": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "alertId": {
            "type": "string"
          }
        }
      },
      "BaseballGameAlertRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "alertId": {
            "type": "string"
          }
        }
      },
      "BaseballGameFlag": {
        "type": "object",
        "properties": {
          "isNoHitter": {
            "type": "boolean",
            "writeOnly": true
          },
          "isPerfectGame": {
            "type": "boolean",
            "writeOnly": true
          },
          "isAwayTeamNoHitter": {
            "type": "boolean",
            "writeOnly": true
          },
          "isAwayTeamPerfectGame": {
            "type": "boolean",
            "writeOnly": true
          },
          "isHomeTeamNoHitter": {
            "type": "boolean",
            "writeOnly": true
          },
          "isHomeTeamPerfectGame": {
            "type": "boolean",
            "writeOnly": true
          },
          "awayTeamNoHitter": {
            "type": "boolean"
          },
          "homeTeamNoHitter": {
            "type": "boolean"
          },
          "awayTeamPerfectGame": {
            "type": "boolean"
          },
          "homeTeamPerfectGame": {
            "type": "boolean"
          },
          "noHitter": {
            "type": "boolean"
          },
          "perfectGame": {
            "type": "boolean"
          }
        }
      },
      "BaseballGameFlagRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "noHitter": {
            "type": "boolean"
          },
          "perfectGame": {
            "type": "boolean"
          },
          "awayTeamNoHitter": {
            "type": "boolean"
          },
          "awayTeamPerfectGame": {
            "type": "boolean"
          },
          "homeTeamNoHitter": {
            "type": "boolean"
          },
          "homeTeamPerfectGame": {
            "type": "boolean"
          }
        }
      },
      "BaseballGameLiveLookinRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "mediaPlaybackId": {
            "type": "integer",
            "format": "int64"
          },
          "headline": {
            "type": "string"
          },
          "kicker": {
            "type": "string"
          },
          "playbacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveLookinPlayback"
            }
          }
        }
      },
      "BaseballHit": {
        "type": "object",
        "properties": {
          "launchData": {
            "$ref": "#/components/schemas/LaunchData"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/HitTrajectoryData"
          },
          "landingData": {
            "$ref": "#/components/schemas/StartEndData"
          },
          "lastMeasuredData": {
            "$ref": "#/components/schemas/StartEndData"
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "inning": {
            "type": "integer",
            "format": "int32"
          },
          "pitcher": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "batter": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "coordX": {
            "type": "number",
            "format": "double"
          },
          "coordY": {
            "type": "number",
            "format": "double"
          },
          "landingPosX": {
            "type": "number",
            "format": "double"
          },
          "landingPosY": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "writeOnly": true
          },
          "launchSpeed": {
            "type": "number",
            "format": "double"
          },
          "totalDistance": {
            "type": "number",
            "format": "double"
          },
          "launchAngle": {
            "type": "number",
            "format": "double"
          },
          "trajectory": {
            "type": "string"
          },
          "hardness": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "isBarrel": {
            "type": "boolean"
          },
          "hitProbability": {
            "type": "number",
            "format": "double"
          },
          "batSpeed": {
            "type": "number",
            "format": "double"
          },
          "isSwordSwing": {
            "type": "boolean"
          },
          "descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          }
        }
      },
      "BaseballHitDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "launchSpeed": {
            "type": "number",
            "format": "double"
          },
          "launchAngle": {
            "type": "number",
            "format": "double"
          },
          "totalDistance": {
            "type": "number",
            "format": "double"
          },
          "trajectory": {
            "type": "string"
          },
          "hardness": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "isBarrel": {
            "type": "boolean"
          },
          "hitProbability": {
            "type": "number",
            "format": "double"
          },
          "batSpeed": {
            "type": "number",
            "format": "double"
          },
          "isSwordSwing": {
            "type": "boolean"
          },
          "launchData": {
            "$ref": "#/components/schemas/LaunchDataRestObject"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/HitTrajectoryDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/StartEndDataRestObject"
          },
          "lastMeasuredData": {
            "$ref": "#/components/schemas/StartEndDataRestObject"
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BaseballHotColdZone": {
        "type": "object",
        "properties": {
          "zone": {
            "type": "string"
          },
          "sweetness": {
            "type": "string"
          },
          "temp": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "BaseballHotColdZoneRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "zone": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "sweetness": {
            "type": "string"
          },
          "temp": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "BaseballInning": {
        "type": "object",
        "properties": {
          "runsAway": {
            "type": "integer",
            "format": "int32"
          },
          "runsHome": {
            "type": "integer",
            "format": "int32"
          },
          "hitsAway": {
            "type": "integer",
            "format": "int32"
          },
          "hitsHome": {
            "type": "integer",
            "format": "int32"
          },
          "errorsAway": {
            "type": "integer",
            "format": "int32"
          },
          "errorsHome": {
            "type": "integer",
            "format": "int32"
          },
          "leftOnBaseAway": {
            "type": "integer",
            "format": "int32"
          },
          "leftOnBaseHome": {
            "type": "integer",
            "format": "int32"
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "ordinalNum": {
            "type": "string"
          }
        }
      },
      "BaseballLinescore": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "awayScore": {
            "type": "integer",
            "format": "int32"
          },
          "homeScore": {
            "type": "integer",
            "format": "int32"
          },
          "gameStatus": {
            "$ref": "#/components/schemas/IGameStatus"
          },
          "homeTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "awayTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string"
          },
          "scheduledInnings": {
            "type": "integer",
            "format": "int32"
          },
          "currentInning": {
            "type": "integer",
            "format": "int32"
          },
          "currentInningOrdinal": {
            "type": "string"
          },
          "inningState": {
            "type": "string"
          },
          "inningHalf": {
            "type": "string"
          },
          "isTopInning": {
            "type": "boolean",
            "writeOnly": true
          },
          "innings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballInning"
            }
          },
          "runsAway": {
            "type": "integer",
            "format": "int32"
          },
          "runsHome": {
            "type": "integer",
            "format": "int32"
          },
          "awayHits": {
            "type": "integer",
            "format": "int32"
          },
          "homeHits": {
            "type": "integer",
            "format": "int32"
          },
          "awayErrors": {
            "type": "integer",
            "format": "int32"
          },
          "homeErrors": {
            "type": "integer",
            "format": "int32"
          },
          "awayLeftOnBase": {
            "type": "integer",
            "format": "int32"
          },
          "homeLeftOnBase": {
            "type": "integer",
            "format": "int32"
          },
          "awayIsWinner": {
            "type": "boolean"
          },
          "homeIsWinner": {
            "type": "boolean"
          },
          "balls": {
            "type": "integer",
            "format": "int32"
          },
          "strikes": {
            "type": "integer",
            "format": "int32"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "batTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "batTeamsLastPitcher": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "batterPosition": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "batter": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "onDeck": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "inHole": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "battingOrder": {
            "type": "integer",
            "format": "int32"
          },
          "onFirst": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "onSecond": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "onThird": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "postOnFirst": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "postOnSecond": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "postOnThird": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "fieldTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "pitcher": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "catcher": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "firstBase": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "secondBase": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "thirdBase": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "shortstop": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "leftField": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "centerField": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "rightField": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "fieldTeamsDueUpBatter": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "fieldTeamsDueUpOnDeck": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "fieldTeamsDueUpInHole": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "fieldTeamsBattingOrder": {
            "type": "integer",
            "format": "int32"
          },
          "playersNotInField": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BaseballPosition"
            }
          },
          "tie": {
            "type": "boolean"
          },
          "topInning": {
            "type": "boolean"
          },
          "hydratedStats": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballLinescoreRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "currentInning": {
            "type": "integer",
            "format": "int32"
          },
          "currentInningOrdinal": {
            "type": "string"
          },
          "inningState": {
            "type": "string"
          },
          "inningHalf": {
            "type": "string"
          },
          "isTopInning": {
            "type": "boolean"
          },
          "scheduledInnings": {
            "type": "integer",
            "format": "int32"
          },
          "innings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InningRestObject"
            }
          },
          "teams": {
            "$ref": "#/components/schemas/BaseballLinescoreTeamInfoRestObject"
          },
          "defense": {
            "$ref": "#/components/schemas/BaseballDefenseRestObject"
          },
          "offense": {
            "$ref": "#/components/schemas/BaseballOffenseRestObject"
          },
          "balls": {
            "type": "integer",
            "format": "int32"
          },
          "strikes": {
            "type": "integer",
            "format": "int32"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "tie": {
            "type": "boolean"
          }
        }
      },
      "BaseballLinescoreTeamInfoRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "home": {
            "$ref": "#/components/schemas/TeamInfo"
          },
          "away": {
            "$ref": "#/components/schemas/TeamInfo"
          }
        }
      },
      "BaseballLineup": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "awayPlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPerson"
            }
          },
          "homePlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPerson"
            }
          },
          "hydratedPeople": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballLineupRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "homePlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPersonRestObject"
            }
          },
          "awayPlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPersonRestObject"
            }
          }
        }
      },
      "BaseballOffenseRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "batter": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "onDeck": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "inHole": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "first": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "second": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "third": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "postOnFirst": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "postOnSecond": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "postOnThird": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "pitcher": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "batterPosition": {
            "$ref": "#/components/schemas/PositionRestObject"
          },
          "battingOrder": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          }
        }
      },
      "BaseballPerson": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "primaryPosition": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats"
          },
          "otherNames": {
            "$ref": "#/components/schemas/OtherNames"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "useName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "useLastName": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "nickNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "boxscoreName": {
            "type": "string"
          },
          "primaryNumber": {
            "type": "string"
          },
          "rosterNumber": {
            "type": "string"
          },
          "draftYear": {
            "type": "integer",
            "format": "int32"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "birthCity": {
            "type": "string"
          },
          "birthStateProvince": {
            "type": "string"
          },
          "birthCountry": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "deathCity": {
            "type": "string"
          },
          "deathStateProvince": {
            "type": "string"
          },
          "deathCountry": {
            "type": "string"
          },
          "deathDate": {
            "type": "string",
            "format": "date"
          },
          "lastPlayedDate": {
            "type": "string",
            "format": "date"
          },
          "pronunciation": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "heightFeet": {
            "type": "integer",
            "format": "int32"
          },
          "heightInches": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "currentTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "isRookie": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "gender": {
            "type": "string"
          },
          "nameMatrilineal": {
            "type": "string"
          },
          "isPlayer": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "isAlternateCaptain": {
            "type": "boolean"
          },
          "isCaptain": {
            "type": "boolean"
          },
          "twitter": {
            "type": "string"
          },
          "awards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Award"
            }
          },
          "socialMediaInfo": {
            "$ref": "#/components/schemas/SocialMediaInfo"
          },
          "educationInfo": {
            "$ref": "#/components/schemas/EducationInfo"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Photo"
            }
          },
          "draft": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerDraftInfo"
            }
          },
          "additionalBio": {
            "$ref": "#/components/schemas/AdditionalBio"
          },
          "phoneticName": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "batSide": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "pitchHand": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "mlbDebutDate": {
            "type": "string",
            "format": "date"
          },
          "batterPitcher": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "nameSlug": {
            "type": "string"
          },
          "nameTitle": {
            "type": "string"
          },
          "namePrefix": {
            "type": "string"
          },
          "nameFirstLast": {
            "type": "string"
          },
          "firstLastName": {
            "type": "string"
          },
          "lastFirstName": {
            "type": "string"
          },
          "lastInitName": {
            "type": "string"
          },
          "initLastName": {
            "type": "string"
          },
          "fullFMLName": {
            "type": "string"
          },
          "fullLFMName": {
            "type": "string"
          },
          "strikeZoneTop": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneBottom": {
            "type": "number",
            "format": "double"
          },
          "alumniLastSeason": {
            "type": "string"
          },
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "drafts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballDraftProspect"
            }
          },
          "relatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Relative"
            }
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          },
          "mixedFeed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFeed"
            }
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefId"
            }
          },
          "depthCharts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepthChart"
            }
          },
          "nextStarts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballScheduleItem"
            }
          },
          "rookieSeasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pitcher": {
            "type": "boolean"
          },
          "fielder": {
            "type": "boolean"
          },
          "hydratedSocial": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedEducation": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedStats": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedCurrentTeam": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedTeam": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedAwards": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedPersonRosterEntries": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedPersonJobsEntries": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedRelatives": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "draftProspects": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedDepthCharts": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedNextStarts": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedPlayerPhotos": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedArticles": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedVideos": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedMixedFeed": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballPersonRestObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "primaryNumber": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "currentAge": {
            "type": "integer",
            "format": "int32"
          },
          "birthCity": {
            "type": "string"
          },
          "birthStateProvince": {
            "type": "string"
          },
          "birthCountry": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "alternateCaptain": {
            "type": "boolean"
          },
          "captain": {
            "type": "boolean"
          },
          "rookie": {
            "type": "boolean"
          },
          "currentTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "primaryPosition": {
            "$ref": "#/components/schemas/PositionRestObject"
          },
          "social": {
            "$ref": "#/components/schemas/SocialMediaRestObject"
          },
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "useName": {
            "type": "string"
          },
          "useLastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "boxscoreName": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "nameMatrilineal": {
            "type": "string"
          },
          "isPlayer": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "draftYear": {
            "type": "integer",
            "format": "int32"
          },
          "deathDate": {
            "type": "string",
            "format": "date"
          },
          "deathCity": {
            "type": "string"
          },
          "deathStateProvince": {
            "type": "string"
          },
          "deathCountry": {
            "type": "string"
          },
          "pronunciation": {
            "type": "string"
          },
          "lastPlayedDate": {
            "type": "string",
            "format": "date"
          },
          "rookieSeasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "otherNames": {
            "$ref": "#/components/schemas/OtherNamesRestObject"
          },
          "education": {
            "$ref": "#/components/schemas/EducationRestObject"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhotoRestObject"
            }
          },
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatContainerRestObject"
            }
          },
          "awards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardRestObject"
            }
          },
          "draft": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerDraftInfoRestObject"
            }
          },
          "additionalBio": {
            "$ref": "#/components/schemas/AdditionalBioRestObject"
          },
          "mlbDebutDate": {
            "type": "string",
            "format": "date"
          },
          "batSide": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "pitchHand": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "note": {
            "type": "string"
          },
          "nameFirstLast": {
            "type": "string"
          },
          "nameTitle": {
            "type": "string"
          },
          "namePrefix": {
            "type": "string",
            "deprecated": true
          },
          "nameSuffix": {
            "type": "string"
          },
          "nameSlug": {
            "type": "string"
          },
          "firstLastName": {
            "type": "string"
          },
          "lastFirstName": {
            "type": "string"
          },
          "lastInitName": {
            "type": "string"
          },
          "initLastName": {
            "type": "string"
          },
          "fullFMLName": {
            "type": "string"
          },
          "fullLFMName": {
            "type": "string"
          },
          "strikeZoneTop": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneBottom": {
            "type": "number",
            "format": "double"
          },
          "alumniLastSeason": {
            "type": "string"
          },
          "drafts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballDraftProspectRestObject"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionRestObject"
            }
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFeedRestObject"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFeedRestObject"
            }
          },
          "mixedFeed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFeedRestObject"
            }
          },
          "relatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPersonRestObject"
            }
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefIdRestObject"
            }
          },
          "nicknames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "depthCharts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepthChartRestObject"
            }
          }
        }
      },
      "BaseballPitch": {
        "type": "object",
        "properties": {
          "ballColor": {
            "type": "string"
          },
          "trailColor": {
            "type": "string"
          },
          "startSpeed": {
            "type": "number",
            "format": "double"
          },
          "endSpeed": {
            "type": "number",
            "format": "double"
          },
          "nastyFactor": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneTop": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneBottom": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneWidth": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneDepth": {
            "type": "number",
            "format": "double"
          },
          "getaX": {
            "type": "number",
            "format": "double"
          },
          "getaY": {
            "type": "number",
            "format": "double"
          },
          "getaZ": {
            "type": "number",
            "format": "double"
          },
          "pfxX": {
            "type": "number",
            "format": "double"
          },
          "pfxZ": {
            "type": "number",
            "format": "double"
          },
          "getpX": {
            "type": "number",
            "format": "double"
          },
          "getpZ": {
            "type": "number",
            "format": "double"
          },
          "getvX0": {
            "type": "number",
            "format": "double"
          },
          "getvY0": {
            "type": "number",
            "format": "double"
          },
          "getvZ0": {
            "type": "number",
            "format": "double"
          },
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z0": {
            "type": "number",
            "format": "double"
          },
          "y0": {
            "type": "number",
            "format": "double"
          },
          "x0": {
            "type": "number",
            "format": "double"
          },
          "breakHorizontal": {
            "type": "number",
            "format": "double"
          },
          "breakVertical": {
            "type": "number",
            "format": "double"
          },
          "breakVerticalInduced": {
            "type": "number",
            "format": "double"
          },
          "breakAngle": {
            "type": "number",
            "format": "double"
          },
          "breakLength": {
            "type": "number",
            "format": "double"
          },
          "breakX": {
            "type": "number",
            "format": "double"
          },
          "breakY": {
            "type": "number",
            "format": "double"
          },
          "breakZ": {
            "type": "number",
            "format": "double"
          },
          "zone": {
            "type": "integer",
            "format": "int32"
          },
          "spinRate": {
            "type": "integer",
            "format": "int32"
          },
          "spinDirection": {
            "type": "integer",
            "format": "int32"
          },
          "typeConfidence": {
            "type": "number",
            "format": "double"
          },
          "plateTime": {
            "type": "number",
            "format": "double"
          },
          "extension": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BaseballPitchDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "startSpeed": {
            "type": "number",
            "format": "double"
          },
          "endSpeed": {
            "type": "number",
            "format": "double"
          },
          "nastyFactor": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneTop": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneBottom": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneWidth": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneDepth": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "breaks": {
            "$ref": "#/components/schemas/Breaks"
          },
          "zone": {
            "type": "integer",
            "format": "int32"
          },
          "typeConfidence": {
            "type": "number",
            "format": "double"
          },
          "plateTime": {
            "type": "number",
            "format": "double"
          },
          "extension": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BaseballPlay": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "balls": {
            "type": "integer",
            "format": "int32"
          },
          "strikes": {
            "type": "integer",
            "format": "int32"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "inning": {
            "type": "integer",
            "format": "int32"
          },
          "atBatIndex": {
            "type": "integer",
            "format": "int32"
          },
          "halfInning": {
            "type": "string"
          },
          "hasOut": {
            "type": "boolean"
          },
          "batter": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "pitcher": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "batterHotColdZoneStats": {
            "$ref": "#/components/schemas/Stats"
          },
          "pitcherHotColdZoneStats": {
            "$ref": "#/components/schemas/Stats"
          },
          "batterHotColdZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballHotColdZone"
            }
          },
          "pitcherHotColdZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballHotColdZone"
            }
          },
          "splitsBatter": {
            "type": "string"
          },
          "splitsPitcher": {
            "type": "string"
          },
          "splitsMenOnBase": {
            "type": "string"
          },
          "pitchHand": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "batSide": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "captivatingIndex": {
            "type": "integer",
            "format": "int32"
          },
          "hitTrajectory": {
            "$ref": "#/components/schemas/HitTrajectory"
          },
          "eventType": {
            "type": "string"
          },
          "eventTypeEnum": {
            "$ref": "#/components/schemas/EventType"
          },
          "result": {
            "type": "string"
          },
          "resultMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          },
          "numRbi": {
            "type": "integer",
            "format": "int32"
          },
          "awayScore": {
            "type": "integer",
            "format": "int32"
          },
          "homeScore": {
            "type": "integer",
            "format": "int32"
          },
          "isComplete": {
            "type": "boolean",
            "writeOnly": true
          },
          "isScoringPlay": {
            "type": "boolean",
            "writeOnly": true
          },
          "hasReview": {
            "type": "boolean"
          },
          "reviewType": {
            "type": "string"
          },
          "reviewOverturned": {
            "type": "boolean"
          },
          "reviewInProgress": {
            "type": "boolean"
          },
          "challengeTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballReview"
            }
          },
          "runnerOn1b": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "runnerOn2b": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "runnerOn3b": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "pitchIndex": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "actionIndex": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "runnerIndex": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "runnerMovements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballRunnerMovement"
            }
          },
          "playEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPlayEvent"
            }
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayCredit"
            }
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayCredit"
            }
          },
          "isDoublePlay": {
            "type": "boolean",
            "writeOnly": true
          },
          "isGroundIntoDoublePlay": {
            "type": "boolean",
            "writeOnly": true
          },
          "isTriplePlay": {
            "type": "boolean",
            "writeOnly": true
          },
          "isGroundIntoTriplePlay": {
            "type": "boolean",
            "writeOnly": true
          },
          "numLeftOnBase": {
            "type": "integer",
            "format": "int32"
          },
          "numLeftOnBaseScoring": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          },
          "offensiveAlignmentId": {
            "type": "string"
          },
          "defensiveAlignmentId": {
            "type": "string"
          },
          "complete": {
            "type": "boolean"
          },
          "scoringPlay": {
            "type": "boolean"
          },
          "topInning": {
            "type": "boolean"
          },
          "results": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "plateAppearance": {
            "type": "boolean"
          },
          "summary": {
            "$ref": "#/components/schemas/BaseballPlay"
          },
          "batterResultEvent": {
            "$ref": "#/components/schemas/EventType"
          },
          "responsibleBatter": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "payoffEvent": {
            "$ref": "#/components/schemas/BaseballPlayEvent"
          },
          "teamNumLeftOnBase": {
            "type": "integer",
            "format": "int32"
          },
          "numLeftOnBaseScoringPosition": {
            "type": "integer",
            "format": "int32"
          },
          "hit": {
            "type": "boolean"
          },
          "atBat": {
            "type": "boolean"
          },
          "doublePlay": {
            "type": "boolean"
          },
          "triplePlay": {
            "type": "boolean"
          },
          "groundIntoDoublePlay": {
            "type": "boolean"
          },
          "groundIntoTriplePlay": {
            "type": "boolean"
          },
          "groundOut": {
            "type": "boolean"
          },
          "responsiblePitcher": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "inPlayEvent": {
            "$ref": "#/components/schemas/BaseballPlayEvent"
          },
          "numErrors": {
            "type": "integer",
            "format": "int32"
          },
          "numRuns": {
            "type": "integer",
            "format": "int32"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballPlayEvent": {
        "type": "object",
        "properties": {
          "balls": {
            "type": "integer",
            "format": "int32"
          },
          "strikes": {
            "type": "integer",
            "format": "int32"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "runnerOn1b": {
            "type": "boolean"
          },
          "runnerOn2b": {
            "type": "boolean"
          },
          "runnerOn3b": {
            "type": "boolean"
          },
          "inning": {
            "type": "integer",
            "format": "int32"
          },
          "isTopInning": {
            "type": "boolean"
          },
          "preBalls": {
            "type": "integer",
            "format": "int32"
          },
          "preStrikes": {
            "type": "integer",
            "format": "int32"
          },
          "preOuts": {
            "type": "integer",
            "format": "int32"
          },
          "postBalls": {
            "type": "integer",
            "format": "int32"
          },
          "postStrikes": {
            "type": "integer",
            "format": "int32"
          },
          "postOuts": {
            "type": "integer",
            "format": "int32"
          },
          "postRunnerOn1b": {
            "type": "boolean"
          },
          "postRunnerOn2b": {
            "type": "boolean"
          },
          "postRunnerOn3b": {
            "type": "boolean"
          },
          "pitchNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pickoffNumber": {
            "type": "integer",
            "format": "int32"
          },
          "atBatNumber": {
            "type": "integer",
            "format": "int32"
          },
          "eventTypeEnum": {
            "$ref": "#/components/schemas/EventType"
          },
          "description": {
            "type": "string"
          },
          "descriptionMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "pitchCall": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "pitchType": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "pitch": {
            "$ref": "#/components/schemas/BaseballPitch"
          },
          "hit": {
            "$ref": "#/components/schemas/BaseballHit"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "pfxId": {
            "type": "string"
          },
          "playId": {
            "type": "string"
          },
          "actionPlayId": {
            "type": "string"
          },
          "isPitch": {
            "type": "boolean",
            "writeOnly": true
          },
          "isInPlay": {
            "type": "boolean"
          },
          "isStrike": {
            "type": "boolean"
          },
          "isBall": {
            "type": "boolean"
          },
          "event": {
            "type": "string"
          },
          "eventMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "umpire": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "replacedPlayer": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "position": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "battingOrder": {
            "type": "string"
          },
          "scored": {
            "type": "boolean"
          },
          "isOut": {
            "type": "boolean"
          },
          "awayScore": {
            "type": "integer",
            "format": "int32"
          },
          "homeScore": {
            "type": "integer",
            "format": "int32"
          },
          "isAtBat": {
            "type": "boolean"
          },
          "isPlateAppearance": {
            "type": "boolean"
          },
          "isBaseHit": {
            "type": "boolean"
          },
          "pitchHand": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "batSide": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "hasReview": {
            "type": "boolean"
          },
          "reviewType": {
            "type": "string"
          },
          "reviewOverturned": {
            "type": "boolean"
          },
          "reviewInProgress": {
            "type": "boolean"
          },
          "challengeTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballReview"
            }
          },
          "fromCatcher": {
            "type": "boolean"
          },
          "injuryType": {
            "type": "string"
          },
          "players": {
            "$ref": "#/components/schemas/BaseballLinescore"
          },
          "defensiveAlignmentId": {
            "type": "string"
          },
          "offensiveAlignmentId": {
            "type": "string"
          },
          "offensiveLineupId": {
            "type": "string"
          },
          "defensiveLineupId": {
            "type": "string"
          },
          "umpires": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Official"
            }
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayCredit"
            }
          },
          "base": {
            "type": "integer",
            "format": "int32"
          },
          "isDoublePlay": {
            "type": "boolean",
            "writeOnly": true
          },
          "numInheritedRunners": {
            "type": "integer",
            "format": "int32"
          },
          "disengagementNum": {
            "type": "integer",
            "format": "int32"
          },
          "violation": {
            "$ref": "#/components/schemas/BaseballViolation"
          },
          "numberOfPeopleOnBaseScoringPosition": {
            "type": "integer",
            "format": "int32"
          },
          "descriptions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "events": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "runnerGoing": {
            "type": "boolean"
          },
          "summary": {
            "$ref": "#/components/schemas/BaseballPlayEvent"
          },
          "numberOfPeopleOnBase": {
            "type": "integer",
            "format": "int32"
          },
          "doublePlay": {
            "type": "boolean"
          },
          "baseRunningPlay": {
            "type": "boolean"
          },
          "substitution": {
            "type": "boolean"
          }
        }
      },
      "BaseballPlayEventRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/Details"
          },
          "count": {
            "$ref": "#/components/schemas/Count"
          },
          "postCount": {
            "$ref": "#/components/schemas/Count"
          },
          "preCount": {
            "$ref": "#/components/schemas/Count"
          },
          "pitchData": {
            "$ref": "#/components/schemas/BaseballPitchDataRestObject"
          },
          "hitData": {
            "$ref": "#/components/schemas/BaseballHitDataRestObject"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "pfxId": {
            "type": "string"
          },
          "playId": {
            "type": "string"
          },
          "actionPlayId": {
            "type": "string"
          },
          "pitchNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pickoffNumber": {
            "type": "integer",
            "format": "int32"
          },
          "atBatNumber": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "isPitch": {
            "type": "boolean"
          },
          "isBaseRunningPlay": {
            "type": "boolean"
          },
          "isSubstitution": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "umpire": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "position": {
            "$ref": "#/components/schemas/PositionRestObject"
          },
          "battingOrder": {
            "type": "string"
          },
          "replacedPlayer": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "base": {
            "type": "integer",
            "format": "int32"
          },
          "injuryType": {
            "type": "string"
          },
          "defense": {
            "$ref": "#/components/schemas/BaseballDefenseRestObject"
          },
          "offense": {
            "$ref": "#/components/schemas/BaseballOffenseRestObject"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayCreditRestObject"
            }
          },
          "officials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficialRestObject"
            }
          },
          "reviewDetails": {
            "$ref": "#/components/schemas/ReviewDetails"
          }
        }
      },
      "BaseballPlayRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          },
          "about": {
            "$ref": "#/components/schemas/About"
          },
          "count": {
            "$ref": "#/components/schemas/Count"
          },
          "matchup": {
            "$ref": "#/components/schemas/Matchup"
          },
          "pitchIndex": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "actionIndex": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "runnerIndex": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "runners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RunnerMovement"
            }
          },
          "playEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPlayEventRestObject"
            }
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayCreditRestObject"
            }
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayCreditRestObject"
            }
          },
          "reviewDetails": {
            "$ref": "#/components/schemas/ReviewDetails"
          },
          "playEndTime": {
            "type": "string",
            "format": "date-time"
          },
          "atBatIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BaseballPosition": {
        "type": "string",
        "enum": [
          "PITCHER",
          "CATCHER",
          "FIRST_BASE",
          "SECOND_BASE",
          "THIRD_BASE",
          "SHORTSTOP",
          "LEFT_FIELD",
          "CENTER_FIELD",
          "RIGHT_FIELD",
          "DESIGNATED_HITTER",
          "PINCH_HITTER",
          "PINCH_RUNNER",
          "EXTRA_HITTER",
          "BASE_RUNNER",
          "OUTFIELD",
          "INFIELD",
          "STARTING_PITCHER",
          "RELIEF_PITCHER",
          "CLOSER",
          "UTLITY",
          "UTLITY_INFIELDER",
          "UTLITY_OUTFIELDER",
          "RIGHT_HANDED_PITCHER",
          "LEFT_HANDED_PITCHER",
          "RIGHT_HANDED_STARTER",
          "LEFT_HANDED_STARTER",
          "LEFT_HANDED_RELIEVER",
          "RIGHT_HANDED_RELIEVER",
          "TWO_WAY_PITCHER_INFIELDER",
          "TWO_WAY_PITCHER_OUTFIELDER",
          "TWO_WAY_PITCHER_UTILITY",
          "TWO_WAY_PLAYER",
          "BATTER",
          "UNKNOWN",
          "RUNNER_ON_FIRST",
          "RUNNER_ON_SECOND",
          "RUNNER_ON_THIRD"
        ]
      },
      "BaseballReview": {
        "type": "object",
        "properties": {
          "reviewType": {
            "type": "string"
          },
          "reviewOverturned": {
            "type": "boolean"
          },
          "challengeTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "reviewInProgress": {
            "type": "boolean"
          }
        }
      },
      "BaseballReviewRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hasChallenges": {
            "type": "boolean"
          },
          "reason": {
            "type": "string"
          },
          "away": {
            "$ref": "#/components/schemas/BaseballTeamReview"
          },
          "home": {
            "$ref": "#/components/schemas/BaseballTeamReview"
          },
          "challengingTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          }
        }
      },
      "BaseballRoster": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "rosterType": {
            "$ref": "#/components/schemas/RosterType"
          },
          "roster": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballRosterEntry"
            }
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "hydratedPeople": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballRosterEntry": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "person": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "jerseyNumber": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "stats": {
            "$ref": "#/components/schemas/BaseballStats"
          },
          "seasonStats": {
            "$ref": "#/components/schemas/BaseballStats"
          },
          "captain": {
            "type": "boolean"
          },
          "alternateCaptain": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "job": {
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "parentTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "isActive": {
            "type": "boolean"
          },
          "isActiveFortyMan": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "statusDate": {
            "type": "string",
            "format": "date"
          },
          "allPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPosition"
            }
          },
          "battingOrder": {
            "type": "string"
          },
          "pitchingOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isCurrentBatter": {
            "type": "boolean"
          },
          "isCurrentPitcher": {
            "type": "boolean"
          },
          "isOnBench": {
            "type": "boolean"
          },
          "isSubstitute": {
            "type": "boolean"
          },
          "classId": {
            "type": "integer",
            "format": "int32"
          },
          "sportId": {
            "type": "integer",
            "format": "int32"
          },
          "season": {
            "type": "string"
          },
          "qualifiedForGamePitched": {
            "type": "boolean"
          },
          "statContainer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatContainer"
            }
          },
          "hydratedRosterEntriesTeam": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballRosterEntryRestObject": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "jerseyNumber": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/PositionRestObject"
          },
          "alternateCaptain": {
            "type": "boolean"
          },
          "captain": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "job": {
            "type": "string"
          },
          "jobId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "parentTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "isActive": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "statusDate": {
            "type": "string",
            "format": "date"
          },
          "isActiveFortyMan": {
            "type": "boolean"
          },
          "battingOrder": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/StatsRestObject"
          },
          "seasonStats": {
            "$ref": "#/components/schemas/StatsRestObject"
          },
          "gameStatus": {
            "$ref": "#/components/schemas/GameStatusRestObject"
          },
          "allPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionRestObject"
            }
          }
        }
      },
      "BaseballRunnerMovement": {
        "type": "object",
        "properties": {
          "startBase": {
            "type": "string"
          },
          "endBase": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "eventTypeEnum": {
            "$ref": "#/components/schemas/EventType"
          },
          "runner": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "responsiblePitcher": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "isScoringEvent": {
            "type": "boolean",
            "writeOnly": true
          },
          "isRbi": {
            "type": "boolean",
            "writeOnly": true
          },
          "isEarned": {
            "type": "boolean",
            "writeOnly": true
          },
          "playIndex": {
            "type": "integer",
            "format": "int32"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "outNumber": {
            "type": "integer",
            "format": "int32"
          },
          "outBase": {
            "type": "string"
          },
          "movementReason": {
            "type": "string"
          },
          "movementReasonEnum": {
            "$ref": "#/components/schemas/RunnerDetailType"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayCredit"
            }
          },
          "originBase": {
            "type": "integer",
            "format": "int32"
          },
          "startBaseInt": {
            "type": "integer",
            "format": "int32"
          },
          "endBaseInt": {
            "type": "integer",
            "format": "int32"
          },
          "out": {
            "type": "boolean"
          },
          "scoringEvent": {
            "type": "boolean"
          },
          "teamUnearned": {
            "type": "boolean"
          },
          "events": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "rbi": {
            "type": "boolean"
          },
          "earned": {
            "type": "boolean"
          }
        }
      },
      "BaseballSchedule": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballScheduleItem"
            }
          },
          "refreshInterval": {
            "type": "integer",
            "format": "int32"
          },
          "includeSiteBroadcasts": {
            "type": "boolean",
            "writeOnly": true
          },
          "includeEventTickets": {
            "type": "boolean",
            "writeOnly": true
          },
          "gameTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameTypeEnum"
            }
          },
          "scheduleEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEvent"
            }
          },
          "abschallenges": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "challenges": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "flags": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "teamsWithGames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "scheduleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballScheduleItem"
            }
          },
          "homeRuns": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "alerts": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "baseballSchedule": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/BaseballScheduleItem"
            }
          },
          "hydratedStats": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedPeople": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "previousPlay": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedTeamLeadersInPreview": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedTeamLeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "probablePitchersNotes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedProbablePitchers": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "liveLookins": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "baseballLineups": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "probableOfficials": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedTeamsAsString": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedVenuesAsString": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedEventVenuesAsString": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedEventDivisionsAsString": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedEventLeaguesAsString": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedEventSportsAsString": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "gamePreviewStoryLegacy": {
            "$ref": "#/components/schemas/BaseballScheduleItem"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballScheduleItem": {
        "type": "object",
        "properties": {
          "calendarEventId": {
            "type": "string"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "gameDate": {
            "type": "string",
            "format": "date-time"
          },
          "officialDate": {
            "type": "string",
            "format": "date"
          },
          "calendarDate": {
            "type": "string",
            "format": "date"
          },
          "unmodifiedCalendarDate": {
            "type": "string",
            "format": "date"
          },
          "resumeGameDate": {
            "type": "string",
            "format": "date"
          },
          "resumeDate": {
            "type": "string",
            "format": "date-time"
          },
          "resumedFromDate": {
            "type": "string",
            "format": "date"
          },
          "resumedFrom": {
            "type": "string",
            "format": "date-time"
          },
          "rescheduleGameDate": {
            "type": "string",
            "format": "date"
          },
          "rescheduleDate": {
            "type": "string",
            "format": "date-time"
          },
          "rescheduledFromDate": {
            "type": "string",
            "format": "date"
          },
          "rescheduledFrom": {
            "type": "string",
            "format": "date-time"
          },
          "season": {
            "type": "string"
          },
          "statusInd": {
            "type": "string"
          },
          "gameNumber": {
            "type": "integer",
            "format": "int32"
          },
          "gameStatus": {
            "$ref": "#/components/schemas/IGameStatus"
          },
          "awayTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "homeTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "venue": {
            "$ref": "#/components/schemas/Venue"
          },
          "resumeVenue": {
            "$ref": "#/components/schemas/Venue"
          },
          "resumedFromVenue": {
            "$ref": "#/components/schemas/Venue"
          },
          "cms": {
            "$ref": "#/components/schemas/GameCms"
          },
          "awayScore": {
            "type": "integer",
            "format": "int32"
          },
          "homeScore": {
            "type": "integer",
            "format": "int32"
          },
          "awayWins": {
            "type": "integer",
            "format": "int32"
          },
          "awayLosses": {
            "type": "integer",
            "format": "int32"
          },
          "awayOvertimeLosses": {
            "type": "integer",
            "format": "int32"
          },
          "awayTies": {
            "type": "integer",
            "format": "int32"
          },
          "awayIsWinner": {
            "type": "boolean"
          },
          "homeWins": {
            "type": "integer",
            "format": "int32"
          },
          "homeLosses": {
            "type": "integer",
            "format": "int32"
          },
          "postseasonSeries": {
            "$ref": "#/components/schemas/PostseasonSeries"
          },
          "homeOvertimeLosses": {
            "type": "integer",
            "format": "int32"
          },
          "homeTies": {
            "type": "integer",
            "format": "int32"
          },
          "homeIsWinner": {
            "type": "boolean"
          },
          "isTie": {
            "type": "boolean",
            "writeOnly": true
          },
          "linescore": {
            "$ref": "#/components/schemas/BaseballLinescore"
          },
          "decisions": {
            "$ref": "#/components/schemas/BaseballDecision"
          },
          "scoringPlays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPlay"
            }
          },
          "broadcasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameDateBroadcast"
            }
          },
          "radioBroadcasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameDateBroadcast"
            }
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "isDefaultGame": {
            "type": "boolean"
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotion"
            }
          },
          "atBatPromotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotion"
            }
          },
          "sponsorships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Promotion"
            }
          },
          "officials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Official"
            }
          },
          "pregameOfficials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Official"
            }
          },
          "weather": {
            "$ref": "#/components/schemas/Weather"
          },
          "gameInfo": {
            "$ref": "#/components/schemas/GameTO"
          },
          "publicFacing": {
            "$ref": "#/components/schemas/PublicFacingEnum"
          },
          "story": {
            "$ref": "#/components/schemas/GameStory"
          },
          "trackingVersion": {
            "$ref": "#/components/schemas/TrackingVersion"
          },
          "trackingSystemOwner": {
            "$ref": "#/components/schemas/TrackingSystemOwner"
          },
          "coachingVideo": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSourceType"
            }
          },
          "atBatTicketLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicket"
            }
          },
          "seriesStatus": {
            "$ref": "#/components/schemas/SeriesStatus"
          },
          "sortNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isFeaturedGame": {
            "type": "boolean"
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefId"
            }
          },
          "gameId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "seriesDescription": {
            "type": "string"
          },
          "doubleHeader": {
            "type": "string"
          },
          "gamedayType": {
            "type": "string"
          },
          "tiebreaker": {
            "type": "string"
          },
          "scheduledInnings": {
            "type": "integer",
            "format": "int32"
          },
          "inningBreakLength": {
            "type": "integer",
            "format": "int32"
          },
          "gamesInSeries": {
            "type": "integer",
            "format": "int32"
          },
          "seriesGameNumber": {
            "type": "integer",
            "format": "int32"
          },
          "editorialGameType": {
            "type": "string"
          },
          "editorialSeason": {
            "type": "string"
          },
          "localTime": {
            "type": "string"
          },
          "localAmPm": {
            "type": "string"
          },
          "localDate": {
            "type": "string",
            "format": "date"
          },
          "awayGamesBack": {
            "type": "string"
          },
          "awayWildCardGamesBack": {
            "type": "string"
          },
          "awaySplitSquad": {
            "type": "boolean"
          },
          "awaySeriesNumber": {
            "type": "integer",
            "format": "int32"
          },
          "recordSource": {
            "type": "string"
          },
          "ifNecessary": {
            "type": "string"
          },
          "ifNecessaryDescription": {
            "type": "string"
          },
          "homeGamesBack": {
            "type": "string"
          },
          "homeWildCardGamesBack": {
            "type": "string"
          },
          "homeSplitSquad": {
            "type": "boolean"
          },
          "homeSeriesNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isNightGame": {
            "type": "boolean",
            "writeOnly": true
          },
          "awayProbable": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "homeProbable": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "challenge": {
            "$ref": "#/components/schemas/BaseballChallenge"
          },
          "absChallenge": {
            "$ref": "#/components/schemas/BaseballABSChallenge"
          },
          "flags": {
            "$ref": "#/components/schemas/BaseballGameFlag"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballGameAlert"
            }
          },
          "liveLookin": {
            "$ref": "#/components/schemas/LiveLookin"
          },
          "sortTime": {
            "type": "string"
          },
          "sortTeam": {
            "type": "string"
          },
          "sortGameId": {
            "type": "string"
          },
          "sortGameNo": {
            "type": "string"
          },
          "previousPlay": {
            "$ref": "#/components/schemas/BaseballPlay"
          },
          "homeRuns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPlay"
            }
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicket"
            }
          },
          "atBatTickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicket"
            }
          },
          "sportId": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "string"
          },
          "homeLeagueId": {
            "type": "integer",
            "format": "int32"
          },
          "awayLeagueId": {
            "type": "integer",
            "format": "int32"
          },
          "baseballLineup": {
            "$ref": "#/components/schemas/BaseballLineup"
          },
          "doubleHeaderGameOneTime": {
            "type": "string",
            "format": "date-time"
          },
          "reverseHomeAwayStatus": {
            "type": "boolean"
          },
          "isDoNotSortAsDH": {
            "type": "boolean"
          },
          "statusFlags": {
            "$ref": "#/components/schemas/StatusFlags"
          },
          "gameGuid": {
            "type": "string"
          },
          "vendorWeatherForecast": {
            "$ref": "#/components/schemas/VendorWeatherForecast"
          },
          "cacheKey": {
            "type": "string"
          },
          "linescoreOverrides": {
            "$ref": "#/components/schemas/BaseballLinescore"
          },
          "postseasonSeriesId": {
            "type": "string"
          },
          "winningTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "tie": {
            "type": "boolean"
          },
          "hydratable": {
            "type": "boolean"
          },
          "nightGame": {
            "type": "boolean"
          },
          "losingTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "sortDate": {
            "type": "string",
            "format": "date-time"
          },
          "doubleHeaderTeamPairKey": {
            "type": "string"
          }
        }
      },
      "BaseballScheduleItemRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "gameGuid": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "gameType": {
            "type": "string"
          },
          "season": {
            "type": "string"
          },
          "gameDate": {
            "type": "string",
            "format": "date-time"
          },
          "officialDate": {
            "type": "string",
            "format": "date"
          },
          "resumeDate": {
            "type": "string",
            "format": "date-time"
          },
          "resumeGameDate": {
            "type": "string",
            "format": "date"
          },
          "resumedFrom": {
            "type": "string",
            "format": "date-time"
          },
          "resumedFromDate": {
            "type": "string",
            "format": "date"
          },
          "rescheduleDate": {
            "type": "string",
            "format": "date-time"
          },
          "rescheduleGameDate": {
            "type": "string",
            "format": "date"
          },
          "rescheduledFrom": {
            "type": "string",
            "format": "date-time"
          },
          "rescheduledFromDate": {
            "type": "string",
            "format": "date"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/GameStatusRestObject"
          },
          "teams": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BaseballScheduleItemTeamRestObject"
            }
          },
          "linescore": {
            "$ref": "#/components/schemas/BaseballLinescoreRestObject"
          },
          "decisions": {
            "$ref": "#/components/schemas/BaseballDecisionRestObject"
          },
          "scoringPlays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPlayRestObject"
            }
          },
          "venue": {
            "$ref": "#/components/schemas/VenueRestObject"
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicketRestObject"
            }
          },
          "atBatTickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicketRestObject"
            }
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionRestObject"
            }
          },
          "atBatPromotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionRestObject"
            }
          },
          "sponsorships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionRestObject"
            }
          },
          "broadcasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameDateBroadcastRestObject"
            }
          },
          "radioBroadcasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameDateBroadcastRestObject"
            }
          },
          "content": {
            "$ref": "#/components/schemas/GameContentRestObject"
          },
          "seriesStatus": {
            "$ref": "#/components/schemas/SeriesStatusRestObject"
          },
          "isDefaultGame": {
            "type": "boolean"
          },
          "sortNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isTie": {
            "type": "boolean"
          },
          "isFeaturedGame": {
            "type": "boolean"
          },
          "officials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficialRestObject"
            }
          },
          "pregameOfficials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficialRestObject"
            }
          },
          "weather": {
            "$ref": "#/components/schemas/WeatherRestObject"
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefIdRestObject"
            }
          },
          "gameInfo": {
            "$ref": "#/components/schemas/GameInfoRestObject"
          },
          "gameNumber": {
            "type": "integer",
            "format": "int32"
          },
          "publicFacing": {
            "type": "boolean"
          },
          "story": {
            "$ref": "#/components/schemas/GameStoryRestObject"
          },
          "weatherForecast": {
            "$ref": "#/components/schemas/VendorWeatherForecastRestObject"
          },
          "ruleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettingsRestObject"
            }
          },
          "trackingVersion": {
            "$ref": "#/components/schemas/TrackingVersionRestObject"
          },
          "coachingVideo": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "doubleHeader": {
            "type": "string"
          },
          "gamedayType": {
            "type": "string"
          },
          "tiebreaker": {
            "type": "string"
          },
          "calendarEventID": {
            "type": "string"
          },
          "seasonDisplay": {
            "type": "string"
          },
          "dayNight": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "scheduledInnings": {
            "type": "integer",
            "format": "int32"
          },
          "reverseHomeAwayStatus": {
            "type": "boolean"
          },
          "inningBreakLength": {
            "type": "integer",
            "format": "int32"
          },
          "gamesInSeries": {
            "type": "integer",
            "format": "int32"
          },
          "seriesGameNumber": {
            "type": "integer",
            "format": "int32"
          },
          "seriesDescription": {
            "type": "string"
          },
          "review": {
            "$ref": "#/components/schemas/BaseballReviewRestObject"
          },
          "absChallenge": {
            "$ref": "#/components/schemas/BaseballABSChallengeRestObject"
          },
          "flags": {
            "$ref": "#/components/schemas/BaseballGameFlagRestObject"
          },
          "statusFlags": {
            "$ref": "#/components/schemas/StatusFlagsRestObject"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballGameAlertRestObject"
            }
          },
          "liveLookin": {
            "$ref": "#/components/schemas/BaseballGameLiveLookinRestObject"
          },
          "previousPlay": {
            "$ref": "#/components/schemas/BaseballPlayRestObject"
          },
          "homeRuns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPlayRestObject"
            }
          },
          "recordSource": {
            "type": "string"
          },
          "ifNecessary": {
            "type": "string"
          },
          "ifNecessaryDescription": {
            "type": "string"
          },
          "day": {
            "type": "string"
          },
          "gameId": {
            "type": "string"
          },
          "lineups": {
            "$ref": "#/components/schemas/BaseballLineupRestObject"
          }
        }
      },
      "BaseballScheduleItemTeamRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "leagueRecord": {
            "$ref": "#/components/schemas/WinLossRecordRestObject"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "isWinner": {
            "type": "boolean"
          },
          "probablePitcher": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "splitSquad": {
            "type": "boolean"
          },
          "seriesNumber": {
            "type": "integer",
            "format": "int32"
          },
          "seedNumber": {
            "type": "integer",
            "format": "int32"
          },
          "springLeague": {
            "$ref": "#/components/schemas/LeagueRestObject"
          }
        }
      },
      "BaseballStats": {
        "type": "object",
        "properties": {
          "allStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatContainer"
            }
          },
          "battingStats": {
            "$ref": "#/components/schemas/BattingData"
          },
          "pitchingStats": {
            "$ref": "#/components/schemas/PitchingData"
          },
          "fieldingStats": {
            "$ref": "#/components/schemas/FieldingData"
          },
          "gameStats": {
            "$ref": "#/components/schemas/GameStatData"
          },
          "teamStats": {
            "$ref": "#/components/schemas/TeamStatData"
          }
        }
      },
      "BaseballTeam": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "season": {
            "type": "integer",
            "format": "int32"
          },
          "strSeason": {
            "type": "string"
          },
          "venue": {
            "$ref": "#/components/schemas/Venue"
          },
          "springVenue": {
            "$ref": "#/components/schemas/Venue"
          },
          "teamCode": {
            "type": "string"
          },
          "fileCode": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "firstYearOfPlay": {
            "type": "string"
          },
          "teamName": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "placeholder": {
            "type": "boolean"
          },
          "roster": {
            "$ref": "#/components/schemas/BaseballRoster"
          },
          "nextGameSchedule": {
            "$ref": "#/components/schemas/BaseballSchedule"
          },
          "previousGameSchedule": {
            "$ref": "#/components/schemas/BaseballSchedule"
          },
          "nextSchedule": {
            "$ref": "#/components/schemas/BaseballSchedule"
          },
          "previousSchedule": {
            "$ref": "#/components/schemas/BaseballSchedule"
          },
          "content": {
            "$ref": "#/components/schemas/TeamContentCms"
          },
          "deviceProperties": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicket"
            }
          },
          "playoffInfo": {
            "$ref": "#/components/schemas/TeamPlayoffs"
          },
          "homeAway": {
            "type": "string"
          },
          "record": {
            "$ref": "#/components/schemas/BaseballTeamStandingsRecord"
          },
          "teamStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatContainer"
            }
          },
          "teamLeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Leaders"
            }
          },
          "otherTeamNames": {
            "$ref": "#/components/schemas/OtherTeamNames"
          },
          "socialMediaInfo": {
            "$ref": "#/components/schemas/SocialMediaInfo"
          },
          "twitter": {
            "type": "string"
          },
          "leagueId": {
            "type": "integer",
            "format": "int32"
          },
          "teamDesignation": {
            "$ref": "#/components/schemas/TeamDesignationEnum"
          },
          "parentOrgId": {
            "type": "integer",
            "format": "int32"
          },
          "parentOrgName": {
            "type": "string"
          },
          "seedNumber": {
            "type": "integer",
            "format": "int32"
          },
          "franchiseName": {
            "type": "string"
          },
          "clubName": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "springLeague": {
            "$ref": "#/components/schemas/League"
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefId"
            }
          },
          "allStarStatus": {
            "$ref": "#/components/schemas/AllStarEnum"
          },
          "teamSeq": {
            "type": "integer",
            "format": "int32"
          },
          "nameLanguageHistoryStart": {
            "type": "string",
            "format": "date"
          },
          "nameLanguageHistoryEnd": {
            "type": "string",
            "format": "date"
          },
          "cacheKey": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "division": {
            "$ref": "#/components/schemas/Division"
          },
          "conference": {
            "$ref": "#/components/schemas/Conference"
          },
          "hydratedSocial": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedDeviceProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedGamePromotionsAtBat": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedGamePromotions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedGameSponsorships": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedGameTickets": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedGameTicketsAtBat": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "franchise": {
            "$ref": "#/components/schemas/Franchise"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "BaseballTeamRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "springLeague": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefIdRestObject"
            }
          },
          "allStarStatus": {
            "$ref": "#/components/schemas/AllStarEnum"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "season": {
            "type": "integer",
            "format": "int32"
          },
          "venue": {
            "$ref": "#/components/schemas/VenueRestObject"
          },
          "springVenue": {
            "$ref": "#/components/schemas/VenueRestObject"
          },
          "teamCode": {
            "type": "string"
          },
          "fileCode": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "triCode": {
            "type": "string"
          },
          "teamName": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "firstYearOfPlay": {
            "type": "string"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "division": {
            "$ref": "#/components/schemas/DivisionRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "conference": {
            "$ref": "#/components/schemas/ConferenceRestObject"
          },
          "franchise": {
            "$ref": "#/components/schemas/FranchiseRestObject"
          },
          "teamStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatContainerRestObject"
            }
          },
          "roster": {
            "$ref": "#/components/schemas/RosterRestObject"
          },
          "teamLeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadersRestObject"
            }
          },
          "nextGameSchedule": {
            "$ref": "#/components/schemas/ScheduleRestObject"
          },
          "previousGameSchedule": {
            "$ref": "#/components/schemas/ScheduleRestObject"
          },
          "nextSchedule": {
            "$ref": "#/components/schemas/ScheduleRestObject"
          },
          "previousSchedule": {
            "$ref": "#/components/schemas/ScheduleRestObject"
          },
          "content": {
            "$ref": "#/components/schemas/TeamContentCms"
          },
          "deviceProperties": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "social": {
            "$ref": "#/components/schemas/SocialMediaRestObject"
          },
          "shortName": {
            "type": "string"
          },
          "record": {
            "$ref": "#/components/schemas/TeamStandingsRecordRestObject"
          },
          "playoffInfo": {
            "$ref": "#/components/schemas/TeamPlayoffs"
          },
          "homeAway": {
            "type": "string"
          },
          "teamDesignation": {
            "type": "string"
          },
          "parentOrgName": {
            "type": "string"
          },
          "parentOrgId": {
            "type": "integer",
            "format": "int32"
          },
          "franchiseName": {
            "type": "string"
          },
          "clubName": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/LocationRestObject"
          },
          "active": {
            "type": "boolean"
          },
          "placeholder": {
            "type": "boolean"
          }
        }
      },
      "BaseballTeamReview": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "usedSuccessful": {
            "type": "integer",
            "format": "int32"
          },
          "usedFailed": {
            "type": "integer",
            "format": "int32"
          },
          "remaining": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BaseballTeamStandingsRecord": {
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "wins": {
            "type": "integer",
            "format": "int32"
          },
          "losses": {
            "type": "integer",
            "format": "int32"
          },
          "ties": {
            "type": "integer",
            "format": "int32"
          },
          "gamesBack": {
            "type": "string"
          },
          "wildCardGamesBack": {
            "type": "string"
          },
          "leagueGamesBack": {
            "type": "string"
          },
          "springLeagueGamesBack": {
            "type": "string"
          },
          "sportGamesBack": {
            "type": "string"
          },
          "divisionGamesBack": {
            "type": "string"
          },
          "conferenceGamesBack": {
            "type": "string"
          },
          "divisionChamp": {
            "type": "boolean"
          },
          "season": {
            "type": "string"
          },
          "streak": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "home": {
            "type": "string"
          },
          "away": {
            "type": "string"
          },
          "lastTen": {
            "type": "string"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "clinchIndicator": {
            "type": "string"
          },
          "divisionRank": {
            "type": "string"
          },
          "conferenceRank": {
            "type": "string"
          },
          "springLeagueRank": {
            "type": "string"
          },
          "leagueRank": {
            "type": "string"
          },
          "sportRank": {
            "type": "string"
          },
          "wildCardRank": {
            "type": "string"
          },
          "gamesPlayed": {
            "type": "integer",
            "format": "int32"
          },
          "place": {
            "type": "integer",
            "format": "int32"
          },
          "wildcardPlace": {
            "type": "integer",
            "format": "int32"
          },
          "wildcardOdds": {
            "type": "number",
            "format": "double"
          },
          "divisionOdds": {
            "type": "number",
            "format": "double"
          },
          "playoffOdds": {
            "type": "number",
            "format": "double"
          },
          "runsAllowed": {
            "type": "integer",
            "format": "int32"
          },
          "runsScored": {
            "type": "integer",
            "format": "int32"
          },
          "hasWildcard": {
            "type": "boolean"
          },
          "clinched": {
            "type": "boolean"
          },
          "eliminationNumber": {
            "type": "string"
          },
          "eliminationNumberSport": {
            "type": "string"
          },
          "eliminationNumberLeague": {
            "type": "string"
          },
          "eliminationNumberDivision": {
            "type": "string"
          },
          "eliminationNumberConference": {
            "type": "string"
          },
          "eliminationNumberWildcard": {
            "type": "string"
          },
          "magicNumber": {
            "type": "string"
          },
          "hasPlayoffPoints": {
            "type": "boolean"
          },
          "vsWest": {
            "type": "string"
          },
          "vsCentral": {
            "type": "string"
          },
          "vsEast": {
            "type": "string"
          },
          "vsInterleague": {
            "type": "string"
          },
          "vsRight": {
            "type": "string"
          },
          "vsRightHomeWin": {
            "type": "string"
          },
          "vsRightHomeLoss": {
            "type": "string"
          },
          "vsRightAwayWin": {
            "type": "string"
          },
          "vsRightAwayLoss": {
            "type": "string"
          },
          "vsLeft": {
            "type": "string"
          },
          "vsLeftHomeWin": {
            "type": "string"
          },
          "vsLeftHomeLoss": {
            "type": "string"
          },
          "vsLeftAwayWin": {
            "type": "string"
          },
          "vsLeftAwayLoss": {
            "type": "string"
          },
          "vsWinners": {
            "type": "string"
          },
          "extraInnings": {
            "type": "string"
          },
          "expectedWinLoss": {
            "type": "string"
          },
          "expectedWinLossSeason": {
            "type": "string"
          },
          "oneRunGames": {
            "type": "string"
          },
          "turf": {
            "type": "string"
          },
          "grass": {
            "type": "string"
          },
          "night": {
            "type": "string"
          },
          "day": {
            "type": "string"
          },
          "isWildCardTeam": {
            "type": "boolean",
            "writeOnly": true
          },
          "isDivisionLeader": {
            "type": "boolean",
            "writeOnly": true
          },
          "divisionRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinLossRecord"
            }
          },
          "conferenceRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinLossRecord"
            }
          },
          "leagueRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinLossRecord"
            }
          },
          "splitRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinLossRecord"
            }
          },
          "expectedRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinLossRecord"
            }
          },
          "overallRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WinLossRecord"
            }
          },
          "conference": {
            "$ref": "#/components/schemas/Conference"
          },
          "runDifferental": {
            "type": "integer",
            "format": "int32"
          },
          "wildCardLeader": {
            "type": "boolean"
          },
          "winningPercentage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BaseballTicket": {
        "type": "object",
        "properties": {
          "ticketType": {
            "type": "string"
          },
          "ticketLink": {
            "type": "string"
          },
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "onSaleEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "homeTicketLink": {
            "type": "string"
          },
          "awayTicketLink": {
            "type": "string"
          }
        }
      },
      "BaseballTicketRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "ticketType": {
            "type": "string"
          },
          "ticketLink": {
            "type": "string"
          },
          "ticketLinks": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BaseballViolation": {
        "type": "object",
        "properties": {
          "violationType": {
            "type": "string"
          },
          "violationSubType": {
            "type": "string"
          },
          "violationDescription": {
            "type": "string"
          },
          "violationPlayer": {
            "$ref": "#/components/schemas/BaseballPerson"
          }
        }
      },
      "BatterDetailType": {
        "type": "string",
        "enum": [
          "AT_BAT",
          "AT_BAT_SCORING_POSITION",
          "SINGLE",
          "DOUBLE",
          "TRIPLE",
          "GAME",
          "CATCHER_INTERFERENCE",
          "HOME_RUN",
          "STRIKEOUT",
          "WALK",
          "INTENT_WALK",
          "RUN",
          "RBI",
          "HITS_SCORING_POSIITION",
          "HIT_BY_PITCH",
          "INFIELD_FLY",
          "FAN_INTERFERENCE",
          "BATTER_INTERFERENCE",
          "GROUND_RULE_DOUBLE",
          "INSIDE_THE_PARK_HOME_RUN",
          "FOUL_OUT",
          "LEFT_ON_BASE",
          "LEFT_ON_BASE_SCORING_POSITION",
          "TEAM_LEFT_ON_BASE",
          "TEAM_LEFT_ON_BASE_SCORING_POSITION",
          "SAC_FLY",
          "SAC_BUNT",
          "FLY_OUT",
          "GROUND_OUT",
          "STOLEN_BASE_2B",
          "STOLEN_BASE_3B",
          "STOLEN_BASE_HP",
          "CAUGHT_STEALING_2B",
          "CAUGHT_STEALING_3B",
          "CAUGHT_STEALING_HP",
          "PICKOFF_1B",
          "PICKOFF_2B",
          "PICKOFF_3B",
          "GROUND_INTO_DOUBLE_PLAY",
          "GROUND_INTO_TRIPLE_PLAY",
          "REACH_ON_ERROR",
          "PINCH_HIT",
          "REACHED_ON_INTERFERENCE",
          "PLATE_APPEARANCE",
          "UNKNOWN"
        ]
      },
      "BattingData": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "note": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "catchersInterference": {
            "type": "integer",
            "format": "int32"
          },
          "average": {
            "type": "string"
          },
          "onBasePercentage": {
            "type": "string"
          },
          "onBasePlusSlugging": {
            "type": "string"
          },
          "stolenBases": {
            "type": "integer",
            "format": "int32"
          },
          "caughtStealing": {
            "type": "integer",
            "format": "int32"
          },
          "slugging": {
            "type": "string"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "gidp": {
            "type": "integer",
            "format": "int32"
          },
          "gitp": {
            "type": "integer",
            "format": "int32"
          },
          "homeRuns": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPitches": {
            "type": "integer",
            "format": "int32"
          },
          "totalBases": {
            "type": "integer",
            "format": "int32"
          },
          "gidpOpportunites": {
            "type": "integer",
            "format": "int32"
          },
          "walks": {
            "type": "integer",
            "format": "int32"
          },
          "hitByPitch": {
            "type": "integer",
            "format": "int32"
          },
          "strikeouts": {
            "type": "integer",
            "format": "int32"
          },
          "airOuts": {
            "type": "integer",
            "format": "int32"
          },
          "goAo": {
            "type": "string"
          },
          "pitchesPerPlateAppearance": {
            "type": "number",
            "format": "double"
          },
          "intentionalWalks": {
            "type": "integer",
            "format": "int32"
          },
          "groundOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyOuts": {
            "type": "integer",
            "format": "int32"
          },
          "games": {
            "type": "integer",
            "format": "int32"
          },
          "gamesStarted": {
            "type": "integer",
            "format": "int32"
          },
          "doubles": {
            "type": "integer",
            "format": "int32"
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "triples": {
            "type": "integer",
            "format": "int32"
          },
          "singles": {
            "type": "integer",
            "format": "int32"
          },
          "runs": {
            "type": "integer",
            "format": "int32"
          },
          "atBats": {
            "type": "integer",
            "format": "int32"
          },
          "pickoffs": {
            "type": "integer",
            "format": "int32"
          },
          "stolenBasePercentage": {
            "type": "string"
          },
          "wildPitches": {
            "type": "integer",
            "format": "int32"
          },
          "sacFlies": {
            "type": "integer",
            "format": "int32"
          },
          "sacBunts": {
            "type": "integer",
            "format": "int32"
          },
          "putouts": {
            "type": "integer",
            "format": "int32"
          },
          "assists": {
            "type": "integer",
            "format": "int32"
          },
          "chances": {
            "type": "integer",
            "format": "int32"
          },
          "streak": {
            "type": "integer",
            "format": "int32"
          },
          "battingOrder": {
            "type": "string"
          },
          "totalSwings": {
            "type": "integer",
            "format": "int32"
          },
          "swingsAndMisses": {
            "type": "integer",
            "format": "int32"
          },
          "ballsInPlay": {
            "type": "integer",
            "format": "int32"
          },
          "popOuts": {
            "type": "integer",
            "format": "int32"
          },
          "lineOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyHits": {
            "type": "integer",
            "format": "int32"
          },
          "popHits": {
            "type": "integer",
            "format": "int32"
          },
          "lineHits": {
            "type": "integer",
            "format": "int32"
          },
          "groundHits": {
            "type": "integer",
            "format": "int32"
          },
          "gamesPlayedOnBothTeams": {
            "type": "integer",
            "format": "int32"
          },
          "babip": {
            "type": "string"
          },
          "plateAppearances": {
            "type": "integer",
            "format": "int32"
          },
          "runsBattedIn": {
            "type": "integer",
            "format": "int32"
          },
          "leftOnBase": {
            "type": "integer",
            "format": "int32"
          },
          "extraBaseHits": {
            "type": "integer",
            "format": "int32"
          },
          "atBatsPerHomeRun": {
            "type": "string"
          },
          "atBatsPerHomeRunOrNull": {
            "type": "string"
          },
          "pitchesPerPlateAppearanceStr": {
            "type": "string"
          },
          "stolenBasePercentageOrNull": {
            "type": "string"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "Breaks": {
        "type": "object",
        "properties": {
          "breakAngle": {
            "type": "number",
            "format": "double"
          },
          "breakLength": {
            "type": "number",
            "format": "double"
          },
          "breakX": {
            "type": "number",
            "format": "double"
          },
          "breakY": {
            "type": "number",
            "format": "double"
          },
          "breakVertical": {
            "type": "number",
            "format": "double"
          },
          "breakVerticalInduced": {
            "type": "number",
            "format": "double"
          },
          "breakHorizontal": {
            "type": "number",
            "format": "double"
          },
          "breakZ": {
            "type": "number",
            "format": "double"
          },
          "spinRate": {
            "type": "integer",
            "format": "int32"
          },
          "spinDirection": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BroadcastAvailability": {
        "type": "string",
        "enum": [
          "LOCAL_IN_MARKET",
          "LOCAL_OUT_OF_MARKET",
          "REGIONAL",
          "NATIONAL",
          "INTERNATIONAL",
          "GLOBAL",
          "EXCLUSIVE"
        ]
      },
      "BroadcastAvailabilityRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "availabilityId": {
            "type": "integer",
            "format": "int32"
          },
          "availabilityCode": {
            "type": "string"
          },
          "availabilityText": {
            "type": "string"
          }
        }
      },
      "Broadcaster": {
        "type": "object",
        "properties": {
          "broadcasterId": {
            "type": "integer",
            "format": "int32"
          },
          "broadcasterText": {
            "type": "string"
          },
          "broadcasterDesc": {
            "type": "string"
          },
          "callSign": {
            "type": "string"
          },
          "broadcasterTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "broadcasterTypeCode": {
            "type": "string"
          },
          "broadcasterTypeText": {
            "type": "string"
          },
          "broadcasterTypeDesc": {
            "type": "string"
          },
          "broadcasterComment": {
            "type": "string"
          },
          "primaryTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "broadcastAvailability": {
            "$ref": "#/components/schemas/BroadcastAvailability"
          },
          "activeStatus": {
            "type": "boolean"
          },
          "isNationalStatus": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "mvpdAuthBroadcast": {
            "type": "boolean"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          }
        }
      },
      "BroadcasterXrefId": {
        "type": "object",
        "properties": {
          "xrefId": {
            "type": "string"
          },
          "xrefType": {
            "type": "string"
          },
          "xrefIdTwo": {
            "type": "string"
          },
          "season": {
            "type": "string"
          },
          "broadcasterId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CalendarTypes": {
        "type": "string",
        "enum": ["PRIMARY", "SECONDARY", "TERTIARY"]
      },
      "Conference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "writeOnly": true
          }
        }
      },
      "ConferenceRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "ContentSummary": {
        "type": "object",
        "properties": {
          "hasPreviewArticle": {
            "type": "boolean"
          },
          "hasRecapArticle": {
            "type": "boolean"
          },
          "hasWrapArticle": {
            "type": "boolean"
          },
          "hasHighlightsVideo": {
            "type": "boolean"
          },
          "featuredMedia": {
            "$ref": "#/components/schemas/FeaturedMedia"
          }
        }
      },
      "CoordinateRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "Coordinates": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Count": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "balls": {
            "type": "integer",
            "format": "int32"
          },
          "strikes": {
            "type": "integer",
            "format": "int32"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "inning": {
            "type": "integer",
            "format": "int32"
          },
          "isTopInning": {
            "type": "boolean"
          },
          "runnerOn1b": {
            "type": "boolean"
          },
          "runnerOn2b": {
            "type": "boolean"
          },
          "runnerOn3b": {
            "type": "boolean"
          }
        }
      },
      "DepthChart": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "status": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "DepthChartRestObject": {
        "type": "object",
        "properties": {
          "position": {
            "$ref": "#/components/schemas/PositionRestObject"
          },
          "depth": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          }
        }
      },
      "Designation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "designation": {
            "$ref": "#/components/schemas/TeamDesignationEnum"
          }
        }
      },
      "DesignationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Details": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "call": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "description": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "ballColor": {
            "type": "string"
          },
          "trailColor": {
            "type": "string"
          },
          "isInPlay": {
            "type": "boolean"
          },
          "isStrike": {
            "type": "boolean"
          },
          "isBall": {
            "type": "boolean"
          },
          "isBaseHit": {
            "type": "boolean"
          },
          "isAtBat": {
            "type": "boolean"
          },
          "isPlateAppearance": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "awayScore": {
            "type": "integer",
            "format": "int32"
          },
          "homeScore": {
            "type": "integer",
            "format": "int32"
          },
          "isScoringPlay": {
            "type": "boolean"
          },
          "isOut": {
            "type": "boolean",
            "description": "Does the play event include an out?"
          },
          "hasReview": {
            "type": "boolean"
          },
          "fromCatcher": {
            "type": "boolean"
          },
          "runnerGoing": {
            "type": "boolean"
          },
          "batSide": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "pitchHand": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "disengagementNum": {
            "type": "integer",
            "format": "int32"
          },
          "violation": {
            "$ref": "#/components/schemas/ViolationRestObject"
          }
        }
      },
      "Division": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "writeOnly": true
          },
          "nameShort": {
            "type": "string"
          },
          "conferenceId": {
            "type": "integer",
            "format": "int32"
          },
          "conference": {
            "$ref": "#/components/schemas/Conference"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "sportCode": {
            "type": "string"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "abbreviation": {
            "type": "string"
          },
          "hasWildcard": {
            "type": "boolean"
          },
          "numPlayoffTeams": {
            "type": "integer",
            "format": "int32"
          },
          "season": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "hydratedConferences": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedLeagues": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "DivisionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "season": {
            "type": "string"
          },
          "nameShort": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "conference": {
            "$ref": "#/components/schemas/ConferenceRestObject"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "hasWildcard": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "numPlayoffTeams": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "DraftStatusEnum": {
        "type": "string",
        "enum": ["DRAFTED", "NOT_DRAFTED", "SKIPPED", "SELECTED", "NOT_SELECTED"]
      },
      "DraftTypeEnum": {
        "type": "string",
        "enum": ["JR", "JS", "NS", "NR", "RV", "AL", "RA", "RT", "JD", "AD"]
      },
      "DraftTypeEnumRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Duration": {
        "type": "object",
        "properties": {
          "standardSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "standardDays": {
            "type": "integer",
            "format": "int64"
          },
          "standardHours": {
            "type": "integer",
            "format": "int64"
          },
          "standardMinutes": {
            "type": "integer",
            "format": "int64"
          },
          "millis": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DynamicEnumRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DynamicLookupEnum": {
        "type": "object",
        "properties": {
          "lookupType": {
            "type": "string"
          },
          "lookupKey": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "writeOnly": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Editorial": {
        "type": "object",
        "properties": {
          "probables": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "preview": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "recap": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "articles": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "wrap": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "EducationInfo": {
        "type": "object",
        "properties": {
          "highschools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/School"
            }
          },
          "colleges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/School"
            }
          }
        }
      },
      "EducationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "highschools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchoolRestObject"
            }
          },
          "colleges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchoolRestObject"
            }
          }
        }
      },
      "EventStatus": {
        "type": "object",
        "properties": {
          "startTimeTBD": {
            "type": "boolean"
          },
          "detailedState": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "abstractGameState": {
            "type": "string"
          }
        }
      },
      "EventType": {
        "type": "string",
        "enum": [
          "game_start",
          "game_finished",
          "ball",
          "intent_ball",
          "pitchout",
          "blocked_ball",
          "automatic_ball",
          "called_strike",
          "swinging_strike",
          "foul",
          "foul_tip",
          "foul_bunt",
          "bunt_foul_tip",
          "missed_bunt",
          "swinging_pitchout",
          "foul_pitchout",
          "swinging_strike_blocked",
          "unknown_strike",
          "automatic_strike",
          "hit_into_play",
          "hit_into_play_no_out",
          "hit_into_play_score",
          "pitchout_hit_into_play",
          "pitchout_hit_into_play_no_out",
          "pitchout_hit_into_play_score",
          "pickoff_attempt_1b",
          "pickoff_attempt_2b",
          "pickoff_attempt_3b",
          "pickoff_1b",
          "pickoff_2b",
          "pickoff_3b",
          "pitcher_step_off",
          "pickoff_error_1b",
          "pickoff_error_2b",
          "pickoff_error_3b",
          "batter_timeout",
          "mound_visit",
          "no_pitch",
          "single",
          "double",
          "triple",
          "home_run",
          "double_play",
          "field_error",
          "error",
          "field_out",
          "fielders_choice",
          "fielders_choice_out",
          "force_out",
          "grounded_into_double_play",
          "grounded_into_triple_play",
          "strikeout",
          "strike_out",
          "strikeout_double_play",
          "strikeout_triple_play",
          "triple_play",
          "sac_fly",
          "catcher_interf",
          "batter_interference",
          "fielder_interference",
          "runner_interference",
          "fan_interference",
          "run",
          "batter_turn",
          "ejection",
          "cs_double_play",
          "defensive_indiff",
          "sac_fly_double_play",
          "sac_bunt",
          "sac_bunt_double_play",
          "walk",
          "intent_walk",
          "hit_by_pitch",
          "play_by_play",
          "play_by_play_extra",
          "injury",
          "between_innings",
          "plate_appearance",
          "os_ruling_pending_prior",
          "os_ruling_pending_primary",
          "at_bat_start",
          "runner_movement",
          "passed_ball",
          "other_advance",
          "runner_double_play",
          "runner_placed",
          "left_on_base",
          "pitching_substitution",
          "relief_no_out",
          "offensive_substitution",
          "defensive_switch",
          "umpire_substitution",
          "pitcher_switch",
          "replay_manager",
          "replay_umpire",
          "pitch_challenge",
          "game_advisory",
          "stolen_base",
          "stolen_base_2b",
          "stolen_base_3b",
          "stolen_base_home",
          "caught_stealing",
          "caught_stealing_2b",
          "caught_stealing_3b",
          "caught_stealing_home",
          "defensive_substitution",
          "pickoff_caught_stealing_2b",
          "pickoff_caught_stealing_3b",
          "pickoff_caught_stealing_home",
          "balk",
          "forced_balk",
          "wild_pitch",
          "other_out",
          ""
        ]
      },
      "FeaturedMedia": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "turfType": {
            "type": "string"
          },
          "roofType": {
            "type": "string"
          },
          "leftLine": {
            "type": "integer",
            "format": "int32"
          },
          "left": {
            "type": "integer",
            "format": "int32"
          },
          "leftCenter": {
            "type": "integer",
            "format": "int32"
          },
          "center": {
            "type": "integer",
            "format": "int32"
          },
          "rightCenter": {
            "type": "integer",
            "format": "int32"
          },
          "right": {
            "type": "integer",
            "format": "int32"
          },
          "rightLine": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FieldInfoRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "turfType": {
            "type": "string"
          },
          "roofType": {
            "type": "string"
          },
          "leftLine": {
            "type": "integer",
            "format": "int32"
          },
          "left": {
            "type": "integer",
            "format": "int32"
          },
          "leftCenter": {
            "type": "integer",
            "format": "int32"
          },
          "center": {
            "type": "integer",
            "format": "int32"
          },
          "rightCenter": {
            "type": "integer",
            "format": "int32"
          },
          "right": {
            "type": "integer",
            "format": "int32"
          },
          "rightLine": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FielderDetailType": {
        "type": "string",
        "enum": [
          "ASSIST",
          "OUTFIELD_ASSIST",
          "PASSED_BALL",
          "FIELDED_BALL",
          "DEFLECTION",
          "OUT_NUMBER",
          "PUTOUT",
          "TOUCH",
          "ERROR",
          "FIELDING_ERROR",
          "FOUL_ERROR",
          "DROPPED_BALL_ERROR",
          "INTERFERENCE",
          "THROWING_ERROR",
          "CATCHER_INTERFERENCE",
          "STOLEN_BASE_2B",
          "STOLEN_BASE_3B",
          "STOLEN_BASE_HP",
          "CAUGHT_STEALING_2B",
          "CAUGHT_STEALING_3B",
          "CAUGHT_STEALING_HP",
          "PICKOFF_1B",
          "PICKOFF_2B",
          "PICKOFF_3B",
          "TEAM_ERROR",
          "TEAM_DOUBLE_PLAY",
          "TEAM_TRIPLE_PLAY",
          "UNKNOWN"
        ]
      },
      "FieldingData": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "note": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "catchersInterference": {
            "type": "integer",
            "format": "int32"
          },
          "average": {
            "type": "string"
          },
          "onBasePercentage": {
            "type": "string"
          },
          "onBasePlusSlugging": {
            "type": "string"
          },
          "stolenBases": {
            "type": "integer",
            "format": "int32"
          },
          "caughtStealing": {
            "type": "integer",
            "format": "int32"
          },
          "slugging": {
            "type": "string"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "gidp": {
            "type": "integer",
            "format": "int32"
          },
          "gitp": {
            "type": "integer",
            "format": "int32"
          },
          "homeRuns": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPitches": {
            "type": "integer",
            "format": "int32"
          },
          "totalBases": {
            "type": "integer",
            "format": "int32"
          },
          "gidpOpportunites": {
            "type": "integer",
            "format": "int32"
          },
          "walks": {
            "type": "integer",
            "format": "int32"
          },
          "hitByPitch": {
            "type": "integer",
            "format": "int32"
          },
          "strikeouts": {
            "type": "integer",
            "format": "int32"
          },
          "airOuts": {
            "type": "integer",
            "format": "int32"
          },
          "goAo": {
            "type": "string"
          },
          "pitchesPerPlateAppearance": {
            "type": "number",
            "format": "double"
          },
          "intentionalWalks": {
            "type": "integer",
            "format": "int32"
          },
          "groundOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyOuts": {
            "type": "integer",
            "format": "int32"
          },
          "games": {
            "type": "integer",
            "format": "int32"
          },
          "gamesStarted": {
            "type": "integer",
            "format": "int32"
          },
          "doubles": {
            "type": "integer",
            "format": "int32"
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "triples": {
            "type": "integer",
            "format": "int32"
          },
          "singles": {
            "type": "integer",
            "format": "int32"
          },
          "runs": {
            "type": "integer",
            "format": "int32"
          },
          "atBats": {
            "type": "integer",
            "format": "int32"
          },
          "pickoffs": {
            "type": "integer",
            "format": "int32"
          },
          "stolenBasePercentage": {
            "type": "string"
          },
          "wildPitches": {
            "type": "integer",
            "format": "int32"
          },
          "sacFlies": {
            "type": "integer",
            "format": "int32"
          },
          "sacBunts": {
            "type": "integer",
            "format": "int32"
          },
          "putouts": {
            "type": "integer",
            "format": "int32"
          },
          "assists": {
            "type": "integer",
            "format": "int32"
          },
          "chances": {
            "type": "integer",
            "format": "int32"
          },
          "streak": {
            "type": "integer",
            "format": "int32"
          },
          "battingOrder": {
            "type": "string"
          },
          "totalSwings": {
            "type": "integer",
            "format": "int32"
          },
          "swingsAndMisses": {
            "type": "integer",
            "format": "int32"
          },
          "ballsInPlay": {
            "type": "integer",
            "format": "int32"
          },
          "popOuts": {
            "type": "integer",
            "format": "int32"
          },
          "lineOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyHits": {
            "type": "integer",
            "format": "int32"
          },
          "popHits": {
            "type": "integer",
            "format": "int32"
          },
          "lineHits": {
            "type": "integer",
            "format": "int32"
          },
          "groundHits": {
            "type": "integer",
            "format": "int32"
          },
          "gamesPlayedOnBothTeams": {
            "type": "integer",
            "format": "int32"
          },
          "outfieldAssists": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "integer",
            "format": "int32"
          },
          "fieldingPercentage": {
            "type": "string"
          },
          "rangeFactorPerGame": {
            "type": "string"
          },
          "rangeFactorPer9Inn": {
            "type": "string"
          },
          "innings": {
            "type": "string"
          },
          "passedBall": {
            "type": "integer",
            "format": "int32"
          },
          "doublePlays": {
            "type": "integer",
            "format": "int32"
          },
          "triplePlays": {
            "type": "integer",
            "format": "int32"
          },
          "catcherERA": {
            "type": "string"
          },
          "throwingErrors": {
            "type": "integer",
            "format": "int32"
          },
          "uzr": {
            "type": "number",
            "format": "double"
          },
          "position": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "plateAppearances": {
            "type": "integer",
            "format": "int32"
          },
          "pitchesPerPlateAppearanceStr": {
            "type": "string"
          },
          "stolenBasePercentageOrNull": {
            "type": "string"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "Franchise": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "franchiseId": {
            "type": "integer",
            "format": "int32"
          },
          "firstSeasonId": {
            "type": "integer",
            "format": "int32"
          },
          "lastSeasonId": {
            "type": "integer",
            "format": "int32"
          },
          "mostRecentTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "teamName": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "teamIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "roster": {
            "$ref": "#/components/schemas/BaseballRoster"
          },
          "hydratedRosters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "FranchiseRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "franchiseId": {
            "type": "integer",
            "format": "int32"
          },
          "firstSeasonId": {
            "type": "integer",
            "format": "int32"
          },
          "lastSeasonId": {
            "type": "integer",
            "format": "int32"
          },
          "mostRecentTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "teamName": {
            "type": "string"
          },
          "locationName": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "roster": {
            "$ref": "#/components/schemas/RosterRestObject"
          }
        }
      },
      "FreeGameType": {
        "type": "object",
        "properties": {
          "freeGameTypeEnum": {
            "$ref": "#/components/schemas/FreeGameTypeEnum"
          },
          "onStatus": {
            "type": "boolean"
          }
        }
      },
      "FreeGameTypeEnum": {
        "type": "string",
        "enum": ["FREE_GAME_OF_THE_DAY", "FREE_GAME_EXTRA_INNINGS"]
      },
      "FreeGameTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "freeGameTypeCode": {
            "type": "string"
          },
          "freeGameTypeText": {
            "type": "string"
          },
          "freeGameTypeDesc": {
            "type": "string"
          },
          "freeGameTypeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FreeGameValueRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "freeGameType": {
            "$ref": "#/components/schemas/FreeGameTypeRestObject"
          },
          "status": {
            "type": "boolean"
          }
        }
      },
      "GameCms": {
        "type": "object",
        "properties": {
          "editorial": {
            "$ref": "#/components/schemas/Editorial"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "highlights": {
            "$ref": "#/components/schemas/Highlights"
          },
          "gameNotes": {
            "$ref": "#/components/schemas/GameNotes"
          },
          "contentSummary": {
            "$ref": "#/components/schemas/ContentSummary"
          },
          "lineup": {
            "$ref": "#/components/schemas/Lineup"
          }
        }
      },
      "GameContentRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "editorial": {
            "$ref": "#/components/schemas/GameEditorialRestObject"
          },
          "media": {
            "$ref": "#/components/schemas/GameMediaRestObject"
          },
          "highlights": {
            "$ref": "#/components/schemas/GameHighlightsRestObject"
          },
          "summary": {
            "$ref": "#/components/schemas/GameContentSummaryRestObject"
          },
          "gameNotes": {
            "$ref": "#/components/schemas/GameNotesRestObject"
          }
        }
      },
      "GameContentSummaryRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hasPreviewArticle": {
            "type": "boolean"
          },
          "hasRecapArticle": {
            "type": "boolean"
          },
          "hasWrapArticle": {
            "type": "boolean"
          },
          "hasHighlightsVideo": {
            "type": "boolean"
          }
        }
      },
      "GameDateBroadcast": {
        "type": "object",
        "properties": {
          "broadcaster": {
            "$ref": "#/components/schemas/Broadcaster"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "isNationalStatus": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "videoResolution": {
            "$ref": "#/components/schemas/VideoResolution"
          },
          "broadcastAvailability": {
            "$ref": "#/components/schemas/BroadcastAvailability"
          },
          "broadcastComment": {
            "type": "string"
          },
          "broadcastUrl": {
            "type": "string"
          },
          "xrefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BroadcasterXrefId"
            }
          },
          "mediaState": {
            "$ref": "#/components/schemas/MediaState"
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          },
          "broadcastDate": {
            "type": "string",
            "format": "date"
          },
          "gameDateBroadcastGuid": {
            "type": "string",
            "format": "uuid"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "homeAway": {
            "$ref": "#/components/schemas/TeamDesignationEnum"
          },
          "pregameShowTs": {
            "type": "string",
            "format": "date-time"
          },
          "postgameShowStatus": {
            "type": "boolean"
          },
          "streamingAvailabilityStatus": {
            "type": "boolean"
          },
          "freeGameStatus": {
            "type": "boolean"
          },
          "mvpdAuthBroadcastStatus": {
            "type": "boolean"
          },
          "freeGameOverallStatus": {
            "type": "boolean"
          },
          "freeGameTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeGameType"
            }
          }
        }
      },
      "GameDateBroadcastRestObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "site": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "copyright": {
            "type": "string"
          },
          "isNational": {
            "type": "boolean"
          },
          "sourceUrl": {
            "type": "string"
          },
          "callSign": {
            "type": "string"
          },
          "videoResolution": {
            "$ref": "#/components/schemas/VideoResolutionEnumRestObject"
          },
          "availability": {
            "$ref": "#/components/schemas/BroadcastAvailabilityRestObject"
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefIdRestObject"
            }
          },
          "sourceComment": {
            "type": "string"
          },
          "mediaState": {
            "$ref": "#/components/schemas/MediaStateRestObject"
          },
          "broadcastDate": {
            "type": "string",
            "format": "date"
          },
          "mediaId": {
            "type": "string"
          },
          "gameDateBroadcastGuid": {
            "type": "string"
          },
          "homeAway": {
            "type": "string"
          },
          "freeGame": {
            "type": "boolean"
          },
          "availableForStreaming": {
            "type": "boolean"
          },
          "preGameShow": {
            "type": "string",
            "format": "date-time"
          },
          "postGameShow": {
            "type": "boolean"
          },
          "mvpdAuthRequired": {
            "type": "boolean"
          },
          "freeGameStatus": {
            "type": "boolean"
          },
          "freeGameTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeGameValueRestObject"
            }
          }
        }
      },
      "GameEditorialRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "preview": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "articles": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "recap": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "wrap": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "GameEventDetailTO": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int32"
          },
          "homeAway": {
            "type": "string"
          },
          "eventId": {
            "type": "integer",
            "format": "int32"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "stat_name": {
            "type": "string"
          },
          "delta": {
            "type": "string"
          }
        }
      },
      "GameHighlightsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "scoreboard": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "gameCenter": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "milestone": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "highlights": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "live": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "scoreboardPreview": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "GameInfoRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "attendance": {
            "type": "integer",
            "format": "int32"
          },
          "firstPitch": {
            "type": "string",
            "format": "date-time"
          },
          "gameDurationMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "delayDurationMinutes": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameMediaRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "epg": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "epgAlternate": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "milestones": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "featuredMedia": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "freeGame": {
            "type": "boolean"
          },
          "enhancedGame": {
            "type": "boolean"
          },
          "previewStory": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "GameNotes": {
        "type": "object",
        "properties": {
          "notes": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "GameNotesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "notes": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "GameStatData": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "note": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "catchersInterference": {
            "type": "integer",
            "format": "int32"
          },
          "average": {
            "type": "string"
          },
          "onBasePercentage": {
            "type": "string"
          },
          "onBasePlusSlugging": {
            "type": "string"
          },
          "stolenBases": {
            "type": "integer",
            "format": "int32"
          },
          "caughtStealing": {
            "type": "integer",
            "format": "int32"
          },
          "slugging": {
            "type": "string"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "gidp": {
            "type": "integer",
            "format": "int32"
          },
          "gitp": {
            "type": "integer",
            "format": "int32"
          },
          "homeRuns": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPitches": {
            "type": "integer",
            "format": "int32"
          },
          "totalBases": {
            "type": "integer",
            "format": "int32"
          },
          "gidpOpportunites": {
            "type": "integer",
            "format": "int32"
          },
          "walks": {
            "type": "integer",
            "format": "int32"
          },
          "hitByPitch": {
            "type": "integer",
            "format": "int32"
          },
          "strikeouts": {
            "type": "integer",
            "format": "int32"
          },
          "airOuts": {
            "type": "integer",
            "format": "int32"
          },
          "goAo": {
            "type": "string"
          },
          "pitchesPerPlateAppearance": {
            "type": "number",
            "format": "double"
          },
          "intentionalWalks": {
            "type": "integer",
            "format": "int32"
          },
          "groundOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyOuts": {
            "type": "integer",
            "format": "int32"
          },
          "games": {
            "type": "integer",
            "format": "int32"
          },
          "gamesStarted": {
            "type": "integer",
            "format": "int32"
          },
          "doubles": {
            "type": "integer",
            "format": "int32"
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "triples": {
            "type": "integer",
            "format": "int32"
          },
          "singles": {
            "type": "integer",
            "format": "int32"
          },
          "runs": {
            "type": "integer",
            "format": "int32"
          },
          "atBats": {
            "type": "integer",
            "format": "int32"
          },
          "pickoffs": {
            "type": "integer",
            "format": "int32"
          },
          "stolenBasePercentage": {
            "type": "string"
          },
          "wildPitches": {
            "type": "integer",
            "format": "int32"
          },
          "sacFlies": {
            "type": "integer",
            "format": "int32"
          },
          "sacBunts": {
            "type": "integer",
            "format": "int32"
          },
          "putouts": {
            "type": "integer",
            "format": "int32"
          },
          "assists": {
            "type": "integer",
            "format": "int32"
          },
          "chances": {
            "type": "integer",
            "format": "int32"
          },
          "streak": {
            "type": "integer",
            "format": "int32"
          },
          "battingOrder": {
            "type": "string"
          },
          "totalSwings": {
            "type": "integer",
            "format": "int32"
          },
          "swingsAndMisses": {
            "type": "integer",
            "format": "int32"
          },
          "ballsInPlay": {
            "type": "integer",
            "format": "int32"
          },
          "popOuts": {
            "type": "integer",
            "format": "int32"
          },
          "lineOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyHits": {
            "type": "integer",
            "format": "int32"
          },
          "popHits": {
            "type": "integer",
            "format": "int32"
          },
          "lineHits": {
            "type": "integer",
            "format": "int32"
          },
          "groundHits": {
            "type": "integer",
            "format": "int32"
          },
          "gamesPlayedOnBothTeams": {
            "type": "integer",
            "format": "int32"
          },
          "attendance": {
            "type": "integer",
            "format": "int32"
          },
          "gameInnings": {
            "type": "integer",
            "format": "int32"
          },
          "gameDuration": {
            "$ref": "#/components/schemas/Duration"
          },
          "plateAppearances": {
            "type": "integer",
            "format": "int32"
          },
          "pitchesPerPlateAppearanceStr": {
            "type": "string"
          },
          "stolenBasePercentageOrNull": {
            "type": "string"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "GameStatusRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "isCurrentBatter": {
            "type": "boolean"
          },
          "isCurrentPitcher": {
            "type": "boolean"
          },
          "isOnBench": {
            "type": "boolean"
          },
          "isSubstitute": {
            "type": "boolean"
          }
        }
      },
      "GameStory": {
        "type": "object",
        "properties": {
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "numStories": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "thumbnailTemplate": {
            "type": "string"
          },
          "lastUpdatedTime": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameStoryRestObject": {
        "type": "object",
        "properties": {
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "type": "string"
          },
          "pages": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GameTO": {
        "type": "object",
        "properties": {
          "gameStatusDetail": {
            "type": "string"
          },
          "awayHolds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "homeHolds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "awayBlownSaves": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "homeBlownSaves": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "gameMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "firstPitchTimeUTC": {
            "type": "string",
            "format": "date-time"
          },
          "firstPitchTime": {
            "type": "string"
          },
          "totalMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "delayMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "game_pk": {
            "type": "integer",
            "format": "int32"
          },
          "attendance": {
            "type": "integer",
            "format": "int32"
          },
          "wind_direction": {
            "type": "string"
          },
          "wind_speed": {
            "type": "string"
          },
          "sky": {
            "type": "string"
          },
          "temperature": {
            "type": "string"
          },
          "game_status_ind": {
            "type": "string"
          },
          "delay_reason": {
            "type": "string"
          },
          "official_scorer": {
            "type": "integer",
            "format": "int32"
          },
          "primary_datacaster": {
            "type": "integer",
            "format": "int32"
          },
          "secondary_datacaster": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GameTypeDates": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "season": {
            "type": "string"
          },
          "roundRobin": {
            "type": "boolean"
          },
          "playoffs": {
            "type": "boolean"
          },
          "playoffRound": {
            "type": "integer",
            "format": "int32"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          }
        }
      },
      "GameTypeDatesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "season": {
            "type": "string"
          },
          "roundRobin": {
            "type": "boolean"
          },
          "playoffs": {
            "type": "boolean"
          },
          "playoffRound": {
            "type": "integer",
            "format": "int32"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          }
        }
      },
      "GroupedStatData": {
        "type": "object",
        "properties": {
          "standard": {
            "$ref": "#/components/schemas/StatData"
          },
          "advanced": {
            "$ref": "#/components/schemas/StatData"
          },
          "expected": {
            "$ref": "#/components/schemas/StatData"
          },
          "projected": {
            "$ref": "#/components/schemas/StatData"
          },
          "tracking": {
            "$ref": "#/components/schemas/StatData"
          },
          "pitching": {
            "$ref": "#/components/schemas/GroupedStatData"
          },
          "hitting": {
            "$ref": "#/components/schemas/GroupedStatData"
          },
          "fielding": {
            "$ref": "#/components/schemas/GroupedStatData"
          },
          "running": {
            "$ref": "#/components/schemas/GroupedStatData"
          },
          "catching": {
            "$ref": "#/components/schemas/GroupedStatData"
          },
          "rankings": {
            "$ref": "#/components/schemas/GroupedStatData"
          },
          "percentiles": {
            "$ref": "#/components/schemas/GroupedStatData"
          }
        }
      },
      "GroupedStatDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "standard": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "advanced": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "expected": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "projected": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "tracking": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "pitching": {
            "$ref": "#/components/schemas/GroupedStatDataRestObject"
          },
          "hitting": {
            "$ref": "#/components/schemas/GroupedStatDataRestObject"
          },
          "fielding": {
            "$ref": "#/components/schemas/GroupedStatDataRestObject"
          },
          "running": {
            "$ref": "#/components/schemas/GroupedStatDataRestObject"
          },
          "catching": {
            "$ref": "#/components/schemas/GroupedStatDataRestObject"
          },
          "rankings": {
            "$ref": "#/components/schemas/GroupedStatDataRestObject"
          },
          "percentiles": {
            "$ref": "#/components/schemas/GroupedStatDataRestObject"
          }
        }
      },
      "Highlights": {
        "type": "object",
        "properties": {
          "scoreboard": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "gameCenter": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "milestone": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "highlights": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "liveHighlights": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "scoreboardPreview": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "HitTrajectory": {
        "type": "string",
        "enum": [
          "BUNT_GROUND_BALL",
          "BUNT_LINE_DRIVE",
          "BUNT_POP_UP",
          "GROUND_BALL",
          "LINE_DRIVE",
          "POP_UP",
          "FLY_BALL",
          "UNKNOWN"
        ]
      },
      "HitTrajectoryData": {
        "type": "object",
        "properties": {
          "trajectoryPolynomialX": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "trajectoryPolynomialY": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "trajectoryPolynomialZ": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "validTimeInterval": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "measuredTimeInterval": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxHeightPosition": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "hitPositionAt110Feet": {
            "$ref": "#/components/schemas/Coordinates"
          }
        }
      },
      "IFeed": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IFeedRestObject": {
        "type": "object"
      },
      "IGameStatus": {
        "type": "object",
        "properties": {
          "startTimeTBD": {
            "type": "boolean"
          },
          "detailedState": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "abstractGameState": {
            "type": "string"
          }
        }
      },
      "IOfficialType": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          }
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "images": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "caption": {
            "type": "string"
          },
          "imageType": {
            "$ref": "#/components/schemas/ImageTypeEnum"
          },
          "url": {
            "type": "string"
          },
          "imageTypeAsString": {
            "type": "string"
          }
        }
      },
      "ImageRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "images": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "caption": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "ImageTypeEnum": {
        "type": "string",
        "enum": ["HEADER", "THUMBNAIL", "SPONSORSHIP", "LIST", "URL", "MAP_THUMBNAIL", "LOGOIMAGE"]
      },
      "InningRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "num": {
            "type": "integer",
            "format": "int32"
          },
          "ordinalNum": {
            "type": "string"
          },
          "home": {
            "$ref": "#/components/schemas/InningTeamInfoRestObject"
          },
          "away": {
            "$ref": "#/components/schemas/InningTeamInfoRestObject"
          }
        }
      },
      "InningTeamInfoRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "runs": {
            "type": "integer",
            "format": "int32"
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "integer",
            "format": "int32"
          },
          "leftOnBase": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Language": {
        "type": "string",
        "enum": [
          "ENGLISH",
          "ELIAS",
          "SPANISH",
          "BIS",
          "JAPANESE",
          "KOREAN",
          "CHINESE",
          "FRENCH",
          "GERMAN",
          "ITALIAN",
          "DUTCH",
          "PORTUGUESE",
          "GREEK",
          "TAGALOG",
          "JAPANESE_2",
          "UNACCENT_OVERRIDE"
        ]
      },
      "LaunchData": {
        "type": "object",
        "properties": {
          "speed": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "spinAxis": {
            "type": "number",
            "format": "double"
          },
          "direction": {
            "type": "number",
            "format": "double"
          },
          "spinRate": {
            "type": "number",
            "format": "double"
          },
          "contactPosition": {
            "$ref": "#/components/schemas/Position"
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "spinVector": {
            "$ref": "#/components/schemas/Coordinates"
          }
        }
      },
      "LaunchDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "speed": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "spinAxis": {
            "type": "number",
            "format": "double"
          },
          "direction": {
            "type": "number",
            "format": "double"
          },
          "spinRate": {
            "type": "number",
            "format": "double"
          },
          "contactPosition": {
            "$ref": "#/components/schemas/PositionRestObject"
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "spinVector": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          }
        }
      },
      "LeaderLimits": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "compareType": {
            "type": "string"
          }
        }
      },
      "Leaders": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "leaderCategory": {
            "$ref": "#/components/schemas/PersonLeadersEnum"
          },
          "statGroup": {
            "$ref": "#/components/schemas/StatGroup"
          },
          "season": {
            "type": "string"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "statType": {
            "$ref": "#/components/schemas/StatType"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "totalSplits": {
            "type": "integer",
            "format": "int32"
          },
          "leaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerLeader"
            }
          },
          "limits": {
            "$ref": "#/components/schemas/LeaderLimits"
          },
          "limitMetaData": {
            "$ref": "#/components/schemas/LimitMetadata"
          },
          "hydratedTeams": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedPeople": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "LeadersRestObject": {
        "type": "object",
        "properties": {
          "leaderCategory": {
            "type": "string"
          },
          "season": {
            "type": "string"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "limits": {
            "$ref": "#/components/schemas/LeaderLimits"
          },
          "limitMetadata": {
            "$ref": "#/components/schemas/LimitMetadataRestObject"
          },
          "leaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerLeaderRestObject"
            }
          },
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statGroup": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "totalSplits": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "League": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "nameShort": {
            "type": "string"
          },
          "nameAbbreviation": {
            "type": "string"
          },
          "orgCode": {
            "type": "string"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "seasonState": {
            "type": "string"
          },
          "hasWildcard": {
            "type": "boolean"
          },
          "hasSplitSeason": {
            "type": "boolean"
          },
          "seasonDateInfo": {
            "$ref": "#/components/schemas/Season"
          },
          "season": {
            "type": "string"
          },
          "leagueTimeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "games": {
            "type": "integer",
            "format": "int32"
          },
          "hasPlayoffPoints": {
            "type": "boolean"
          },
          "totalTeams": {
            "type": "integer",
            "format": "int32"
          },
          "totalWildcardTeams": {
            "type": "integer",
            "format": "int32"
          },
          "hasDivisions": {
            "type": "boolean"
          },
          "hasConferences": {
            "type": "boolean"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "defaultVenueId": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "ruleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettings"
            }
          },
          "active": {
            "type": "boolean"
          },
          "affiliated": {
            "type": "boolean"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "LeagueRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "nameShort": {
            "type": "string"
          },
          "seasonState": {
            "type": "string"
          },
          "hasWildCard": {
            "type": "boolean"
          },
          "hasSplitSeason": {
            "type": "boolean"
          },
          "numGames": {
            "type": "integer",
            "format": "int32"
          },
          "hasPlayoffPoints": {
            "type": "boolean"
          },
          "numTeams": {
            "type": "integer",
            "format": "int32"
          },
          "numWildcardTeams": {
            "type": "integer",
            "format": "int32"
          },
          "seasonDateInfo": {
            "$ref": "#/components/schemas/SeasonRestObject"
          },
          "season": {
            "type": "string"
          },
          "orgCode": {
            "type": "string"
          },
          "conferencesInUse": {
            "type": "boolean"
          },
          "divisionsInUse": {
            "type": "boolean"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZoneRestObject"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "isAffiliated": {
            "type": "boolean"
          },
          "ruleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettingsRestObject"
            }
          }
        }
      },
      "LimitMetadata": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "ties": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LimitMetadataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "additionalTies": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Lineup": {
        "type": "object",
        "properties": {
          "homePlayers": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "awayPlayers": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "LiveLookin": {
        "type": "object",
        "properties": {
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "mediaPlaybackId": {
            "type": "integer",
            "format": "int64"
          },
          "kicker": {
            "type": "string"
          },
          "headline": {
            "type": "string"
          },
          "playbacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveLookinPlayback"
            }
          }
        }
      },
      "LiveLookinPlayback": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "address4": {
            "type": "string"
          },
          "attention": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "stateAbbrev": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "azimuthAngle": {
            "type": "number",
            "format": "double"
          },
          "elevation": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LocationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "address4": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "stateAbbrev": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "defaultCoordinates": {
            "$ref": "#/components/schemas/CoordinateRestObject"
          },
          "coordinates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoordinateRestObject"
            }
          },
          "azimuthAngle": {
            "type": "number",
            "format": "double"
          },
          "elevation": {
            "type": "integer",
            "format": "int32"
          },
          "country": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "Matchup": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "batter": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "batSide": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "pitcher": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "pitchHand": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "postOnFirst": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "postOnSecond": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "postOnThird": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "batterHotColdZoneStats": {
            "$ref": "#/components/schemas/StatsRestObject"
          },
          "pitcherHotColdZoneStats": {
            "$ref": "#/components/schemas/StatsRestObject"
          },
          "batterHotColdZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballHotColdZoneRestObject"
            }
          },
          "pitcherHotColdZones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballHotColdZoneRestObject"
            }
          },
          "splits": {
            "$ref": "#/components/schemas/Split"
          }
        }
      },
      "Media": {
        "type": "object",
        "properties": {
          "epg": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "epgAlternate": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "milestones": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "featuredMedia": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "previewStory": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "gameStory": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "freeGame": {
            "type": "boolean"
          },
          "enhancedGame": {
            "type": "boolean"
          },
          "broadcasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameDateBroadcast"
            }
          }
        }
      },
      "MediaSourceType": {
        "type": "string",
        "enum": [
          "BROADCAST",
          "ALTERNATE_BROADCAST",
          "CH_HIGH_SIDEVIEW",
          "CENTERFIELD",
          "HOME",
          "AWAY",
          "NETWORK",
          "PITCHCAST",
          "CH_SIDEVIEW",
          "CF",
          "HIGH_HOME",
          "FIRST_BASE_SIDEVIEW",
          "THIRD_BASE_SIDEVIEW",
          "FIRST_BASE_BATTER_SIDEVIEW",
          "THIRD_BASE_BATTER_SIDEVIEW",
          "THIRD_BASE_PITCHER_SIDEVIEW",
          "FIRST_BASE_PITCHER_SIDEVIEW"
        ]
      },
      "MediaState": {
        "type": "string",
        "enum": ["MEDIA_OFF", "MEDIA_ON", "MEDIA_ARCHIVE"]
      },
      "MediaStateRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "mediaStateId": {
            "type": "integer",
            "format": "int32"
          },
          "mediaStateCode": {
            "type": "string"
          },
          "mediaStateText": {
            "type": "string"
          }
        }
      },
      "Movement": {
        "type": "object",
        "properties": {
          "originBase": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "outBase": {
            "type": "string"
          },
          "isOut": {
            "type": "boolean"
          },
          "outNumber": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NonGameBroadcastRestObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "site": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "copyright": {
            "type": "string"
          },
          "isNational": {
            "type": "boolean"
          },
          "sourceUrl": {
            "type": "string"
          },
          "callSign": {
            "type": "string"
          },
          "videoResolution": {
            "$ref": "#/components/schemas/VideoResolutionEnumRestObject"
          },
          "availability": {
            "$ref": "#/components/schemas/BroadcastAvailabilityRestObject"
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefIdRestObject"
            }
          },
          "sourceComment": {
            "type": "string"
          },
          "mediaState": {
            "$ref": "#/components/schemas/MediaStateRestObject"
          },
          "broadcastDate": {
            "type": "string",
            "format": "date"
          },
          "mediaId": {
            "type": "string"
          },
          "nonGameDateBroadcastGuid": {
            "type": "string"
          },
          "availableForStreaming": {
            "type": "boolean"
          },
          "mvpdAuthRequired": {
            "type": "boolean"
          }
        }
      },
      "NonGameDateBroadcast": {
        "type": "object",
        "properties": {
          "broadcaster": {
            "$ref": "#/components/schemas/Broadcaster"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "isNationalStatus": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "videoResolution": {
            "$ref": "#/components/schemas/VideoResolution"
          },
          "broadcastAvailability": {
            "$ref": "#/components/schemas/BroadcastAvailability"
          },
          "broadcastComment": {
            "type": "string"
          },
          "broadcastUrl": {
            "type": "string"
          },
          "xrefs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BroadcasterXrefId"
            }
          },
          "mediaState": {
            "$ref": "#/components/schemas/MediaState"
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          },
          "broadcastDate": {
            "type": "string",
            "format": "date"
          },
          "nonGameDateBroadcastGuid": {
            "type": "string",
            "format": "uuid"
          },
          "streamingAvailabilityStatus": {
            "type": "boolean"
          },
          "mvpdAuthBroadcastStatus": {
            "type": "boolean"
          },
          "eventId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Official": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "jerseyNumber": {
            "type": "string"
          },
          "officialType": {
            "$ref": "#/components/schemas/IOfficialType"
          },
          "gameDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "OfficialRestObject": {
        "type": "object",
        "properties": {
          "official": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "officialType": {
            "type": "string"
          }
        }
      },
      "OtherNames": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "phoneticName": {
            "type": "string"
          }
        }
      },
      "OtherNamesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "firstInitialLastName": {
            "type": "string"
          },
          "lastNameFirstInitial": {
            "type": "string"
          },
          "lastFirstName": {
            "type": "string"
          },
          "phoneticName": {
            "type": "string"
          }
        }
      },
      "OtherTeamNames": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          }
        }
      },
      "PersonLeadersEnum": {
        "type": "string",
        "enum": [
          "ASSISTS",
          "SHUTOUTS",
          "HOME_RUNS",
          "SACRIFICE_BUNTS",
          "SACRIFICE_FLIES",
          "RUNS",
          "GROUNDOUT_TO_FLYOUT_RATIO",
          "STOLEN_BASES",
          "BATTING_AVERAGE",
          "GROUNDOUTS",
          "NUMBER_OF_PITCHES",
          "ON_BASE_PERCENTAGE",
          "CAUGHT_STEALING",
          "GROUND_INTO_DOUBLE_PLAYS",
          "TOTAL_BASES",
          "EARNED_RUN_AVERAGE",
          "FIELDING_PERCENTAGE",
          "WALKS_HITS_PER_INNING_PITCHED",
          "FLYOUTS",
          "HIT_BY_PITCHES",
          "GAMES_PLAYED",
          "WALKS",
          "SLUGGING_PERCENTAGE",
          "ON_BASE_PLUS_SLUGGING",
          "RUNS_BATTED_IN",
          "TRIPLES",
          "EXTRA_BASE_HITS",
          "HITS",
          "AT_BAT",
          "STRIKEOUTS",
          "DOUBLES",
          "TOTAL_PLATE_APPEARANCES",
          "INTENTIONAL_WALKS",
          "BASEBALL_WINS",
          "LOSSES",
          "SAVES",
          "WILD_PITCH",
          "AIROUTS",
          "BALK",
          "BLOWN_SAVES",
          "CATCHER_ERA",
          "CATCHERS_INTERFERENCE",
          "CHANCES",
          "COMPLETE_GAME",
          "DOUBLE_PLAYS",
          "EARNED_RUN",
          "ERRORS",
          "GAMES_FINISHED",
          "GAMES_STARTED",
          "HIT_BATSMAN",
          "HITS_PER_9_INN",
          "HOLDS",
          "INNINGS",
          "INNINGS_PITCHED",
          "OUTFIELD_ASSISTS",
          "PASSED_BALLS",
          "PICKOFFS",
          "PITCHES_PER_INNING",
          "PUT_OUTS",
          "RANGE_FACTOR_PER_GAME",
          "RANGE_FACTOR_PER_9_INN",
          "SAVE_OPPORTUNITIES",
          "STOLEN_BASE_PERCENTAGE",
          "STRIKEOUTS_PER_9_INN",
          "STRIKEOUT_WALK_RATIO",
          "THROWING_ERRORS",
          "TOTAL_BATTERS_FACED",
          "TRIPLE_PLAYS",
          "WALKS_PER_9_INN",
          "WIN_PERCENTAGE"
        ]
      },
      "Photo": {
        "type": "object",
        "properties": {
          "photoType": {
            "type": "string"
          },
          "defaultRes": {
            "type": "string"
          },
          "doubleRes": {
            "type": "string"
          },
          "tripleRes": {
            "type": "string"
          },
          "lowRes": {
            "type": "string"
          }
        }
      },
      "PhotoRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "photoType": {
            "type": "string"
          },
          "defaultRes": {
            "type": "string"
          },
          "doubleRes": {
            "type": "string"
          },
          "tripleRes": {
            "type": "string"
          },
          "lowRes": {
            "type": "string"
          }
        }
      },
      "PitcherDetailType": {
        "type": "string",
        "enum": [
          "AT_BAT",
          "SINGLE",
          "DOUBLE",
          "TRIPLE",
          "HOME_RUN",
          "STRIKEOUT",
          "GAME",
          "COMPLETE_GAME",
          "GAME_STARTED",
          "GAME_FINISHED",
          "SHUTOUT",
          "WALK",
          "INTENT_WALK",
          "RUN",
          "WIN",
          "RBI",
          "SAVE",
          "BLOWN_SAVE",
          "HOLD",
          "LOSS",
          "SAC_BUNT",
          "SAC_FLY",
          "REACHED_ON_INTERFERENCE",
          "CATCHER_INTERFERENCE",
          "HIT_BY_PITCH",
          "OUT",
          "TEAM_OUT",
          "BALL",
          "BALL_BLOCKED",
          "BUNT_FOUL_TIP",
          "CALLED_STRIKE",
          "FOUL",
          "FOUL_BUNT",
          "FOUL_TIP",
          "PITCHOUT",
          "FOUL_PITCHOUT",
          "HIT_INTO_PLAY",
          "PITCHOUT_HIT_INTO_PLAY",
          "INTENT_BALL",
          "WILD_PITCH",
          "BALK",
          "INHERITED_RUNNER",
          "INHERITED_RUNNER_SCORED",
          "MISSED_BUNT",
          "EARNED_RUN",
          "UNEARNED_RUN",
          "GROUNDOUT",
          "FLYOUT",
          "POPOUT",
          "LINEOUT",
          "TEAM_EARNED_RUN",
          "TEAM_UNEARNED_RUN",
          "SWINGING_PITCHOUT",
          "SWINGING_STRIKE",
          "SWINGING_STRIKE_BLOCKED",
          "RELIEF_NO_OUT",
          "PICKOFF_1B",
          "PICKOFF_2B",
          "PICKOFF_3B",
          "UNKNOWN_STRIKE",
          "STOLEN_BASE_2B",
          "STOLEN_BASE_3B",
          "STOLEN_BASE_HP",
          "CAUGHT_STEALING_2B",
          "CAUGHT_STEALING_3B",
          "CAUGHT_STEALING_HP",
          "PLATE_APPEARANCE",
          "UNKNOWN"
        ]
      },
      "PitchingData": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "note": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "catchersInterference": {
            "type": "integer",
            "format": "int32"
          },
          "average": {
            "type": "string"
          },
          "onBasePercentage": {
            "type": "string"
          },
          "onBasePlusSlugging": {
            "type": "string"
          },
          "stolenBases": {
            "type": "integer",
            "format": "int32"
          },
          "caughtStealing": {
            "type": "integer",
            "format": "int32"
          },
          "slugging": {
            "type": "string"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "gidp": {
            "type": "integer",
            "format": "int32"
          },
          "gitp": {
            "type": "integer",
            "format": "int32"
          },
          "homeRuns": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPitches": {
            "type": "integer",
            "format": "int32"
          },
          "totalBases": {
            "type": "integer",
            "format": "int32"
          },
          "gidpOpportunites": {
            "type": "integer",
            "format": "int32"
          },
          "walks": {
            "type": "integer",
            "format": "int32"
          },
          "hitByPitch": {
            "type": "integer",
            "format": "int32"
          },
          "strikeouts": {
            "type": "integer",
            "format": "int32"
          },
          "airOuts": {
            "type": "integer",
            "format": "int32"
          },
          "goAo": {
            "type": "string"
          },
          "pitchesPerPlateAppearance": {
            "type": "number",
            "format": "double"
          },
          "intentionalWalks": {
            "type": "integer",
            "format": "int32"
          },
          "groundOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyOuts": {
            "type": "integer",
            "format": "int32"
          },
          "games": {
            "type": "integer",
            "format": "int32"
          },
          "gamesStarted": {
            "type": "integer",
            "format": "int32"
          },
          "doubles": {
            "type": "integer",
            "format": "int32"
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "triples": {
            "type": "integer",
            "format": "int32"
          },
          "singles": {
            "type": "integer",
            "format": "int32"
          },
          "runs": {
            "type": "integer",
            "format": "int32"
          },
          "atBats": {
            "type": "integer",
            "format": "int32"
          },
          "pickoffs": {
            "type": "integer",
            "format": "int32"
          },
          "stolenBasePercentage": {
            "type": "string"
          },
          "wildPitches": {
            "type": "integer",
            "format": "int32"
          },
          "sacFlies": {
            "type": "integer",
            "format": "int32"
          },
          "sacBunts": {
            "type": "integer",
            "format": "int32"
          },
          "putouts": {
            "type": "integer",
            "format": "int32"
          },
          "assists": {
            "type": "integer",
            "format": "int32"
          },
          "chances": {
            "type": "integer",
            "format": "int32"
          },
          "streak": {
            "type": "integer",
            "format": "int32"
          },
          "battingOrder": {
            "type": "string"
          },
          "totalSwings": {
            "type": "integer",
            "format": "int32"
          },
          "swingsAndMisses": {
            "type": "integer",
            "format": "int32"
          },
          "ballsInPlay": {
            "type": "integer",
            "format": "int32"
          },
          "popOuts": {
            "type": "integer",
            "format": "int32"
          },
          "lineOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyHits": {
            "type": "integer",
            "format": "int32"
          },
          "popHits": {
            "type": "integer",
            "format": "int32"
          },
          "lineHits": {
            "type": "integer",
            "format": "int32"
          },
          "groundHits": {
            "type": "integer",
            "format": "int32"
          },
          "gamesPlayedOnBothTeams": {
            "type": "integer",
            "format": "int32"
          },
          "battersFaced": {
            "type": "integer",
            "format": "int32"
          },
          "earnedRuns": {
            "type": "integer",
            "format": "int32"
          },
          "walksHitsPerInningPitched": {
            "type": "string"
          },
          "wins": {
            "type": "integer",
            "format": "int32"
          },
          "losses": {
            "type": "integer",
            "format": "int32"
          },
          "ties": {
            "type": "integer",
            "format": "int32"
          },
          "saves": {
            "type": "integer",
            "format": "int32"
          },
          "saveOpportunities": {
            "type": "integer",
            "format": "int32"
          },
          "holds": {
            "type": "integer",
            "format": "int32"
          },
          "blownSaves": {
            "type": "integer",
            "format": "int32"
          },
          "pitchesThrown": {
            "type": "integer",
            "format": "int32"
          },
          "balls": {
            "type": "integer",
            "format": "int32"
          },
          "strikes": {
            "type": "integer",
            "format": "int32"
          },
          "inningsPitched": {
            "type": "string"
          },
          "outsPitched": {
            "type": "integer",
            "format": "int32"
          },
          "earnedRunAverage": {
            "type": "string"
          },
          "inheritedRuns": {
            "type": "integer",
            "format": "int32"
          },
          "inheritedRunsScored": {
            "type": "integer",
            "format": "int32"
          },
          "inheritedRunnersStrandedPercentage": {
            "type": "string"
          },
          "completeGames": {
            "type": "integer",
            "format": "int32"
          },
          "shutouts": {
            "type": "integer",
            "format": "int32"
          },
          "balks": {
            "type": "integer",
            "format": "int32"
          },
          "hitBatsmen": {
            "type": "integer",
            "format": "int32"
          },
          "runsBattedIn": {
            "type": "integer",
            "format": "int32"
          },
          "winPercentage": {
            "type": "string"
          },
          "pitchesPerInning": {
            "type": "string"
          },
          "gamesFinished": {
            "type": "integer",
            "format": "int32"
          },
          "strikeoutWalkRatio": {
            "type": "string"
          },
          "strikeoutsPer9Inn": {
            "type": "string"
          },
          "walksPer9Inn": {
            "type": "string"
          },
          "hitsPer9Inn": {
            "type": "string"
          },
          "runsScoredPer9": {
            "type": "string"
          },
          "homeRunsPer9": {
            "type": "string"
          },
          "strikePercentage": {
            "type": "string"
          },
          "pitchingOrder": {
            "type": "integer",
            "format": "int32"
          },
          "passedBall": {
            "type": "integer",
            "format": "int32"
          },
          "plateAppearances": {
            "type": "integer",
            "format": "int32"
          },
          "runsScoredPer9OrNull": {
            "type": "string"
          },
          "homeRunsPer9OrNull": {
            "type": "string"
          },
          "strikePercentageOrNull": {
            "type": "string"
          },
          "pitchesPerPlateAppearanceStr": {
            "type": "string"
          },
          "stolenBasePercentageOrNull": {
            "type": "string"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "PlayCredit": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "credit": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "detail": {
            "$ref": "#/components/schemas/GameEventDetailTO"
          },
          "fielderStat": {
            "$ref": "#/components/schemas/FielderDetailType"
          },
          "batterStat": {
            "$ref": "#/components/schemas/BatterDetailType"
          },
          "pitcherStat": {
            "$ref": "#/components/schemas/PitcherDetailType"
          },
          "runnerStat": {
            "$ref": "#/components/schemas/RunnerDetailType"
          }
        }
      },
      "PlayCreditRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "position": {
            "$ref": "#/components/schemas/PositionRestObject"
          },
          "credit": {
            "type": "string"
          }
        }
      },
      "PlayerDraftInfo": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "round": {
            "type": "string"
          },
          "pickOverall": {
            "type": "integer",
            "format": "int32"
          },
          "pickInRound": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          }
        }
      },
      "PlayerDraftInfoRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "round": {
            "type": "string"
          },
          "pickOverall": {
            "type": "integer",
            "format": "int32"
          },
          "pickInRound": {
            "type": "integer",
            "format": "int32"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          }
        }
      },
      "PlayerLeader": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "person": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "season": {
            "type": "string"
          },
          "numTeams": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PlayerLeaderRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "person": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "season": {
            "type": "string"
          },
          "numTeams": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PlayerListPerson": {
        "type": "object",
        "properties": {
          "playerListId": {
            "type": "string"
          },
          "playerListName": {
            "type": "string"
          },
          "season": {
            "type": "string"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "position": {
            "$ref": "#/components/schemas/BaseballPosition"
          }
        }
      },
      "PlayerPoolEnum": {
        "type": "string",
        "enum": [
          "ALL",
          "QUALIFIED",
          "ROOKIES",
          "QUALIFIED_ROOKIES",
          "ORGANIZATION",
          "ORGANIZATION_NO_MLB",
          "CURRENT",
          "ALL_CURRENT",
          "QUALIFIED_CURRENT"
        ]
      },
      "Position": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          },
          "timeStamp": {
            "type": "string"
          }
        }
      },
      "PostseasonSeries": {
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "seriesConfigId": {
            "type": "string"
          }
        }
      },
      "Privilege": {
        "type": "string",
        "enum": [
          "CAN_GET_SKELETAL_DATA",
          "CAN_UPDATE_SKELETAL_DATA",
          "CAN_GET_STAT_SEARCH",
          "CAN_GET_BAT_TRACKING_DATA",
          "CAN_UPDATE_BAT_TRACKING_DATA",
          "CAN_GET_WEATHER_DATA",
          "CAN_UPDATE_WEATHER_DATA",
          "CAN_GET_HITTER_BIOMECHANICS",
          "CAN_GET_PITCHER_BIOMECHANICS",
          "CAN_GET_BALL_TRACKING_DATA",
          "CAN_GET_PLAYER_TRACKING_DATA",
          "CAN_GET_POSE_TRACKING_DATA",
          "CAN_GET_ALL_CLUB_OWNED",
          "ANONYMOUS",
          "USER",
          "TICKETING",
          "COMPTIX",
          "PR_USER",
          "BROADCAST",
          "ENHANCED_BROADCAST",
          "TEAM",
          "EDITORIAL",
          "MANAGER",
          "AUDIT_USER",
          "SUPER_USER",
          "ADMIN"
        ]
      },
      "Promotion": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "tlink": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "altPageUrl": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "offerType": {
            "type": "string"
          },
          "distribution": {
            "type": "string"
          },
          "sortKey": {
            "type": "string"
          },
          "presentedBy": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "offerId": {
            "type": "integer",
            "format": "int32"
          },
          "displayIfPast": {
            "type": "boolean"
          },
          "other": {
            "type": "string"
          },
          "notSponsorship": {
            "type": "boolean"
          },
          "sponsorship": {
            "type": "boolean"
          }
        }
      },
      "PromotionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "offerId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "altPageUrl": {
            "type": "string"
          },
          "tlink": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "presentedBy": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "offerType": {
            "type": "string"
          },
          "distribution": {
            "type": "string"
          },
          "sortKey": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "displayIfPast": {
            "type": "boolean"
          },
          "other": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "PublicFacingEnum": {
        "type": "string",
        "enum": ["PUBLIC_FACING", "NON_PUBLIC_FACING", "ALL"]
      },
      "RelatedApplication": {
        "type": "object",
        "properties": {
          "androidPackage": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "intent": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "androidUrl": {
            "type": "string"
          },
          "iosUrl": {
            "type": "string"
          },
          "iosPackage": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "Relative": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "primaryPosition": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats"
          },
          "otherNames": {
            "$ref": "#/components/schemas/OtherNames"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "useName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "useLastName": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "nickNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "boxscoreName": {
            "type": "string"
          },
          "primaryNumber": {
            "type": "string"
          },
          "rosterNumber": {
            "type": "string"
          },
          "draftYear": {
            "type": "integer",
            "format": "int32"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "birthCity": {
            "type": "string"
          },
          "birthStateProvince": {
            "type": "string"
          },
          "birthCountry": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "deathCity": {
            "type": "string"
          },
          "deathStateProvince": {
            "type": "string"
          },
          "deathCountry": {
            "type": "string"
          },
          "deathDate": {
            "type": "string",
            "format": "date"
          },
          "lastPlayedDate": {
            "type": "string",
            "format": "date"
          },
          "pronunciation": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "heightFeet": {
            "type": "integer",
            "format": "int32"
          },
          "heightInches": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "currentTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "isRookie": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "gender": {
            "type": "string"
          },
          "nameMatrilineal": {
            "type": "string"
          },
          "isPlayer": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "isAlternateCaptain": {
            "type": "boolean"
          },
          "isCaptain": {
            "type": "boolean"
          },
          "twitter": {
            "type": "string"
          },
          "awards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Award"
            }
          },
          "socialMediaInfo": {
            "$ref": "#/components/schemas/SocialMediaInfo"
          },
          "educationInfo": {
            "$ref": "#/components/schemas/EducationInfo"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Photo"
            }
          },
          "draft": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerDraftInfo"
            }
          },
          "additionalBio": {
            "$ref": "#/components/schemas/AdditionalBio"
          },
          "phoneticName": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "batSide": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "pitchHand": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "mlbDebutDate": {
            "type": "string",
            "format": "date"
          },
          "batterPitcher": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "nameSlug": {
            "type": "string"
          },
          "nameTitle": {
            "type": "string"
          },
          "namePrefix": {
            "type": "string"
          },
          "nameFirstLast": {
            "type": "string"
          },
          "firstLastName": {
            "type": "string"
          },
          "lastFirstName": {
            "type": "string"
          },
          "lastInitName": {
            "type": "string"
          },
          "initLastName": {
            "type": "string"
          },
          "fullFMLName": {
            "type": "string"
          },
          "fullLFMName": {
            "type": "string"
          },
          "strikeZoneTop": {
            "type": "number",
            "format": "double"
          },
          "strikeZoneBottom": {
            "type": "number",
            "format": "double"
          },
          "alumniLastSeason": {
            "type": "string"
          },
          "languageId": {
            "type": "integer",
            "format": "int32"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "drafts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballDraftProspect"
            }
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          },
          "mixedFeed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IFeed"
            }
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefId"
            }
          },
          "depthCharts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepthChart"
            }
          },
          "nextStarts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballScheduleItem"
            }
          },
          "rookieSeasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hasStats": {
            "type": "boolean"
          },
          "relation": {
            "type": "string"
          },
          "pitcher": {
            "type": "boolean"
          },
          "fielder": {
            "type": "boolean"
          },
          "hydratedSocial": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedEducation": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedStats": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedCurrentTeam": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedTeam": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedAwards": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedPersonRosterEntries": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedPersonJobsEntries": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedRelatives": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "draftProspects": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedDepthCharts": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedNextStarts": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedPlayerPhotos": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedArticles": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedVideos": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedMixedFeed": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rbi": {
            "type": "integer",
            "format": "int32"
          },
          "awayScore": {
            "type": "integer",
            "format": "int32"
          },
          "homeScore": {
            "type": "integer",
            "format": "int32"
          },
          "isOut": {
            "type": "boolean",
            "description": "Did the play result in an out?"
          }
        }
      },
      "ReviewDetails": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "isOverturned": {
            "type": "boolean"
          },
          "inProgress": {
            "type": "boolean"
          },
          "reviewType": {
            "type": "string"
          },
          "challengeTeamId": {
            "type": "integer",
            "format": "int32"
          },
          "additionalReviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewDetails"
            }
          }
        }
      },
      "Role": {
        "type": "string",
        "enum": [
          "ROLE_ANONYMOUS",
          "USER",
          "PR_USER",
          "BROADCAST",
          "TICKETING",
          "COMPTIX",
          "ENHANCED_BROADCAST",
          "TEAM",
          "EDITORIAL",
          "MANAGER",
          "AUDIT_USER",
          "SUPER_USER",
          "ADMIN"
        ]
      },
      "RosterRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roster": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballRosterEntryRestObject"
            }
          },
          "link": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "rosterType": {
            "type": "string"
          }
        }
      },
      "RosterType": {
        "type": "string",
        "enum": [
          "FORTY_MAN",
          "FULL_SEASON",
          "FULL_ROSTER",
          "NON_ROSTER_INVITEES",
          "ACTIVE",
          "ALL_TIME",
          "DEPTH_CHART",
          "GAMEDAY",
          "COACH"
        ]
      },
      "RuleSettings": {
        "type": "object",
        "properties": {
          "playSettingId": {
            "type": "integer",
            "format": "int32"
          },
          "settingId": {
            "type": "integer",
            "format": "int32"
          },
          "settingName": {
            "type": "string"
          },
          "settingDisplayName": {
            "type": "string"
          },
          "settingCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "settingCategory": {
            "type": "string"
          },
          "settingCategoryCode": {
            "type": "string"
          },
          "settingDescription": {
            "type": "string"
          },
          "settingIsPublic": {
            "type": "boolean"
          },
          "valueType": {
            "type": "string"
          },
          "settingValue": {
            "type": "object"
          },
          "settingScope": {
            "type": "string"
          },
          "settingOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettingsOption"
            }
          },
          "priorityOverride": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "inherited": {
            "type": "boolean"
          },
          "gameType": {
            "type": "string"
          },
          "allGameTypeStatus": {
            "type": "boolean"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "venue": {
            "$ref": "#/components/schemas/Venue"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "scheduleEvent": {
            "$ref": "#/components/schemas/ScheduleEvent"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "userHasPermission": {
            "type": "boolean"
          }
        }
      },
      "RuleSettingsOption": {
        "type": "object",
        "properties": {
          "settingValueId": {
            "type": "integer",
            "format": "int32"
          },
          "settingId": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "activeBeginDate": {
            "type": "string",
            "format": "date"
          },
          "activeEndDate": {
            "type": "string",
            "format": "date"
          },
          "value": {
            "type": "object"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RuleSettingsOptionRestObject": {
        "type": "object",
        "properties": {
          "settingValueId": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "activeBeginDate": {
            "type": "string",
            "format": "date"
          },
          "activeEndDate": {
            "type": "string",
            "format": "date"
          },
          "value": {
            "type": "object"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RuleSettingsRestObject": {
        "type": "object",
        "properties": {
          "playSettingId": {
            "type": "integer",
            "format": "int32"
          },
          "settingId": {
            "type": "integer",
            "format": "int32"
          },
          "settingName": {
            "type": "string"
          },
          "settingDisplayName": {
            "type": "string"
          },
          "settingCategory": {
            "type": "string"
          },
          "settingCategoryCode": {
            "type": "string"
          },
          "settingDescription": {
            "type": "string"
          },
          "settingOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettingsOptionRestObject"
            }
          },
          "valueType": {
            "type": "string"
          },
          "settingValue": {
            "type": "object"
          },
          "settingScope": {
            "type": "string"
          },
          "priorityOverride": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "inherited": {
            "type": "boolean"
          },
          "gameType": {
            "type": "string"
          },
          "allGameTypeStatus": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RunnerDetailType": {
        "type": "string",
        "enum": [
          "START_BASE",
          "SEQUENCE",
          "RUNNER_GOING",
          "END_BASE",
          "RUNNER_OUT",
          "FORCED_OUT",
          "ADVANCED_ON_FORCE",
          "ADVANCED_ON_THROW",
          "ADVANCED_ON_PLAY",
          "DOUBLED_OFF",
          "THROWN_OUT",
          "TAGGED_OUT",
          "OUT_STRETCHING",
          "LEFT_EARLY",
          "FIELDERS_CHOICE",
          "OUT_ON_APPEAL",
          "OUT_ADVANCING",
          "DEFENSIVE_INDIFFERENCE",
          "INTERFERENCE",
          "HIT_BY_BATTED_BALL",
          "OUT_OVER_RUNNING",
          "OUT_RETURNING",
          "RUNDOWN",
          "CAUGHT_STEALING_2B",
          "CAUGHT_STEALING_3B",
          "CAUGHT_STEALING_HOME",
          "PICKOFF_CAUGHT_STEALING_2B",
          "PICKOFF_CAUGHT_STEALING_3B",
          "PICKOFF_CAUGHT_STEALING_HOME",
          "STOLEN_BASE_2B",
          "STOLEN_BASE_3B",
          "STOLEN_BASE_HOME",
          "PICKOFF_1B",
          "PICKOFF_2B",
          "PICKOFF_3B",
          "PICKOFF_ERROR_1B",
          "PICKOFF_ERROR_2B",
          "PICKOFF_ERROR_3B",
          "UNKNOWN"
        ]
      },
      "RunnerMovement": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "movement": {
            "$ref": "#/components/schemas/Movement"
          },
          "details": {
            "$ref": "#/components/schemas/Details"
          },
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayCreditRestObject"
            }
          }
        }
      },
      "ScheduleDateRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalEvents": {
            "type": "integer",
            "format": "int32"
          },
          "totalGames": {
            "type": "integer",
            "format": "int32"
          },
          "totalGamesInProgress": {
            "type": "integer",
            "format": "int32"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballScheduleItemRestObject"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEventRestObject"
            }
          }
        }
      },
      "ScheduleEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "eventType": {
            "$ref": "#/components/schemas/ScheduleEventTypes"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "calendarDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "venue": {
            "$ref": "#/components/schemas/Venue"
          },
          "sports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sport"
            }
          },
          "leagues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/League"
            }
          },
          "divisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Division"
            }
          },
          "organizationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "game": {
            "$ref": "#/components/schemas/BaseballScheduleItem"
          },
          "content": {
            "$ref": "#/components/schemas/ScheduleEventCms"
          },
          "eventDesignations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Designation"
            }
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicket"
            }
          },
          "promotionTickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicket"
            }
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "eventStatus": {
            "$ref": "#/components/schemas/EventStatus"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organizationType": {
            "type": "string"
          },
          "calendarType": {
            "$ref": "#/components/schemas/CalendarTypes"
          },
          "fileCode": {
            "type": "string"
          },
          "eventNumber": {
            "type": "integer",
            "format": "int32"
          },
          "publicFacing": {
            "$ref": "#/components/schemas/PublicFacingEnum"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTeam"
            }
          },
          "trackingVersion": {
            "$ref": "#/components/schemas/TrackingVersion"
          },
          "trackingSystemOwner": {
            "$ref": "#/components/schemas/TrackingSystemOwner"
          },
          "coachingVideo": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSourceType"
            }
          },
          "broadcasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonGameDateBroadcast"
            }
          },
          "nonGameGuid": {
            "type": "string"
          },
          "multiDay": {
            "type": "boolean"
          },
          "primaryCalendar": {
            "type": "boolean"
          }
        }
      },
      "ScheduleEventCms": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "ScheduleEventRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nonGameGuid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "eventType": {
            "$ref": "#/components/schemas/ScheduleEventTypeRestObject"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageRestObject"
            }
          },
          "venue": {
            "$ref": "#/components/schemas/VenueRestObject"
          },
          "sports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SportRestObject"
            }
          },
          "leagues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeagueRestObject"
            }
          },
          "divisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DivisionRestObject"
            }
          },
          "game": {
            "$ref": "#/components/schemas/BaseballScheduleItemRestObject"
          },
          "content": {
            "$ref": "#/components/schemas/ScheduleEventCms"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZoneRestObject"
          },
          "designations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DesignationRestObject"
            }
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicketRestObject"
            }
          },
          "promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTicketRestObject"
            }
          },
          "eventStatus": {
            "$ref": "#/components/schemas/GameStatusRestObject"
          },
          "isMultiDay": {
            "type": "boolean"
          },
          "isPrimaryCalendar": {
            "type": "boolean"
          },
          "fileCode": {
            "type": "string"
          },
          "eventNumber": {
            "type": "integer",
            "format": "int32"
          },
          "publicFacing": {
            "type": "boolean"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTeamRestObject"
            }
          },
          "trackingVersion": {
            "$ref": "#/components/schemas/TrackingVersionRestObject"
          },
          "coachingVideo": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSourceType"
            }
          },
          "ruleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettingsRestObject"
            }
          },
          "broadcasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonGameBroadcastRestObject"
            }
          }
        }
      },
      "ScheduleEventTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ScheduleEventTypes": {
        "type": "string",
        "enum": [
          "ALL_STAR_WEEKEND_EVENT",
          "TEAM_EVENT",
          "EXHIBITION",
          "POSTSEASON_GAMES",
          "SPRING_TRAINING_GAMES",
          "PITCHERS_AND_CATCHERS_REPORT",
          "FULL_SQUAD_REPORTS",
          "STH_EVENTS",
          "BALLPARK_TOURS",
          "IMPORTANT_DATES",
          "OTHER",
          "CULTURAL_EVENTS",
          "TRACKING_DATA_EVENTS",
          "FESTIVAL",
          "KIDS_AND_FAMILY",
          "MUSIC",
          "PROMOTION_LOGO_BACKGROUND",
          "PROMOTION_LOGO_SINGE_DATE",
          "STUDIO_EVENT"
        ]
      },
      "ScheduleRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalEvents": {
            "type": "integer",
            "format": "int32"
          },
          "totalGames": {
            "type": "integer",
            "format": "int32"
          },
          "totalGamesInProgress": {
            "type": "integer",
            "format": "int32"
          },
          "wait": {
            "type": "integer",
            "format": "int32"
          },
          "dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDateRestObject"
            }
          }
        }
      },
      "School": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "schoolClass": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "SchoolRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "schoolClass": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "Season": {
        "type": "object",
        "properties": {
          "seasonId": {
            "type": "string"
          },
          "hasWildcard": {
            "type": "boolean"
          },
          "springStartDate": {
            "type": "string",
            "format": "date"
          },
          "springEndDate": {
            "type": "string",
            "format": "date"
          },
          "offSeasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "offSeasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "regularSeasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "regularSeasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "seasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "seasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "preSeasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "preSeasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "postSeasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "postSeasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "lastDate1stHalf": {
            "type": "string",
            "format": "date"
          },
          "firstDate2ndHalf": {
            "type": "string",
            "format": "date"
          },
          "allStarDate": {
            "type": "string",
            "format": "date"
          },
          "numberOfGames": {
            "type": "integer",
            "format": "int32"
          },
          "olympicsParticipation": {
            "type": "boolean"
          },
          "tiesInUse": {
            "type": "boolean"
          },
          "conferencesInUse": {
            "type": "boolean"
          },
          "divisionsInUse": {
            "type": "boolean"
          },
          "gameTypeDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameTypeDates"
            }
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "seasonLevelGamedayType": {
            "type": "string"
          },
          "gameLevelGamedayType": {
            "type": "string"
          },
          "qualifierPlateAppearances": {
            "type": "number",
            "format": "double"
          },
          "qualifierOutsPitched": {
            "type": "number",
            "format": "double"
          },
          "qualifierInningsPitched": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SeasonRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "seasonId": {
            "type": "string"
          },
          "hasWildcard": {
            "type": "boolean"
          },
          "preSeasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "preSeasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "seasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "springStartDate": {
            "type": "string",
            "format": "date"
          },
          "springEndDate": {
            "type": "string",
            "format": "date"
          },
          "regularSeasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "lastDate1stHalf": {
            "type": "string",
            "format": "date"
          },
          "allStarDate": {
            "type": "string",
            "format": "date"
          },
          "firstDate2ndHalf": {
            "type": "string",
            "format": "date"
          },
          "regularSeasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "postSeasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "postSeasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "seasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "offseasonStartDate": {
            "type": "string",
            "format": "date"
          },
          "offSeasonEndDate": {
            "type": "string",
            "format": "date"
          },
          "numberOfGames": {
            "type": "integer",
            "format": "int32"
          },
          "tiesInUse": {
            "type": "boolean"
          },
          "olympicsParticipation": {
            "type": "boolean"
          },
          "conferencesInUse": {
            "type": "boolean"
          },
          "divisionsInUse": {
            "type": "boolean"
          },
          "gameTypeDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameTypeDatesRestObject"
            }
          },
          "seasonLevelGamedayType": {
            "type": "string"
          },
          "gameLevelGamedayType": {
            "type": "string"
          },
          "qualifierPlateAppearances": {
            "type": "number",
            "format": "double"
          },
          "qualifierOutsPitched": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SeriesStatus": {
        "type": "object",
        "properties": {
          "gameNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalGames": {
            "type": "integer",
            "format": "int32"
          },
          "winningTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "losingTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "isTied": {
            "type": "boolean"
          },
          "isOver": {
            "type": "boolean"
          },
          "result": {
            "type": "string"
          },
          "ties": {
            "type": "integer",
            "format": "int32"
          },
          "wins": {
            "type": "integer",
            "format": "int32"
          },
          "losses": {
            "type": "integer",
            "format": "int32"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "description": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "seriesHomeNumber": {
            "type": "integer",
            "format": "int32"
          },
          "seriesAwayNumber": {
            "type": "integer",
            "format": "int32"
          },
          "seriesId": {
            "type": "string"
          },
          "seriesName": {
            "type": "string"
          },
          "seriesAbbreviation": {
            "type": "string"
          }
        }
      },
      "SeriesStatusRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "gameNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalGames": {
            "type": "integer",
            "format": "int32"
          },
          "isTied": {
            "type": "boolean"
          },
          "isOver": {
            "type": "boolean"
          },
          "wins": {
            "type": "integer",
            "format": "int32"
          },
          "losses": {
            "type": "integer",
            "format": "int32"
          },
          "winningTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "losingTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "description": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "result": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          }
        }
      },
      "Site": {
        "type": "string",
        "enum": ["MLB", "MILB"]
      },
      "SocialMediaInfo": {
        "type": "object",
        "properties": {
          "twitter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "facebook": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "instagram": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vine": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "periscope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tumblr": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "youtube": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pinterest": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "googleplus": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "snapchat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hashtags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SocialMediaRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "twitter": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "facebook": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "instagram": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vine": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "periscope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tumblr": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "youtube": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pinterest": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "googleplus": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "snapchat": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hashtags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Split": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "batter": {
            "type": "string"
          },
          "pitcher": {
            "type": "string"
          },
          "menOnBase": {
            "type": "string"
          }
        }
      },
      "Sport": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "deviceProperties": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "ruleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettings"
            }
          },
          "seasonState": {
            "type": "string"
          },
          "seasonDateInfo": {
            "$ref": "#/components/schemas/Season"
          },
          "hydratedRuleSettings": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "hydratedSeason": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "activeStatus": {
            "type": "string",
            "writeOnly": true
          },
          "affiliated": {
            "type": "boolean"
          },
          "sportActive": {
            "type": "boolean"
          },
          "hydratedDeviceProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "SportRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "deviceProperties": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "isAffiliated": {
            "type": "boolean"
          },
          "ruleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettingsRestObject"
            }
          },
          "seasonState": {
            "type": "string"
          },
          "seasonDateInfo": {
            "$ref": "#/components/schemas/SeasonRestObject"
          },
          "activeStatus": {
            "type": "boolean"
          }
        }
      },
      "SportTypeEnum": {
        "type": "string",
        "enum": ["ALL", "BASEBALL", "HOCKEY", "GOLF", "UNKNOWN", "BASKETBALL"]
      },
      "StandingsOdds": {
        "type": "object",
        "properties": {
          "wildcardOdds": {
            "type": "number",
            "format": "double"
          },
          "divisionOdds": {
            "type": "number",
            "format": "double"
          },
          "playoffOdds": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "StartEndData": {
        "type": "object",
        "properties": {
          "velocity": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "position": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "time": {
            "type": "number",
            "format": "double"
          },
          "confidence": {
            "type": "string"
          },
          "speed": {
            "type": "number",
            "format": "double"
          },
          "bearing": {
            "type": "number",
            "format": "double"
          },
          "distance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "StartEndDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "velocity": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "position": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "time": {
            "type": "number",
            "format": "double"
          },
          "confidence": {
            "type": "string"
          },
          "speed": {
            "type": "number",
            "format": "double"
          },
          "bearing": {
            "type": "number",
            "format": "double"
          },
          "distance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "StatContainer": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/StatType"
          },
          "group": {
            "$ref": "#/components/schemas/StatGroup"
          },
          "splits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplits"
            }
          },
          "splitsTiedWithOffset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplits"
            }
          },
          "splitsTiedWithLimit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplits"
            }
          },
          "stats": {
            "$ref": "#/components/schemas/StatData"
          },
          "totalSplits": {
            "type": "integer",
            "format": "int32"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "season": {
            "type": "string"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "playerPool": {
            "$ref": "#/components/schemas/PlayerPoolEnum"
          },
          "exemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerListPerson"
            }
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "disclaimers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalSplitsIfNotSet": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          }
        }
      },
      "StatContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "disclaimers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "type": {
            "$ref": "#/components/schemas/StatType"
          },
          "group": {
            "$ref": "#/components/schemas/StatGroup"
          },
          "totalSplits": {
            "type": "integer",
            "format": "int32"
          },
          "exemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatExemptionRestObject"
            }
          },
          "splits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "stats": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "splitsTiedWithOffset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "splitsTiedWithLimit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "season": {
            "type": "string"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "playerPool": {
            "$ref": "#/components/schemas/PlayerPoolEnum"
          }
        }
      },
      "StatData": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "note": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "StatDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        }
      },
      "StatExemptionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "exemptionId": {
            "type": "string"
          },
          "exemptionName": {
            "type": "string"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          }
        }
      },
      "StatSplits": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "season": {
            "type": "string"
          },
          "stat": {
            "$ref": "#/components/schemas/StatData"
          },
          "stats": {
            "$ref": "#/components/schemas/GroupedStatData"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "homeTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "awayTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "numTeams": {
            "type": "integer",
            "format": "int32"
          },
          "numOccurrences": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "sport": {
            "$ref": "#/components/schemas/Sport"
          },
          "opponent": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "venue": {
            "$ref": "#/components/schemas/Venue"
          },
          "game": {
            "$ref": "#/components/schemas/BaseballScheduleItem"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "lastDatePlayed": {
            "type": "string",
            "format": "date"
          },
          "gameNumber": {
            "type": "integer",
            "format": "int32"
          },
          "split": {
            "$ref": "#/components/schemas/DynamicLookupEnum"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfTheWeek": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "opposingDivision": {
            "$ref": "#/components/schemas/Division"
          },
          "opposingConference": {
            "$ref": "#/components/schemas/Conference"
          },
          "isHome": {
            "type": "boolean"
          },
          "isWin": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/StatType"
          },
          "group": {
            "$ref": "#/components/schemas/StatGroup"
          },
          "position": {
            "$ref": "#/components/schemas/BaseballPosition"
          },
          "gameInnings": {
            "type": "integer",
            "format": "int32"
          },
          "exemption": {
            "$ref": "#/components/schemas/PlayerListPerson"
          },
          "numLeagues": {
            "type": "integer",
            "format": "int32"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "StatSplitsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "season": {
            "type": "string"
          },
          "stat": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "stats": {
            "$ref": "#/components/schemas/GroupedStatDataRestObject"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "homeTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "awayTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "venue": {
            "$ref": "#/components/schemas/VenueRestObject"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "opponent": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "opponentDivision": {
            "$ref": "#/components/schemas/DivisionRestObject"
          },
          "opponentConference": {
            "$ref": "#/components/schemas/ConferenceRestObject"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "gameType": {
            "type": "string"
          },
          "isHome": {
            "type": "boolean"
          },
          "isWin": {
            "type": "boolean"
          },
          "dayOfWeek": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "numTeams": {
            "type": "integer",
            "format": "int32"
          },
          "numOccurrences": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "split": {
            "$ref": "#/components/schemas/DynamicEnumRestObject"
          },
          "exemption": {
            "$ref": "#/components/schemas/StatExemptionRestObject"
          },
          "numLeagues": {
            "type": "integer",
            "format": "int32"
          },
          "game": {
            "$ref": "#/components/schemas/BaseballScheduleItemRestObject"
          }
        }
      },
      "StatType": {
        "type": "string",
        "enum": [
          "PROJECTED",
          "PROJECTED_ROS",
          "YEAR_BY_YEAR",
          "YEAR_BY_YEAR_ADVANCED",
          "YEAR_BY_YEAR_PLAYOFFS",
          "SEASON",
          "STANDARD",
          "ADVANCED",
          "CAREER",
          "CAREER_REGULAR_SEASON",
          "CAREER_ADVANCED",
          "SEASON_ADVANCED",
          "CAREER_STAT_SPLITS",
          "CAREER_PLAYOFFS",
          "GAME_LOG",
          "PLAY_LOG",
          "PITCH_LOG",
          "METRIC_LOG",
          "METRIC_AVERAGES",
          "PITCH_ARSENAL",
          "OUTS_ABOVE_AVERAGE",
          "EXPECTED_STATISTICS",
          "SABERMETRICS",
          "SPRAY_CHART",
          "TRACKING_STATISTICS",
          "VS_PLAYER",
          "VS_PLAYER_TOTAL",
          "VS_PLAYER_5Y",
          "VS_TEAM",
          "VS_TEAM_5Y",
          "VS_TEAM_TOTAL",
          "LAST_X_GAMES",
          "BY_DATE_RANGE",
          "BY_DATE_RANGE_ADVANCED",
          "BY_MONTH",
          "BY_MONTH_PLAYOFFS",
          "BY_DAY_OF_WEEK",
          "BY_DAY_OF_WEEK_PLAYOFFS",
          "HOME_AND_AWAY",
          "HOME_AND_AWAY_PLAYOFFS",
          "WIN_LOSS",
          "WIN_LOSS_PLAYOFFS",
          "RANKINGS",
          "RANKINGS_BY_YEAR",
          "STATS_SINGLE_SEASON",
          "STATS_SINGLE_SEASON_ADVANCED",
          "HOT_COLD_ZONES",
          "AVAILABLE_STATS",
          "OPPONENTS_FACED",
          "GAME_TYPE_STATS",
          "FIRST_YEAR_STATS",
          "LAST_YEAR_STATS",
          "STAT_SPLITS",
          "STAT_SPLITS_ADVANCED",
          "AT_GAME_START",
          "VS_OPPONENTS",
          "SABERMETRICS_MULTI_TEAM"
        ]
      },
      "Stats": {
        "type": "object",
        "properties": {
          "allStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatContainer"
            }
          }
        }
      },
      "StatsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          }
        }
      },
      "StatusFlags": {
        "type": "object",
        "properties": {
          "isAllStarGame": {
            "type": "boolean"
          },
          "isCancelled": {
            "type": "boolean"
          },
          "isClassicDoubleHeader": {
            "type": "boolean"
          },
          "isCompletedEarly": {
            "type": "boolean"
          },
          "isDelayed": {
            "type": "boolean"
          },
          "isDoubleHeader": {
            "type": "boolean"
          },
          "isNonDoubleHeaderTBD": {
            "type": "boolean"
          },
          "isExhibition": {
            "type": "boolean"
          },
          "isFinal": {
            "type": "boolean"
          },
          "isForfeit": {
            "type": "boolean"
          },
          "isFreeGame": {
            "type": "boolean"
          },
          "isGameOver": {
            "type": "boolean"
          },
          "isInstantReplay": {
            "type": "boolean"
          },
          "isLive": {
            "type": "boolean"
          },
          "isManagerChallenge": {
            "type": "boolean"
          },
          "isPostponed": {
            "type": "boolean"
          },
          "isPreview": {
            "type": "boolean"
          },
          "isSplitTicketDoubleHeader": {
            "type": "boolean"
          },
          "isSpring": {
            "type": "boolean"
          },
          "isSuspended": {
            "type": "boolean"
          },
          "isSuspendedOnDate": {
            "type": "boolean"
          },
          "isSuspendedResumptionOnDate": {
            "type": "boolean"
          },
          "isTbd": {
            "type": "boolean"
          },
          "isTieBreaker": {
            "type": "boolean"
          },
          "isUmpireReview": {
            "type": "boolean"
          },
          "isWarmup": {
            "type": "boolean"
          },
          "isPostSeason": {
            "type": "boolean"
          },
          "isPostSeasonReady": {
            "type": "boolean"
          },
          "isWildCard": {
            "type": "boolean"
          },
          "isDivisionSeries": {
            "type": "boolean"
          },
          "isChampionshipSeries": {
            "type": "boolean"
          },
          "isWorldSeries": {
            "type": "boolean"
          },
          "isPreGameDelay": {
            "type": "boolean"
          },
          "isInGamDelay": {
            "type": "boolean"
          }
        }
      },
      "StatusFlagsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "isAllStarGame": {
            "type": "boolean"
          },
          "isCancelled": {
            "type": "boolean"
          },
          "isClassicDoubleHeader": {
            "type": "boolean"
          },
          "isCompletedEarly": {
            "type": "boolean"
          },
          "isDelayed": {
            "type": "boolean"
          },
          "isDoubleHeader": {
            "type": "boolean"
          },
          "isNonDoubleHeaderTBD": {
            "type": "boolean"
          },
          "isExhibition": {
            "type": "boolean"
          },
          "isFinal": {
            "type": "boolean"
          },
          "isForfeit": {
            "type": "boolean"
          },
          "isFreeGame": {
            "type": "boolean"
          },
          "isGameOver": {
            "type": "boolean"
          },
          "isInstantReplay": {
            "type": "boolean"
          },
          "isLive": {
            "type": "boolean"
          },
          "isManagerChallenge": {
            "type": "boolean"
          },
          "isPostponed": {
            "type": "boolean"
          },
          "isPreview": {
            "type": "boolean"
          },
          "isSplitTicketDoubleHeader": {
            "type": "boolean"
          },
          "isSpring": {
            "type": "boolean"
          },
          "isSuspended": {
            "type": "boolean"
          },
          "isSuspendedOnDate": {
            "type": "boolean"
          },
          "isSuspendedResumptionOnDate": {
            "type": "boolean"
          },
          "isTBD": {
            "type": "boolean"
          },
          "isTieBreaker": {
            "type": "boolean"
          },
          "isUmpireReview": {
            "type": "boolean"
          },
          "isWarmup": {
            "type": "boolean"
          },
          "isPostSeason": {
            "type": "boolean"
          },
          "isPostSeasonReady": {
            "type": "boolean"
          },
          "isWildCard": {
            "type": "boolean"
          },
          "isDivisionSeries": {
            "type": "boolean"
          },
          "isChampionshopSeries": {
            "type": "boolean"
          },
          "isWorldSeries": {
            "type": "boolean"
          },
          "isPreGameDelay": {
            "type": "boolean"
          },
          "isInGameDelay": {
            "type": "boolean"
          }
        }
      },
      "StreakRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "streakType": {
            "type": "string"
          },
          "streakNumber": {
            "type": "integer",
            "format": "int32"
          },
          "streakCode": {
            "type": "string"
          }
        }
      },
      "TeamContentCms": {
        "type": "object",
        "properties": {
          "home": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "sections": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "TeamDesignationEnum": {
        "type": "string",
        "enum": ["HOMETEAM", "AWAYTEAM"]
      },
      "TeamInfo": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "runs": {
            "type": "integer",
            "format": "int32"
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "integer",
            "format": "int32"
          },
          "leftOnBase": {
            "type": "integer",
            "format": "int32"
          },
          "isWinner": {
            "type": "boolean"
          }
        }
      },
      "TeamPlayoffs": {
        "type": "object",
        "properties": {
          "inPlayoffs": {
            "type": "boolean"
          }
        }
      },
      "TeamStandingsRecordRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "division": {
            "$ref": "#/components/schemas/Division"
          },
          "conference": {
            "$ref": "#/components/schemas/Conference"
          },
          "league": {
            "$ref": "#/components/schemas/League"
          },
          "season": {
            "type": "string"
          },
          "streak": {
            "$ref": "#/components/schemas/StreakRestObject"
          },
          "clinchIndicator": {
            "type": "string"
          },
          "divisionRank": {
            "type": "string"
          },
          "conferenceRank": {
            "type": "string"
          },
          "leagueRank": {
            "type": "string"
          },
          "springLeagueRank": {
            "type": "string"
          },
          "wildCardRank": {
            "type": "string"
          },
          "sportRank": {
            "type": "string"
          },
          "gamesPlayed": {
            "type": "integer",
            "format": "int32"
          },
          "gamesBack": {
            "type": "string"
          },
          "wildCardGamesBack": {
            "type": "string"
          },
          "leagueGamesBack": {
            "type": "string"
          },
          "springLeagueGamesBack": {
            "type": "string"
          },
          "sportGamesBack": {
            "type": "string"
          },
          "divisionGamesBack": {
            "type": "string"
          },
          "conferenceGamesBack": {
            "type": "string"
          },
          "leagueRecord": {
            "$ref": "#/components/schemas/WinLossRecordRestObject"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "records": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WinLossRecordRestObject"
              }
            }
          },
          "probabilites": {
            "$ref": "#/components/schemas/StandingsOdds"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TeamStatData": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "note": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "catchersInterference": {
            "type": "integer",
            "format": "int32"
          },
          "average": {
            "type": "string"
          },
          "onBasePercentage": {
            "type": "string"
          },
          "onBasePlusSlugging": {
            "type": "string"
          },
          "stolenBases": {
            "type": "integer",
            "format": "int32"
          },
          "caughtStealing": {
            "type": "integer",
            "format": "int32"
          },
          "slugging": {
            "type": "string"
          },
          "outs": {
            "type": "integer",
            "format": "int32"
          },
          "gidp": {
            "type": "integer",
            "format": "int32"
          },
          "gitp": {
            "type": "integer",
            "format": "int32"
          },
          "homeRuns": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPitches": {
            "type": "integer",
            "format": "int32"
          },
          "totalBases": {
            "type": "integer",
            "format": "int32"
          },
          "gidpOpportunites": {
            "type": "integer",
            "format": "int32"
          },
          "walks": {
            "type": "integer",
            "format": "int32"
          },
          "hitByPitch": {
            "type": "integer",
            "format": "int32"
          },
          "strikeouts": {
            "type": "integer",
            "format": "int32"
          },
          "airOuts": {
            "type": "integer",
            "format": "int32"
          },
          "goAo": {
            "type": "string"
          },
          "pitchesPerPlateAppearance": {
            "type": "number",
            "format": "double"
          },
          "intentionalWalks": {
            "type": "integer",
            "format": "int32"
          },
          "groundOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyOuts": {
            "type": "integer",
            "format": "int32"
          },
          "games": {
            "type": "integer",
            "format": "int32"
          },
          "gamesStarted": {
            "type": "integer",
            "format": "int32"
          },
          "doubles": {
            "type": "integer",
            "format": "int32"
          },
          "hits": {
            "type": "integer",
            "format": "int32"
          },
          "triples": {
            "type": "integer",
            "format": "int32"
          },
          "singles": {
            "type": "integer",
            "format": "int32"
          },
          "runs": {
            "type": "integer",
            "format": "int32"
          },
          "atBats": {
            "type": "integer",
            "format": "int32"
          },
          "pickoffs": {
            "type": "integer",
            "format": "int32"
          },
          "stolenBasePercentage": {
            "type": "string"
          },
          "wildPitches": {
            "type": "integer",
            "format": "int32"
          },
          "sacFlies": {
            "type": "integer",
            "format": "int32"
          },
          "sacBunts": {
            "type": "integer",
            "format": "int32"
          },
          "putouts": {
            "type": "integer",
            "format": "int32"
          },
          "assists": {
            "type": "integer",
            "format": "int32"
          },
          "chances": {
            "type": "integer",
            "format": "int32"
          },
          "streak": {
            "type": "integer",
            "format": "int32"
          },
          "battingOrder": {
            "type": "string"
          },
          "totalSwings": {
            "type": "integer",
            "format": "int32"
          },
          "swingsAndMisses": {
            "type": "integer",
            "format": "int32"
          },
          "ballsInPlay": {
            "type": "integer",
            "format": "int32"
          },
          "popOuts": {
            "type": "integer",
            "format": "int32"
          },
          "lineOuts": {
            "type": "integer",
            "format": "int32"
          },
          "flyHits": {
            "type": "integer",
            "format": "int32"
          },
          "popHits": {
            "type": "integer",
            "format": "int32"
          },
          "lineHits": {
            "type": "integer",
            "format": "int32"
          },
          "groundHits": {
            "type": "integer",
            "format": "int32"
          },
          "gamesPlayedOnBothTeams": {
            "type": "integer",
            "format": "int32"
          },
          "winStreak": {
            "type": "integer",
            "format": "int32"
          },
          "lossStreak": {
            "type": "integer",
            "format": "int32"
          },
          "plateAppearances": {
            "type": "integer",
            "format": "int32"
          },
          "pitchesPerPlateAppearanceStr": {
            "type": "string"
          },
          "stolenBasePercentageOrNull": {
            "type": "string"
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "TimeZone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "offsetAtGameTime": {
            "type": "integer",
            "format": "int32"
          },
          "tz": {
            "type": "string"
          }
        }
      },
      "TimeZoneRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "offsetAtGameTime": {
            "type": "integer",
            "format": "int32"
          },
          "tz": {
            "type": "string"
          }
        }
      },
      "TrackingSystemOwner": {
        "type": "string",
        "enum": ["UNKNOWN", "MLB", "MLB_CLUB"]
      },
      "TrackingVendorVersionContainer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "TrackingVersion": {
        "type": "string",
        "enum": [
          "PITCH_FX",
          "STATCAST_2015_COMBINED",
          "STATCAST_2015_RADAR_ONLY_20",
          "STATCAST_2017_RADAR_ONLY_20",
          "STATCAST_2017_COMBINED_RADAR_20",
          "STATCAST_2018_COMBINED_RADAR_25",
          "STATCAST_2018_RADAR_ONLY_25",
          "STATCAST_2020_12_CAM",
          "STATCAST_2020_8_CAM",
          "TRACKMAN_V3",
          "STATCAST_2023_12_CAM",
          "STATCAST_2023_4_CAM",
          "CLUB_OWNED_8_CAM"
        ]
      },
      "TrackingVersionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/TrackingSystemOwner"
          },
          "pitchVendor": {
            "$ref": "#/components/schemas/TrackingVendorVersionContainer"
          },
          "hitVendor": {
            "$ref": "#/components/schemas/TrackingVendorVersionContainer"
          },
          "playerVendor": {
            "$ref": "#/components/schemas/TrackingVendorVersionContainer"
          },
          "skeletalVendor": {
            "$ref": "#/components/schemas/TrackingVendorVersionContainer"
          },
          "batVendor": {
            "$ref": "#/components/schemas/TrackingVendorVersionContainer"
          },
          "biomechanicsVendor": {
            "$ref": "#/components/schemas/TrackingVendorVersionContainer"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "person": {
            "$ref": "#/components/schemas/BaseballPerson"
          },
          "typeId": {
            "type": "string"
          },
          "typeCode": {
            "type": "string"
          },
          "fromTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "toTeam": {
            "$ref": "#/components/schemas/BaseballTeam"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "resolutionDate": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          },
          "isConditional": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "descriptionMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "TransactionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "person": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "fromTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "toTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date"
          },
          "resolutionDate": {
            "type": "string",
            "format": "date"
          },
          "type": {
            "type": "string"
          },
          "typeCode": {
            "type": "string"
          },
          "typeDesc": {
            "type": "string"
          },
          "isConditional": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "VendorWeatherForecast": {
        "type": "object",
        "properties": {
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "forecastTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "adjustedPrecipitationProbability": {
            "type": "integer",
            "format": "int32"
          },
          "cloudCoverPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "dewpoint": {
            "type": "number",
            "format": "double"
          },
          "temperatureFeelsLike": {
            "type": "number",
            "format": "double"
          },
          "skyConditionIconId": {
            "type": "integer",
            "format": "int32"
          },
          "precipitationId": {
            "type": "integer",
            "format": "int32"
          },
          "precipitationProbability": {
            "type": "integer",
            "format": "int32"
          },
          "precipitationRate": {
            "type": "number",
            "format": "double"
          },
          "relativeHumidity": {
            "type": "integer",
            "format": "int32"
          },
          "temperature": {
            "type": "number",
            "format": "double"
          },
          "thunderstormProbability": {
            "type": "integer",
            "format": "int32"
          },
          "windDirectionDegrees": {
            "type": "integer",
            "format": "int32"
          },
          "windSpeed": {
            "type": "number",
            "format": "double"
          },
          "surfacePressure": {
            "type": "number",
            "format": "double"
          },
          "snowRate": {
            "type": "number",
            "format": "double"
          },
          "wetBulbGlobeTemperature": {
            "type": "number",
            "format": "double"
          },
          "wetBulbTemperature": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "VendorWeatherForecastRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "forecastTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "adjustedPrecipitationProbability": {
            "type": "integer",
            "format": "int32"
          },
          "cloudCoverPercentage": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "dewpoint": {
            "type": "number",
            "format": "double"
          },
          "temperatureFeelsLike": {
            "type": "number",
            "format": "double"
          },
          "skyConditionIconId": {
            "type": "integer",
            "format": "int32"
          },
          "precipitationId": {
            "type": "integer",
            "format": "int32"
          },
          "precipitationProbability": {
            "type": "integer",
            "format": "int32"
          },
          "precipitationRate": {
            "type": "number",
            "format": "double"
          },
          "relativeHumidity": {
            "type": "integer",
            "format": "int32"
          },
          "temperature": {
            "type": "number",
            "format": "double"
          },
          "thunderstormProbability": {
            "type": "integer",
            "format": "int32"
          },
          "windDirectionDegrees": {
            "type": "integer",
            "format": "int32"
          },
          "windSpeed": {
            "type": "number",
            "format": "double"
          },
          "surfacePressure": {
            "type": "number",
            "format": "double"
          },
          "snowRate": {
            "type": "number",
            "format": "double"
          },
          "wetBulbGlobeTemperature": {
            "type": "number",
            "format": "double"
          },
          "wetBulbTemperature": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Venue": {
        "type": "object",
        "properties": {
          "requestingUserRole": {
            "$ref": "#/components/schemas/Role"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZone"
          },
          "fieldInfo": {
            "$ref": "#/components/schemas/FieldInfo"
          },
          "sportType": {
            "$ref": "#/components/schemas/SportTypeEnum"
          },
          "relatedVenues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Venue"
            }
          },
          "parentVenues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Venue"
            }
          },
          "residentVenues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Venue"
            }
          },
          "relatedApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedApplication"
            }
          },
          "relatedImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "socialMediaInfo": {
            "$ref": "#/components/schemas/SocialMediaInfo"
          },
          "menu": {
            "$ref": "#/components/schemas/VenueCms"
          },
          "metadata": {
            "$ref": "#/components/schemas/VenueMetadata"
          },
          "schedule": {
            "$ref": "#/components/schemas/BaseballSchedule"
          },
          "nextSchedule": {
            "$ref": "#/components/schemas/BaseballSchedule"
          },
          "previousSchedule": {
            "$ref": "#/components/schemas/BaseballSchedule"
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefId"
            }
          },
          "season": {
            "type": "string"
          },
          "trackingVersion": {
            "$ref": "#/components/schemas/TrackingVersion"
          },
          "trackingSystemOwner": {
            "$ref": "#/components/schemas/TrackingSystemOwner"
          },
          "coachingVideo": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSourceType"
            }
          },
          "appEnabled": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "timeZoneId": {
            "type": "string",
            "writeOnly": true
          },
          "userPrivileges": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "VenueCms": {
        "type": "object",
        "properties": {
          "menu": {
            "type": "string"
          }
        }
      },
      "VenueMetadata": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "startYear": {
            "type": "integer",
            "format": "int32"
          },
          "endYear": {
            "type": "integer",
            "format": "int32"
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VenueTypeEnum"
            }
          }
        }
      },
      "VenueMetadataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "startYear": {
            "type": "integer",
            "format": "int32"
          },
          "endYear": {
            "type": "integer",
            "format": "int32"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "VenueRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/LocationRestObject"
          },
          "timeZone": {
            "$ref": "#/components/schemas/TimeZoneRestObject"
          },
          "fieldInfo": {
            "$ref": "#/components/schemas/FieldInfoRestObject"
          },
          "relatedApplications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationRestObject"
            }
          },
          "images": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ImageRestObject"
            }
          },
          "social": {
            "$ref": "#/components/schemas/SocialMediaRestObject"
          },
          "menu": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleRestObject"
          },
          "nextSchedule": {
            "$ref": "#/components/schemas/ScheduleRestObject"
          },
          "previousSchedule": {
            "$ref": "#/components/schemas/ScheduleRestObject"
          },
          "metadata": {
            "$ref": "#/components/schemas/VenueMetadataRestObject"
          },
          "appEnabled": {
            "type": "boolean"
          },
          "xrefIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XrefIdRestObject"
            }
          },
          "trackingVersion": {
            "$ref": "#/components/schemas/TrackingVersionRestObject"
          },
          "coachingVideo": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSourceType"
            }
          },
          "ruleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettingsRestObject"
            }
          },
          "active": {
            "type": "boolean"
          },
          "season": {
            "type": "string"
          }
        }
      },
      "VenueTypeEnum": {
        "type": "string",
        "enum": ["NHL", "NBA", "CIRCUS", "UNSPECIFIED"]
      },
      "VenuesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "venues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VenueRestObject"
            }
          }
        }
      },
      "Video": {
        "type": "object",
        "properties": {
          "playId": {
            "type": "string"
          },
          "playbackGroups": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "atBatNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pitchNumber": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "VideoResolution": {
        "type": "string",
        "enum": ["HD", "ENUM_4K", "SD"]
      },
      "ViolationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "subtype": {
            "type": "string"
          }
        }
      },
      "Weather": {
        "type": "object",
        "properties": {
          "weatherCondition": {
            "type": "string"
          },
          "temperature": {
            "type": "string"
          },
          "wind": {
            "type": "string"
          }
        }
      },
      "WeatherRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "temp": {
            "type": "string"
          },
          "wind": {
            "type": "string"
          }
        }
      },
      "WinLossRecord": {
        "type": "object",
        "properties": {
          "wins": {
            "type": "integer",
            "format": "int32"
          },
          "losses": {
            "type": "integer",
            "format": "int32"
          },
          "ties": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "WinLossRecordRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "wins": {
            "type": "integer",
            "format": "int32"
          },
          "losses": {
            "type": "integer",
            "format": "int32"
          },
          "ties": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "pct": {
            "type": "string"
          }
        }
      },
      "XrefId": {
        "type": "object",
        "properties": {
          "xrefId": {
            "type": "string"
          },
          "xrefType": {
            "type": "string"
          },
          "xrefIdTwo": {
            "type": "string"
          },
          "season": {
            "type": "string"
          }
        }
      },
      "XrefIdRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "xrefId": {
            "type": "string"
          },
          "xrefType": {
            "type": "string"
          },
          "xrefIdTwo": {
            "type": "string"
          },
          "season": {
            "type": "string"
          }
        }
      },
      "UniformAssetTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "uniformAssetTypeDesc": {
            "type": "string"
          },
          "uniformAssetTypeCode": {
            "type": "string"
          },
          "uniformAssetTypeText": {
            "type": "string"
          },
          "uniformAssetTypeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UniformRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "uniformAssetId": {
            "type": "integer",
            "format": "int32"
          },
          "uniformAssetCode": {
            "type": "string"
          },
          "uniformAssetText": {
            "type": "string"
          },
          "uniformAssetType": {
            "$ref": "#/components/schemas/UniformAssetTypeRestObject"
          },
          "active": {
            "type": "boolean"
          },
          "startSeason": {
            "type": "string"
          },
          "endSeason": {
            "type": "string"
          }
        }
      },
      "UniformsTeamRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          },
          "uniformAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniformRestObject"
            }
          }
        }
      },
      "UniformsTeamsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "uniforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniformsTeamRestObject"
            }
          }
        }
      },
      "BaseballTeamUniformRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "teamName": {
            "type": "string"
          },
          "uniformAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniformRestObject"
            }
          },
          "link": {
            "type": "string"
          }
        }
      },
      "UniformsGameRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "home": {
            "$ref": "#/components/schemas/BaseballTeamUniformRestObject"
          },
          "away": {
            "$ref": "#/components/schemas/BaseballTeamUniformRestObject"
          }
        }
      },
      "UniformsGamesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "uniforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UniformsGameRestObject"
            }
          }
        }
      },
      "SortOrderEnum": {
        "type": "string",
        "enum": ["ASC", "DESC"]
      },
      "TransactionsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionRestObject"
            }
          }
        }
      },
      "TrackingVendor": {
        "type": "string",
        "enum": ["SPORTVISION", "TRACKMAN", "CHYRONHEGO", "HAWKEYE"]
      },
      "TrackingSoftwareVersionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trackingSoftwareComponentId": {
            "type": "integer",
            "format": "int32"
          },
          "trackingSoftwareComponentText": {
            "type": "string"
          },
          "trackingSoftwareComponentDesc": {
            "type": "string"
          },
          "trackingSoftwareComponentCode": {
            "type": "string"
          },
          "trackingVendorId": {
            "type": "integer",
            "format": "int32"
          },
          "trackingVersionSoftwareNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "trackingSoftwareComponentVersionText": {
            "type": "string"
          },
          "trackingVersionSoftwareNote": {
            "type": "string"
          }
        }
      },
      "BaseballStatsEnum": {
        "type": "string",
        "enum": [
          "AIROUTS",
          "ASSISTS",
          "AT_BATS",
          "AT_BATS_PER_HOMERUN",
          "BALK",
          "BATTING_AVERAGE",
          "BATTING_AVERAGE_BALLS_IN_PLAY",
          "QUALITY_STARTS",
          "BEQUEATHED_RUNNERS",
          "BEQUEATHED_RUNNERS_SCORED",
          "BLOWN_SAVES",
          "CATCHER_ERA",
          "CATCHERS_INTERFERENCE",
          "CAUGHT_STEALING",
          "CHANCES",
          "COMPLETE_GAME",
          "DOUBLE_PLAYS",
          "DOUBLES",
          "EARNED_RUN",
          "EARNED_RUN_AVERAGE",
          "ERRORS",
          "EXIT_VELOCITY",
          "EXTRA_BASE_HITS",
          "FIELDING_PERCENTAGE",
          "FLYOUTS",
          "GAMES_FINISHED",
          "GAMES_PLAYED",
          "GAMES_STARTED",
          "GROUND_INTO_DOUBLE_PLAYS",
          "GROUND_INTO_DOUBLE_PLAY_OPPORTUNITIES",
          "GROUND_INTO_TRIPLE_PLAYS",
          "GROUNDOUTS",
          "GROUNDOUT_TO_FLYOUT_RATIO",
          "HITS",
          "HITS_RISP",
          "HIT_BATSMAN",
          "HIT_BY_PITCHES",
          "HITS_PER_9_INN",
          "HOLDS",
          "HOME_RUNS",
          "HOME_RUNS_PER_PLATE_APPEARANCE",
          "INHERITED_RUNNER",
          "INHERITED_RUNNER_SCORED",
          "INNINGS",
          "OUTS_PITCHED",
          "INNINGS_PITCHED",
          "INTENTIONAL_WALKS",
          "ISO",
          "LEFT_ON_BASE",
          "LEFT_ON_BASE_RISP",
          "LOSSES",
          "NUMBER_OF_STRIKES",
          "NUMBER_OF_BALLS",
          "NUMBER_OF_PITCHES",
          "ON_BASE_PERCENTAGE",
          "ON_BASE_PLUS_SLUGGING",
          "OUTFIELD_ASSISTS",
          "UZR",
          "PASSED_BALLS",
          "PICKOFFS",
          "PITCHES_PER_INNING",
          "PITCHES_PER_PLATE_APPEARANCE",
          "PUT_OUTS",
          "RANGE_FACTOR_PER_GAME",
          "RANGE_FACTOR_PER_9_INN",
          "REACHED_ON_ERROR",
          "RUNS",
          "RUNS_BATTED_IN",
          "SACRIFICE_BUNTS",
          "SACRIFICE_FLIES",
          "SAVES",
          "SAVE_OPPORTUNITIES",
          "SHUTOUTS",
          "SLUGGING_PERCENTAGE",
          "STOLEN_BASES",
          "STOLEN_BASE_PERCENTAGE",
          "STRIKEOUTS",
          "STRIKEOUTS_PER_9_INN",
          "STRIKEOUTS_PER_PLATE_APPEARANCE",
          "STRIKEOUT_WALK_RATIO",
          "THROWING_ERRORS",
          "TOTAL_BASES",
          "TOTAL_BATTERS_FACED",
          "TOTAL_PLATE_APPEARANCES",
          "TRIPLE_PLAYS",
          "TRIPLES",
          "WALKS_PER_STRIKEOUT",
          "WALKS_PER_PLATE_APPEARANCE",
          "WALKS_HITS_PER_INNING_PITCHED",
          "WALKS",
          "WALKS_PER_9_INN",
          "WALKOFFS",
          "WILD_PITCH",
          "WINS",
          "WIN_PERCENTAGE",
          "ATTENDANCE",
          "DURATION",
          "WIN_STREAK",
          "LOSS_STREAK",
          "WOBA",
          "XWOBA",
          "XWOBACON",
          "XAVG",
          "XSLG",
          "LAUNCH_ANGLE",
          "HOME_RUN_DISTANCE",
          "HIT_DISTANCE",
          "HANG_TIME",
          "MAX_HEIGHT",
          "HIT_PROBABILITY",
          "CATCH_PROBABILITY",
          "BARRELS",
          "PITCH_SPEED",
          "SPIN_RATE",
          "EXTENSION",
          "HORIZONTAL_BREAK",
          "ARM_STRENGTH",
          "DISTANCE_COVERED",
          "EXCHANGE",
          "FIELDER_BURST_DISTANCE",
          "FIELDER_JUMP_DISTANCE",
          "FIELDER_REACTION_DISTANCE",
          "FIRST_STEP",
          "FIRST_STEP_EFFICIENCY",
          "POP_TIME_1B",
          "POP_TIME_2B",
          "POP_TIME_3B",
          "ROUTE_EFFICIENCY",
          "SPRINT_SPEED",
          "THROW_ACCURACY",
          "THROW_DISTANCE",
          "THROW_DISTANCE_WITH_BOUNCES",
          "ACCELERATION",
          "BURST",
          "FIRST_TO_HOME",
          "FIRST_TO_SECOND",
          "FIRST_TO_THIRD",
          "HOME_RUN_TROT",
          "HOME_TO_FIRST",
          "HOME_TO_SECOND",
          "HOME_TO_THIRD",
          "LEAD_DISTANCE",
          "OUT_OF_BOX",
          "SECOND_TO_HOME",
          "SECOND_TO_THIRD",
          "SECONDARY_LEAD_DISTANCE",
          "STEAL_FIRST_TO_SECOND",
          "STEAL_SECOND_TO_THIRD",
          "STEAL_THIRD_TO_HOME",
          "TAG_FIRST_STEP",
          "TAG_FIRST_TO_SECOND",
          "TAG_SECOND_TO_THIRD",
          "TAG_THIRD_TO_HOME",
          "THIRD_TO_HOME",
          "OUTS_ABOVE_AVERAGE",
          "FIELDING_RUNS_PREVENTED",
          "STREAK",
          "WINS_ABOVE_REPLACEMENT",
          "GAME_DATE",
          "VERTICAL_BREAK",
          "BURST_DISTANCE",
          "WEIGHTED_RUNS_ABOVE_AVERAGE",
          "WEIGHTED_RUNS_CREATED",
          "WEIGHTED_RUNS_CREATED_PLUS",
          "RUNS_ABOVE_REPLACEMENT",
          "BATTING_RUNS_ABOVE_AVG",
          "FIELDING_RUNS_ABOVE_AVG",
          "POSITIONAL_RUNS_ABOVE_AVG",
          "BASE_RUNNING_RUNS_ABOVE_AVG",
          "WEIGHTED_LEAGUE_ADJUST",
          "REPLACEMENT_RUNS",
          "SPEED_SCORE",
          "ULTIMATE_BASE_RUNNING",
          "WEIGHTED_NOT_GROUND_INTO_DP_RUNS",
          "WEIGHTED_STOLEN_BASE_RUNS",
          "FIELDING_INDEPENDENT_PITCHING",
          "EXPECTED_FIELDING_INDEPENDENT_PITCHING",
          "FIELDING_INDEPENDENT_PITCHING_MINUS",
          "RUNS_ALLOWED_BASED_WAR",
          "SHUTDOWNS",
          "MELTDOWNS",
          "PITCHER_AVERAGE_LEVERAGE_INDEX",
          "INNING_AVERAGE_LEVERAGE_INDEX",
          "GAME_AVERAGE_LEVERAGE_INDEX",
          "END_OF_APPEARANCE_AVERAGE_LEVERAGE_INDEX",
          "ERA_MINUS",
          "JUMP_DISTANCE",
          "ATTACK_ANGLE",
          "BAT_SPEED",
          "HOME_RUN_X_BALLPARKS",
          "HOME_RUN_VENUE_IDS"
        ]
      },
      "GroupByEnum": {
        "type": "string",
        "enum": [
          "PLAYER",
          "PITCHER",
          "BATTER",
          "VENUE",
          "TEAM",
          "BATTING_TEAM",
          "FIELDING_TEAM",
          "SPORT",
          "BATTING_SPORT",
          "FIELDING_SPORT",
          "LEAGUE",
          "BATTING_LEAGUE",
          "FIELDING_LEAGUE",
          "DIVISION",
          "BATTING_DIVISION",
          "FIELDING_DIVISION",
          "SEASON",
          "POSITION",
          "STAT_GROUP",
          "GAME",
          "PITCH_TYPE",
          "EVENT_TYPE",
          "PITCH_CODE",
          "BATTING_ORDER",
          "PITCH_HAND",
          "BAT_SIDE",
          "MONTH",
          "DAY_OF_WEEK",
          "DAY_NIGHT",
          "GAME_TYPE",
          "HOME_AWAY",
          "BASE_STATE",
          "RISP",
          "INNING",
          "COUNT_BALLS",
          "COUNT_STRIKES",
          "COUNT_OUTS",
          "HIT_TRAJECTORY",
          "PITCH_NUMBER",
          "AT_BAT_NUMBER",
          "RUNNER_FIRST",
          "RUNNER_SECOND",
          "RUNNER_THIRD",
          "CATCHER",
          "FIRST_BASEMAN",
          "SECOND_BASEMAN",
          "SHORTSTOP",
          "THIRD_BASEMAN",
          "LEFT_FIELDER",
          "CENTER_FIELDER",
          "RIGHT_FIELDER",
          "DESIGNATED_HITTER",
          "DEFENSIVE_ALIGNMENT",
          "SITUATION_CODE",
          "OPPONENT_TEAM",
          "HIT_DIRECTION",
          "PITCH_ZONE",
          "DATE"
        ]
      },
      "ExpandEnum": {
        "type": "string",
        "enum": [
          "PERSON_STATS",
          "PERSON_NAMES",
          "PERSON_CURRENT_TEAM",
          "PERSON_SOCIAL",
          "AWARDS_PERSON",
          "AWARDS_TEAM",
          "AWARDS_RESULTS",
          "ROSTER_PERSON",
          "BATTING_STATS_TEAM",
          "STANDINGS_TEAM",
          "STANDINGS_LEAGUE",
          "STANDINGS_DIVISION",
          "STANDINGS_CONFERENCE",
          "STANDINGS_RECORD",
          "STANDINGS_RECORD_DIVISION",
          "STANDINGS_RECORD_CONFERENCE",
          "STANDINGS_RECORD_OVERALL",
          "TEAM_LEAGUE",
          "TEAM_STATS",
          "TEAM_ROSTER",
          "TEAM_DIVISION",
          "TEAM_CONFERENCE",
          "TEAM_FRANCHISE",
          "TEAM_LEADERS",
          "TEAM_SCHEDULE_NEXT",
          "TEAM_SCHEDULE_PREVIOUS",
          "TEAM_TICKET",
          "TEAM_CONTENT_HOME_ALL",
          "TEAM_RECORD",
          "TEAM_PLAYOFF_INFO",
          "TEAM_NAME",
          "TEAM_SOCIAL",
          "TEAM_DEVICE_PROPERTIES",
          "TEAM_CONTENT_SECTIONS",
          "SCHEDULE_LINESCORE",
          "SCHEDULE_SCORING_PLAYS",
          "SCHEDULE_DECISIONS",
          "SCHEDULE_TEAM",
          "SCHEDULE_TICKET",
          "SCHEDULE_VENUE",
          "SCHEDULE_BROADCASTS",
          "SCHEDULE_BROADCASTS_ALL",
          "SCHEDULE_RADIO_BROADCASTS",
          "SCHEDULE_METADATA",
          "SCHEDULE_GAME_CONTENT_ALL",
          "SCHEDULE_GAME_CONTENT_MEDIA_ALL",
          "SCHEDULE_GAME_CONTENT_EDITORIAL_ALL",
          "SCHEDULE_GAME_CONTENT_EDITORIAL_PREVIEW",
          "SCHEDULE_GAME_CONTENT_EDITORIAL_RECAP",
          "SCHEDULE_GAME_CONTENT_EDITORIAL_ARTICLES",
          "SCHEDULE_GAME_CONTENT_MEDIA_EPG",
          "SCHEDULE_GAME_CONTENT_MEDIA_MILESTONES",
          "SCHEDULE_GAME_CONTENT_HIGHLIGHTS_ALL",
          "SCHEDULE_GAME_CONTENT_HIGHLIGHTS_SCOREBOARD",
          "SCHEDULE_GAME_CONTENT_HIGHLIGHTS_SCOREBOARD_PREVIEW",
          "SCHEDULE_GAME_CONTENT_HIGHLIGHTS_GAMECENTER",
          "SCHEDULE_GAME_CONTENT_HIGHLIGHTS_MILESTONE",
          "SCHEDULE_GAME_SERIES_SUMMARY",
          "SERIES_SUMMARY_SERIES",
          "GAME_TEAM",
          "DECISIONS_PERSON",
          "SCORING_PLAYS_PERSON",
          "STATS_TEAM",
          "LEADERS_PERSON",
          "LEAGUE_LEADERS_TEAM"
        ]
      },
      "TeamLeaderContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "teamLeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadersRestObject"
            }
          }
        }
      },
      "TeamsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballTeamRestObject"
            }
          }
        }
      },
      "PeopleRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "people": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPersonRestObject"
            }
          }
        }
      },
      "LeagueLeaderContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "leagueLeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadersRestObject"
            }
          }
        }
      },
      "TeamActiveStatusEnum": {
        "type": "string",
        "enum": ["ACTIVE", "INACTIVE", "PENDING", "BOTH"]
      },
      "LeagueListsEnum": {
        "type": "string",
        "enum": [
          "MILB_FULL",
          "MILB_SHORT",
          "MILB_COMPLEX",
          "MILB_ALL",
          "MILB_ALL_NOMEX",
          "MILB_ALL_DOMESTIC",
          "MILB_NONCOMP",
          "MILB_NONCOMP_NOMEX",
          "MILB_DOMCOMP",
          "MILB_INTCOMP",
          "WIN_NOABL",
          "WIN_CARIBBEAN",
          "WIN_ALL",
          "ABL",
          "MEX_ALL",
          "MLB",
          "MLB_HIST",
          "MLB_MILB",
          "MLB_MILB_HIST",
          "MLB_MILB_WIN",
          "BASEBALL_ALL",
          "MLB_SPRING",
          "MLB_AL_NL",
          "MLB_NEGRO",
          "NEGRO_ALL"
        ]
      },
      "OrganizationType": {
        "type": "string",
        "enum": ["PLAYER", "TEAM", "DIVISION", "LEAGUE", "SPORT", "LEAGUE_LIST"]
      },
      "StreakStatEnum": {
        "type": "string",
        "enum": [
          "AT_BATS",
          "BALLS",
          "BALKS",
          "BLOWN_SAVES",
          "CAUGHT_STEALING",
          "COMPLETE_GAMES",
          "DOUBLES",
          "EARNED_RUN",
          "ERRORS",
          "EXTRA_BASE_HITS",
          "GAMES_PLAYED",
          "GAMES_STARTED",
          "GROUND_INTO_DOUBLE_PLAY",
          "HIT_BY_PITCH",
          "HITS",
          "HOLDS",
          "HOME_RUNS",
          "INTENTIONAL_WALKS",
          "LEFT_ON_BASE",
          "LOSSES",
          "ON_BASE",
          "PASSED_BALLS",
          "PICKOFFS",
          "PITCHES",
          "PLATE_APPEARANCES",
          "QUALITY_STARTS",
          "RUNS",
          "RUNS_BATTED_IN",
          "SAVES",
          "SHUTOUTS",
          "STOLEN_BASES",
          "STRIKES",
          "STRIKEOUTS",
          "TOTAL_BASES",
          "TRIPLES",
          "WALKS",
          "WALKOFFS",
          "WINS"
        ]
      },
      "StreakSpanEnum": {
        "type": "string",
        "enum": [
          "CAREER",
          "SEASON",
          "ON_GOING",
          "CURRENT_STREAK",
          "CURRENT_STREAK_IN_SEASON",
          "NOTABLE",
          "NOTABLE_IN_SEASON"
        ]
      },
      "StreakLevelEnum": {
        "type": "string",
        "enum": ["SEASON", "GAME", "AT_BAT", "PITCH"]
      },
      "StreaksContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "disclaimers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "type": {
            "$ref": "#/components/schemas/StatType"
          },
          "group": {
            "$ref": "#/components/schemas/StatGroup"
          },
          "totalSplits": {
            "type": "integer",
            "format": "int32"
          },
          "exemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatExemptionRestObject"
            }
          },
          "splits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "stats": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "splitsTiedWithOffset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "splitsTiedWithLimit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "season": {
            "type": "string"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "playerPool": {
            "$ref": "#/components/schemas/PlayerPoolEnum"
          },
          "streakStat": {
            "$ref": "#/components/schemas/StreakStatEnum"
          }
        }
      },
      "StreaksWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StreaksContainerRestObject"
            }
          }
        }
      },
      "MetricType": {
        "type": "string",
        "enum": [
          "NONE",
          "SPIN_RATE",
          "EXTENSION",
          "PITCH_SPEED",
          "PERCEIVED_PITCH_SPEED",
          "PRIMARY_LEAD",
          "LAUNCH_SPEED",
          "LAUNCH_ANGLE",
          "SECONDARY_LEAD",
          "TOP_SPEED",
          "ACCELERATION",
          "TOP_ACCELERATION",
          "HOME_TO_FIRST",
          "HOME_TO_SECOND",
          "HOME_TO_THIRD",
          "HOME_TO_HOME",
          "FIRST_TO_SECOND",
          "STEAL_FIRST_TO_SECOND",
          "TAG_FIRST_TO_SECOND",
          "FIRST_TO_SECOND_ALL",
          "FIRST_TO_THIRD",
          "FIRST_TO_HOME",
          "SECOND_TO_THIRD",
          "STEAL_SECOND_TO_THIRD",
          "TAG_SECOND_TO_THIRD",
          "SECOND_TO_THIRD_ALL",
          "SECOND_TO_HOME",
          "THIRD_TO_HOME",
          "STEAL_THIRD_TO_HOME",
          "TAG_THIRD_TO_HOME",
          "THIRD_TO_HOME_ALL",
          "FIRST_STEP",
          "FIRST_STEP_STEALING",
          "FIRST_STEP_TAG",
          "FIRST_STEP_ALL",
          "FIRST_STEP_EFFICIENCY",
          "POP_TIME",
          "POP_TIME_1B",
          "POP_TIME_2B",
          "POP_TIME_3B",
          "POSITIONING",
          "ROUTE_EFFICIENCY",
          "EXCHANGE",
          "EXCHANGE_1B",
          "EXCHANGE_2B",
          "EXCHANGE_3B",
          "CATCHER_EXCHANGE",
          "ARM_STRENGTH",
          "ARM_STRENGTH_1B",
          "ARM_STRENGTH_2B",
          "ARM_STRENGTH_3B",
          "ARM_STRENGTH_HP",
          "THROWING_ACCURACY",
          "THROW_ANGLE",
          "THROW_DISTANCE",
          "DISTANCE_COVERED",
          "PITCHER_RELEASE",
          "RELEASE_BACKSPIN_RATE",
          "RELEASE_SIDESPIN_RATE",
          "GENERATED_SPEED",
          "ESTIMATED_SWING_SPEED",
          "PITCHER_POSITION",
          "DISTANCE_FROM_BALL_LANDING",
          "PROJECTED_DISTANCE_FROM_BALL_LANDING",
          "ANGLE_TO_BALL_LANDING",
          "ANGLE_TO_BALL_CAUGHT",
          "MAX_HEIGHT",
          "HIT_TRAVEL_TIME",
          "HANG_TIME",
          "OPPORTUNITY_TIME_GROUND",
          "HIT_DISTANCE",
          "HIT_TRAVEL_DISTANCE",
          "HOME_RUN_DISTANCE",
          "HIT_TRAJECTORY",
          "START_PLAYER_POSITION",
          "END_PLAYER_POSITION",
          "START_PLAYER_ANGLE",
          "END_PLAYER_ANGLE",
          "LAUNCH_SPIN_RATE",
          "GYROSPIN_RATE",
          "FIELDING_ZONE",
          "BARRELED_BALL",
          "SPIN_AXIS_OCTANTS",
          "SHIFT_CLASSIFICATION",
          "OUTFIELDER_DISTANCE_TO_FENCE",
          "BALL_PROJ_DISTANCE_FROM_FENCE",
          "DISTANCE_FROM_BASE_ON_THROW",
          "INFIELD_OUT_OF_POSITION_CODE",
          "OUTFIELD_OUT_OF_POSITION_CODE",
          "SPRINT_SPEED",
          "STARTUP_TIME",
          "ROUTE_TO_SPRINT_SPEED",
          "VERTICAL_BREAK",
          "VERTICAL_BREAK_INDUCED",
          "HORIZONTAL_BREAK",
          "TIME_OUT_OF_BOX",
          "WALL_BALL_CLASSIFICATION",
          "FIELDER_BURST_DISTANCE",
          "FIELDER_REACTION_DISTANCE",
          "FIELDER_ROUTING_DISTANCE",
          "INTERCEPT",
          "GAMEDAY_ZONE",
          "DELIVERY_TIME",
          "LIMB_APEX_SKELETAL",
          "DISTANCE_TO_CATCHERS_MITT_SKELETAL",
          "PLATE_LOCATION_X",
          "PLATE_LOCATION_Z",
          "HIT_BEARING_ANGLE",
          "ACTIVE_SPIN_ANGLE",
          "BACKSPIN",
          "SIDESPIN",
          "GYROSPIN",
          "CATCH_PROBABILITY",
          "HIT_PROBABILITY",
          "INTENDED_PLATE_X",
          "BALLPARK_HOME_RUN_COUNT",
          "JUMP_DISTANCE",
          "EXPECTED_SLUGGING",
          "EXPECTED_WOBA",
          "OUTS_ABOVE_AVERAGE",
          "FIELDING_RUNS_PREVENTED",
          "STOLEN_BASE_PROBABILITY",
          "WIN_PROBABILITY_ADDED",
          "SAC_FLY_PROBABILITY",
          "ATTACK_ANGLE",
          "BAT_SPEED",
          "HOME_RUN_X_BALLPARKS",
          "PLAYER_TRACKING",
          "BALL_TRACKING",
          "LAUNCH_VECTOR",
          "SPIN_ANGLE",
          "HIT_SPIN_ANGLE",
          "ESTIMATED_FIRST_STEP_TEMPORARY",
          "ESTIMATED_EXIT_VELOCITY_TEMPORARY",
          "HIT_DISTANCE_AT_8_FEET",
          "HANG_TIME_AT_8_FEET",
          "DISTANCE_COVERED_BREAKDOWN",
          "HIT_TRAJECTORY_NOT_TYPE",
          "BASERUNNER_MARKERS",
          "SPEED_IN_THE_LAST_SECONDS",
          "TOTAL_DISTANCE_COVERED",
          "BATTED_BALL_TRAVEL_TIME_Z0",
          "BATTED_BALL_TRAVEL_TIME_Z8",
          "BATTED_BALL_TRAVEL_TIME_ZI",
          "BATTED_BALL_TRAVEL_TIME_ZF",
          "OPPORTUNITY_TIME_Z8",
          "OPPORTUNITY_TIME_ZI",
          "PLATE_TIME_Y0",
          "PLATE_TIME_Y17",
          "PLATE_TIME_YI",
          "PROJECTED_LANDING_POSITION",
          "DISTANCE_TO_CATCHERS_MITT",
          "BATTED_BALL_TRAVEL_DISTANCE_Z0",
          "BATTED_BALL_TRAVEL_DISTANCE_Z8",
          "BATTED_BALL_TRAVEL_DISTANCE_ZI",
          "BATTED_BALL_TRAVEL_DISTANCE_ZF",
          "SACRIFICE_FLY",
          "EXCHANGE_DISTANCE",
          "PLATE_SPEED",
          "PITCH_LAUNCH_DIRECTION",
          "PITCH_LAUNCH_ANGLE",
          "HIT_LAUNCH_DIRECTION",
          "BALL_HEIGHT_AT_THE_FENCE",
          "PROJECTED_DISTANCE_OF_BALL_FROM_FENCE",
          "FIELDER_ENGAGEMENT",
          "KEY_STEP",
          "BURST",
          "REVOLUTIONS_HAND_TO_PLATE",
          "INFERRED_BACKSPIN_RATE",
          "INFERRED_SIDESPIN_RATE",
          "INFERRED_GYROSPIN_RATE",
          "RELATIVE_STRIKE_ZONE_LOCATION",
          "RELATIVE_STRIKE_ZONE_LOCATION_X",
          "RELATIVE_STRIKE_ZONE_LOCATION_Z",
          "ATTACK_ZONES",
          "THROW_DISTANCE_WITH_BOUNCES",
          "HIT_TRACKING_PCT",
          "FIELDER_JUMP_DISTANCE",
          "BALL_LOCATION_AT_300_FEET",
          "SPIN_RATE_PER_MPH",
          "SCOOP_RADIUS",
          "BLOCK_RADIUS",
          "CATCHER_GLOVE_POSITION",
          "BATTER_BIOMECHANICS",
          "PITCHER_BIOMECHANICS",
          "DISTANCE_FROM_SWEET_SPOT",
          "POSE_TRACKING_COMPLETENESS",
          "PLAYER_TRACKING_COMPLETENESS",
          "SWORD_SWING",
          "SWING_LENGTH",
          "PITCHING_POSITION_TESTING",
          "OUTS_ABOVE_AVERAGE_TESTING",
          "FIELDING_RUNS_PREVENTED_TESTING",
          "RUN_VALUE_ADDED",
          "STRIKE_PROBABILITY",
          "STRIKE_VALUE_ADDED"
        ]
      },
      "PitchType": {
        "type": "string",
        "enum": [
          "CHANGE_UP",
          "CURVE_BALL",
          "FASTBALL",
          "FAST_BALL_2_SEAM",
          "FAST_BALL_4_SEAM",
          "CUTTER",
          "SPLITTER",
          "FORK_BALL",
          "GYRO_BALL",
          "INTENTIONAL_BALL",
          "KNUCKLE_CURVE",
          "KNUCKLE_BALL",
          "NO_PITCH",
          "SCREW_BALL",
          "SINKER",
          "SLIDER",
          "SN",
          "PITCHOUT",
          "AUTOMATIC_BALL",
          "AUTOMATIC_STRIKE",
          "EEPHUS",
          "SLUTTER",
          "SLURVE",
          "SLOW_CURVE",
          "UNNKNOWN"
        ]
      },
      "PitchCode": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "BALL",
          "BLOCKED_BALL",
          "INTENT_BALL",
          "PITCHOUT",
          "HIT_BY_PITCH",
          "AUTOMATIC_BALL",
          "CALLED_STRIKE",
          "SWINGING_STRIKE",
          "SWINGING_STRIKE_BLOCKED",
          "FOUL",
          "FOUL_TIP",
          "UNKNOWN_STRIKE",
          "MISSED_BUNT",
          "FOUL_BUNT",
          "BUNT_FOUL_TIP",
          "SWINGING_PITCHOUT",
          "FOUL_PITCHOUT",
          "AUTOMATIC_STRIKE",
          "HIT_INTO_PLAY",
          "HIT_INTO_PLAY_NO_OUT",
          "HIT_INTO_PLAY_SCORE",
          "PITCHOUT_HIT_INTO_PLAY",
          "PITCHOUT_HIT_INTO_PLAY_NO_OUT",
          "PITCHOUT_HIT_INTO_PLAY_SCORE",
          "AUTOMATIC_BALL_INTENTIONAL",
          "AUTOMATIC_BALL_PITCHER_PITCH_TIMER_VIOLATION",
          "AUTOMATIC_BALL_CATCHER_PITCH_TIMER_VIOLATION",
          "AUTOMATIC_BALL_DEF_SHIFT_VIOLATION",
          "AUTOMATIC_STRIKE_PITCH_TIMER_VIOLATION",
          "AUTOMATIC_STRIKE_BATTER_TIMEOUT_VIOLATION"
        ]
      },
      "AggregateSortTypeEnum": {
        "type": "string",
        "enum": ["avg", "max", "min", "num", "p50", "p75", "p90", "comp", "num_comp"]
      },
      "StatField": {
        "type": "string",
        "enum": ["STANDARD", "ADVANCED", "TRACKING", "EXPECTED", "SABERMETRICS", "RANKING", "PERCENTILE"]
      },
      "PlayerActiveStatusEnum": {
        "type": "string",
        "enum": ["ACTIVE", "INACTIVE", "PENDING", "BOTH"]
      },
      "FilterLevelEnum": {
        "type": "string",
        "enum": ["PITCH", "AT_BAT", "INNING", "PITCH_TYPE", "GAME", "SEASON", "CAREER", "NONE"]
      },
      "FilterLevels": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "pitch": {
            "type": "boolean"
          },
          "atBat": {
            "type": "boolean"
          },
          "inning": {
            "type": "boolean"
          },
          "game": {
            "type": "boolean"
          },
          "season": {
            "type": "boolean"
          },
          "career": {
            "type": "boolean"
          }
        }
      },
      "StatFields": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "standard": {
            "type": "boolean"
          },
          "advanced": {
            "type": "boolean"
          },
          "tracking": {
            "type": "boolean"
          },
          "expected": {
            "type": "boolean"
          }
        }
      },
      "StatSearchStatRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "sortStat": {
            "type": "string"
          },
          "statFields": {
            "$ref": "#/components/schemas/StatFields"
          },
          "statGroup": {
            "type": "string"
          },
          "filterLevels": {
            "$ref": "#/components/schemas/FilterLevels"
          },
          "isCounting": {
            "type": "boolean"
          },
          "isInstanceStat": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "string"
          },
          "units": {
            "type": "string"
          },
          "aggregation": {
            "type": "string"
          },
          "decimals": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StatSearchParamRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "filterLevel": {
            "type": "string"
          },
          "hitting": {
            "type": "boolean"
          },
          "pitching": {
            "type": "boolean"
          },
          "fielding": {
            "type": "boolean"
          },
          "catching": {
            "type": "boolean"
          },
          "running": {
            "type": "boolean"
          }
        }
      },
      "AggregateSortTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "FilterLevelEnumRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PersonStatGroupRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "person": {
            "type": "string"
          },
          "primaryStatGroups": {
            "$ref": "#/components/schemas/StatSearchStatGroupRestObject"
          },
          "supportedStatGroups": {
            "$ref": "#/components/schemas/StatSearchStatGroupRestObject"
          }
        }
      },
      "StatSearchConfigRestObject": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSearchParamRestObject"
            }
          },
          "groupByTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSearchGroupByRestObject"
            }
          },
          "compareOverTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSearchGroupByRestObject"
            }
          },
          "situationCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSearchSitCodeRestObject"
            }
          },
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSearchStatRestObject"
            }
          },
          "aggregations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregateSortTypeRestObject"
            }
          },
          "filterLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterLevelEnumRestObject"
            }
          },
          "personFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSearchPersonFilterRestObject"
            }
          }
        }
      },
      "StatSearchGroupByRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "filterLevel": {
            "type": "string"
          },
          "hitting": {
            "type": "boolean"
          },
          "pitching": {
            "type": "boolean"
          },
          "fielding": {
            "type": "boolean"
          },
          "catching": {
            "type": "boolean"
          },
          "running": {
            "type": "boolean"
          }
        }
      },
      "StatSearchPersonFilterRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "personStatGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonStatGroupRestObject"
            }
          },
          "primaryFilterLevel": {
            "type": "string"
          },
          "secondaryFilterLevel": {
            "type": "string"
          }
        }
      },
      "StatSearchSitCodeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "sitCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "navigationMenu": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "hitting": {
            "type": "boolean"
          },
          "pitching": {
            "type": "boolean"
          },
          "fielding": {
            "type": "boolean"
          },
          "catching": {
            "type": "boolean"
          },
          "running": {
            "type": "boolean"
          }
        }
      },
      "StatSearchStatGroupRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hitting": {
            "type": "boolean"
          },
          "pitching": {
            "type": "boolean"
          },
          "fielding": {
            "type": "boolean"
          },
          "catching": {
            "type": "boolean"
          },
          "running": {
            "type": "boolean"
          }
        }
      },
      "StatcastPositionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "StandingsType": {
        "type": "string",
        "enum": [
          "REGULAR_SEASON",
          "WILD_CARD",
          "DIVISION_LEADERS",
          "WILD_CARD_WITH_LEADERS",
          "FIRST_HALF",
          "SECOND_HALF",
          "SPRING_TRAINING",
          "POSTSEASON",
          "BY_DIVISION",
          "BY_CONFERENCE",
          "BY_LEAGUE",
          "BY_ORGANIZATION",
          "CURRENT_HALF"
        ]
      },
      "StandingsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamStandingsRecordContainerRestObject"
            }
          }
        }
      },
      "TeamStandingsRecordContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "standingsType": {
            "type": "string"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "division": {
            "$ref": "#/components/schemas/DivisionRestObject"
          },
          "conference": {
            "$ref": "#/components/schemas/ConferenceRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "organization": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "aggregateRecord": {
            "$ref": "#/components/schemas/TeamStandingsRecordRestObject"
          },
          "teamRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamStandingsRecordRestObject"
            }
          }
        }
      },
      "SportActiveStatusEnum": {
        "type": "string",
        "enum": ["ACTIVE", "INACTIVE", "PENDING", "BOTH"]
      },
      "SportsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "sports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SportRestObject"
            }
          }
        }
      },
      "SituationCodeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "navigationMenu": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "team": {
            "type": "boolean"
          },
          "batting": {
            "type": "boolean"
          },
          "fielding": {
            "type": "boolean"
          },
          "pitching": {
            "type": "boolean"
          }
        }
      },
      "SeasonsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "seasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeasonRestObject"
            }
          }
        }
      },
      "ScheduleTypeEnum": {
        "type": "string",
        "enum": ["GAMESCHEDULE", "XREF", "EVENTSCHEDULE"]
      },
      "PostseasonScheduleRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalEvents": {
            "type": "integer",
            "format": "int32"
          },
          "totalGames": {
            "type": "integer",
            "format": "int32"
          },
          "totalGamesInProgress": {
            "type": "integer",
            "format": "int32"
          },
          "wait": {
            "type": "integer",
            "format": "int32"
          },
          "series": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleSeriesRestObject"
            }
          }
        }
      },
      "PostseasonSeriesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "sortNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "gameType": {
            "type": "string"
          }
        }
      },
      "ScheduleSeriesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "series": {
            "$ref": "#/components/schemas/PostseasonSeriesRestObject"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalGames": {
            "type": "integer",
            "format": "int32"
          },
          "totalGamesInProgress": {
            "type": "integer",
            "format": "int32"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballScheduleItemRestObject"
            }
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RoofTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Platform": {
        "type": "string",
        "enum": [
          "WEB",
          "ANDROID_PHONE",
          "ANDROID_TABLET",
          "IOS_PHONE",
          "IOS_TABLET",
          "XBOX_ONE",
          "XBOX_360",
          "ROKU",
          "PLAYSTATION",
          "CHROMECAST",
          "APPLETV",
          "TV_OS"
        ]
      },
      "PitchCodeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "swingStatus": {
            "type": "boolean"
          },
          "swingMissStatus": {
            "type": "boolean"
          },
          "swingContactStatus": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "strikeStatus": {
            "type": "boolean"
          },
          "ballStatus": {
            "type": "boolean"
          },
          "pitchStatus": {
            "type": "boolean"
          },
          "pitchResultText": {
            "type": "string"
          }
        }
      },
      "PerformerType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "AwardsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "awards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AwardRestObject"
            }
          }
        }
      },
      "FreeAgentListRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "season": {
            "type": "string"
          },
          "freeAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeAgentRestObject"
            }
          }
        }
      },
      "FreeAgentRestObject": {
        "type": "object",
        "properties": {
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "originalTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "newTeam": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "notes": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "dateSigned": {
            "type": "string",
            "format": "date"
          },
          "dateDeclared": {
            "type": "string",
            "format": "date"
          },
          "position": {
            "$ref": "#/components/schemas/PositionRestObject"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MilestoneAchievementType": {
        "type": "object",
        "properties": {
          "achievementTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "achievementTypeCode": {
            "type": "string"
          },
          "achievementTypeDesc": {
            "type": "string"
          },
          "achievementTypeText": {
            "type": "string"
          }
        }
      },
      "MilestoneType": {
        "type": "object",
        "properties": {
          "milestoneTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "milestoneTypeCode": {
            "type": "string"
          },
          "milestoneTypeText": {
            "type": "string"
          }
        }
      },
      "Statistic": {
        "type": "object",
        "properties": {
          "statisticId": {
            "type": "integer",
            "format": "int32"
          },
          "statisticText": {
            "type": "string"
          },
          "statisticDesc": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "isStatcastStatus": {
            "type": "boolean"
          },
          "isStandardStatus": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BaseballStatsTypeRestObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "lookupParam": {
            "type": "string"
          },
          "isCounting": {
            "type": "boolean"
          },
          "label": {
            "type": "string"
          },
          "statGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatGroup"
            }
          },
          "orgTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationType"
            }
          },
          "highLowTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighLowTypeEnum"
            }
          },
          "streakLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StreakLevelEnum"
            }
          }
        }
      },
      "HighLowTypeEnum": {
        "type": "string",
        "enum": ["PLAYER", "TEAM", "GAME"]
      },
      "MilestoneAchievementStatusRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "achievementStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "achievementStatusCode": {
            "type": "string"
          },
          "achievementStatusDesc": {
            "type": "string"
          },
          "achievementStatusText": {
            "type": "string"
          }
        }
      },
      "MilestoneContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "milestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MilestoneRestObject"
            }
          }
        }
      },
      "MilestoneDurationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "milestoneDurationId": {
            "type": "integer",
            "format": "int32"
          },
          "milestoneDurationCode": {
            "type": "string"
          },
          "milestoneDurationText": {
            "type": "string"
          }
        }
      },
      "MilestoneRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "milestoneAchievementId": {
            "type": "integer",
            "format": "int32"
          },
          "milestoneProjectionId": {
            "type": "integer",
            "format": "int32"
          },
          "projectionValue": {
            "type": "integer",
            "format": "int32"
          },
          "projectionRank": {
            "type": "integer",
            "format": "int32"
          },
          "currentValue": {
            "type": "integer",
            "format": "int32"
          },
          "achievementValue": {
            "type": "integer",
            "format": "int32"
          },
          "achievementRank": {
            "type": "integer",
            "format": "int32"
          },
          "achievementDate": {
            "type": "string",
            "format": "date"
          },
          "isLastAchievementStatus": {
            "type": "boolean"
          },
          "gameId": {
            "type": "integer",
            "format": "int32"
          },
          "playId": {
            "type": "string"
          },
          "atBatNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pitchNumber": {
            "type": "integer",
            "format": "int32"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "achievementStatus": {
            "$ref": "#/components/schemas/MilestoneAchievementStatusRestObject"
          },
          "milestoneRule": {
            "$ref": "#/components/schemas/MilestoneRuleRestObject"
          },
          "ruleCount": {
            "type": "integer",
            "format": "int32"
          },
          "statDifference": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MilestoneRuleRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "milestoneRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "milestoneValue": {
            "type": "integer",
            "format": "int32"
          },
          "milestoneRank": {
            "type": "integer",
            "format": "int32"
          },
          "gameTypeCode": {
            "type": "string"
          },
          "orgType": {
            "$ref": "#/components/schemas/OrganizationTypeRestObject"
          },
          "milestoneType": {
            "$ref": "#/components/schemas/MilestoneTypeRestObject"
          },
          "milestoneDuration": {
            "$ref": "#/components/schemas/MilestoneDurationRestObject"
          },
          "milestoneStatistic": {
            "$ref": "#/components/schemas/MilestoneStatisticRestObject"
          }
        }
      },
      "MilestoneStatisticRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "statisticId": {
            "type": "integer",
            "format": "int32"
          },
          "statisticText": {
            "type": "string"
          },
          "statisticDesc": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "isStatcastStatus": {
            "type": "boolean"
          },
          "isStandardStatus": {
            "type": "boolean"
          },
          "statAbbr": {
            "type": "string"
          },
          "statEnum": {
            "$ref": "#/components/schemas/BaseballStatsTypeRestObject"
          }
        }
      },
      "MilestoneTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "milestoneTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "milestoneTypeCode": {
            "type": "string"
          },
          "milestoneTypeText": {
            "type": "string"
          }
        }
      },
      "OrganizationTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "orgTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "orgTypeCode": {
            "type": "string"
          },
          "orgTypeText": {
            "type": "string"
          }
        }
      },
      "MilestoneDuration": {
        "type": "object",
        "properties": {
          "milestoneDurationId": {
            "type": "integer",
            "format": "int32"
          },
          "milestoneDurationCode": {
            "type": "string"
          },
          "milestoneDurationText": {
            "type": "string"
          }
        }
      },
      "RestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          }
        }
      },
      "LeagueLeaderTypeRestObject": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          }
        }
      },
      "LeagueActiveStatusEnum": {
        "type": "string",
        "enum": ["ACTIVE", "INACTIVE", "PENDING", "BOTH"]
      },
      "JobTypeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "job": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HitSegmentRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "launchData": {
            "$ref": "#/components/schemas/LaunchDataRestObject"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/HitTrajectoryDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/StartEndDataRestObject"
          },
          "lastMeasuredData": {
            "$ref": "#/components/schemas/StartEndDataRestObject"
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "HomeRunDerbyBatterHitRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "bonusTime": {
            "type": "boolean"
          },
          "tieBreaker": {
            "type": "boolean"
          },
          "homeRun": {
            "type": "boolean"
          },
          "hitData": {
            "$ref": "#/components/schemas/HitSegmentRestObject"
          },
          "isHomeRun": {
            "type": "boolean"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "playId": {
            "type": "string"
          },
          "timeRemaining": {
            "type": "string"
          },
          "timeRemainingSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "isBonusTime": {
            "type": "boolean"
          },
          "bonusOutsCurrent": {
            "type": "integer",
            "format": "int32"
          },
          "bonusOutsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "isTieBreaker": {
            "type": "boolean"
          },
          "tieBreakerNum": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HomeRunDerbyMatchupRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "topSeed": {
            "$ref": "#/components/schemas/HomeRunDerbyRoundBatterRestObject"
          },
          "bottomSeed": {
            "$ref": "#/components/schemas/HomeRunDerbyRoundBatterRestObject"
          }
        }
      },
      "HomeRunDerbyRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "info": {
            "$ref": "#/components/schemas/ScheduleEventRestObject"
          },
          "status": {
            "$ref": "#/components/schemas/HomeRunDerbyStatusRestObject"
          },
          "rounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeRunDerbyRoundRestObject"
            }
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPersonRestObject"
            }
          }
        }
      },
      "HomeRunDerbyRoundBatterRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "started": {
            "type": "boolean"
          },
          "complete": {
            "type": "boolean"
          },
          "winner": {
            "type": "boolean"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "topDerbyHitData": {
            "$ref": "#/components/schemas/BaseballHitDataRestObject"
          },
          "hits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeRunDerbyBatterHitRestObject"
            }
          },
          "seed": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "isWinner": {
            "type": "boolean"
          },
          "isComplete": {
            "type": "boolean"
          },
          "isStarted": {
            "type": "boolean"
          },
          "numHomeRuns": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HomeRunDerbyRoundRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "round": {
            "type": "integer",
            "format": "int32"
          },
          "numBatters": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "roundTime": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPitches": {
            "type": "integer",
            "format": "int32"
          },
          "matchups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeRunDerbyMatchupRestObject"
            }
          },
          "batters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeRunDerbyRoundBatterRestObject"
            }
          }
        }
      },
      "HomeRunDerbyStatusRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "regulationRoundLenth": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "currentRound": {
            "type": "integer",
            "format": "int32"
          },
          "currentRoundInProgress": {
            "type": "boolean"
          },
          "currentRoundTimeLeft": {
            "type": "string"
          },
          "scheduledRounds": {
            "type": "integer",
            "format": "int32"
          },
          "inTieBreaker": {
            "type": "boolean"
          },
          "tieBreakerNum": {
            "type": "integer",
            "format": "int32"
          },
          "currentBatter": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "clockStopped": {
            "type": "boolean"
          },
          "bonusTime": {
            "type": "boolean"
          },
          "regulationRoundLength": {
            "type": "string"
          },
          "bonusDistanceNeededPerRound": {
            "type": "integer",
            "format": "int32"
          },
          "bonusCountNeededPerRound": {
            "type": "integer",
            "format": "int32"
          },
          "pitchesInRound": {
            "type": "integer",
            "format": "int32"
          },
          "pitchesRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "bonusOutsCurrent": {
            "type": "integer",
            "format": "int32"
          },
          "bonusOutsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "bonusTypeOuts": {
            "type": "boolean"
          }
        }
      },
      "HighLowStatEnum": {
        "type": "string",
        "enum": [
          "AT_BATS",
          "TOTAL_PLATE_APPEARANCES",
          "RUNS",
          "RUNS_BATTED_IN",
          "HOME_TEAM_RUNS",
          "AWAY_TEAM_RUNS",
          "HITS",
          "HITS_RISP",
          "HOME_TEAM_HITS",
          "AWAY_TEAM_HITS",
          "TOTAL_BASES",
          "DOUBLES",
          "TRIPLES",
          "HOME_RUNS",
          "EXTRA_BASE_HITS",
          "WALKS",
          "STRIKEOUTS",
          "STOLEN_BASES",
          "CAUGHT_STEALING",
          "SACRIFICE_FLIES",
          "SACRIFICE_BUNTS",
          "HIT_BY_PITCHES",
          "LEFT_ON_BASE",
          "GROUND_INTO_DOUBLE_PLAYS",
          "STRIKES",
          "PITCHES",
          "BALKS",
          "INNINGS_PITCHED",
          "ERRORS",
          "HOME_TEAM_ERRORS",
          "AWAY_TEAM_ERRORS",
          "CHANCES",
          "PUT_OUTS",
          "ASSISTS",
          "DOUBLE_PLAYS",
          "ATTENDANCE",
          "GAME_TIME",
          "DELAY_TIME",
          "LONGEST",
          "SHORTEST",
          "INNING",
          "WIN_STREAK",
          "LOSS_STREAK"
        ]
      },
      "HighLowContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "disclaimers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "type": {
            "$ref": "#/components/schemas/StatType"
          },
          "group": {
            "$ref": "#/components/schemas/StatGroup"
          },
          "totalSplits": {
            "type": "integer",
            "format": "int32"
          },
          "exemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatExemptionRestObject"
            }
          },
          "splits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "stats": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "splitsTiedWithOffset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "splitsTiedWithLimit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatSplitsRestObject"
            }
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "season": {
            "type": "string"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "playerPool": {
            "$ref": "#/components/schemas/PlayerPoolEnum"
          },
          "sortStat": {
            "$ref": "#/components/schemas/BaseballStatsTypeRestObject"
          },
          "combinedStats": {
            "type": "boolean"
          }
        }
      },
      "HighLowWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "highLowResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighLowContainerRestObject"
            }
          }
        }
      },
      "GamePacePRPortalRestObject": {
        "type": "object",
        "properties": {
          "total7InnGames": {
            "type": "integer",
            "format": "int32"
          },
          "total9InnGames": {
            "type": "integer",
            "format": "int32"
          },
          "totalExtraInnGames": {
            "type": "integer",
            "format": "int32"
          },
          "timePer7InnGame": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePer9InnGame": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePerExtraInnGame": {
            "$ref": "#/components/schemas/Duration"
          }
        }
      },
      "GamePaceRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hitsPer9Inn": {
            "type": "number",
            "format": "double"
          },
          "runsPer9Inn": {
            "type": "number",
            "format": "double"
          },
          "pitchesPer9Inn": {
            "type": "number",
            "format": "double"
          },
          "plateAppearancesPer9Inn": {
            "type": "number",
            "format": "double"
          },
          "hitsPerGame": {
            "type": "number",
            "format": "double"
          },
          "runsPerGame": {
            "type": "number",
            "format": "double"
          },
          "inningsPlayedPerGame": {
            "type": "number",
            "format": "double"
          },
          "pitchesPerGame": {
            "type": "number",
            "format": "double"
          },
          "pitchersPerGame": {
            "type": "number",
            "format": "double"
          },
          "plateAppearancesPerGame": {
            "type": "number",
            "format": "double"
          },
          "totalGameTime": {
            "$ref": "#/components/schemas/Duration"
          },
          "totalInningsPlayed": {
            "type": "number",
            "format": "double"
          },
          "totalHits": {
            "type": "integer",
            "format": "int32"
          },
          "totalRuns": {
            "type": "integer",
            "format": "int32"
          },
          "totalPlateAppearances": {
            "type": "integer",
            "format": "int32"
          },
          "totalPitchers": {
            "type": "integer",
            "format": "int32"
          },
          "totalPitches": {
            "type": "integer",
            "format": "int32"
          },
          "totalGames": {
            "type": "integer",
            "format": "int32"
          },
          "total7InnGames": {
            "type": "integer",
            "format": "int32"
          },
          "total9InnGames": {
            "type": "integer",
            "format": "int32"
          },
          "totalExtraInnGames": {
            "type": "integer",
            "format": "int32"
          },
          "timePerGame": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePerPitch": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePerHit": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePerRun": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePerPlateAppearance": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePer9Inn": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePer77PlateAppearances": {
            "$ref": "#/components/schemas/Duration"
          },
          "totalExtraInnTime": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePer7InnGame": {
            "$ref": "#/components/schemas/Duration"
          },
          "timePer7InnGameWithoutExtraInn": {
            "$ref": "#/components/schemas/Duration"
          },
          "total7InnGamesScheduled": {
            "type": "integer",
            "format": "int32"
          },
          "total7InnGamesCompletedEarly": {
            "type": "integer",
            "format": "int32"
          },
          "total7InnGamesWithoutExtraInn": {
            "type": "integer",
            "format": "int32"
          },
          "total9InnGamesCompletedEarly": {
            "type": "integer",
            "format": "int32"
          },
          "total9InnGamesWithoutExtraInn": {
            "type": "integer",
            "format": "int32"
          },
          "total9InnGamesScheduled": {
            "type": "integer",
            "format": "int32"
          },
          "hitsPerRun": {
            "type": "number",
            "format": "double"
          },
          "pitchesPerPitcher": {
            "type": "number",
            "format": "double"
          },
          "season": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "league": {
            "$ref": "#/components/schemas/LeagueRestObject"
          },
          "sport": {
            "$ref": "#/components/schemas/SportRestObject"
          },
          "prPortalCalculatedFields": {
            "$ref": "#/components/schemas/GamePacePRPortalRestObject"
          }
        }
      },
      "GamePaceWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GamePaceRestObject"
            }
          },
          "leagues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GamePaceRestObject"
            }
          },
          "sports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GamePaceRestObject"
            }
          }
        }
      },
      "BaseballPlayByPlayRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "allPlays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPlayRestObject"
            }
          },
          "currentPlay": {
            "$ref": "#/components/schemas/BaseballPlayRestObject"
          },
          "scoringPlays": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "playsByInning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InningPlay"
            }
          }
        }
      },
      "Coordinate": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "InningHit": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "inning": {
            "type": "integer",
            "format": "int32"
          },
          "pitcher": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "batter": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "InningHitWrap": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "away": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InningHit"
            }
          },
          "home": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InningHit"
            }
          }
        }
      },
      "InningPlay": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "endIndex": {
            "type": "integer",
            "format": "int32"
          },
          "top": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "bottom": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "hits": {
            "$ref": "#/components/schemas/InningHitWrap"
          }
        }
      },
      "BaseballBoxscoreNoteRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "BaseballBoxscoreNoteWrapRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "fieldList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballBoxscoreNoteRestObject"
            }
          }
        }
      },
      "BaseballBoxscoreRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "teams": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BaseballTeamBoxscore"
            }
          },
          "officials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfficialRestObject"
            }
          },
          "info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballBoxscoreNoteRestObject"
            }
          },
          "pitchingNotes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "topPerformers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballPlayerGameScoreRestObject"
            }
          }
        }
      },
      "BaseballPlayerGameScoreRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballRosterEntryRestObject"
          },
          "type": {
            "type": "string"
          },
          "gameScore": {
            "type": "integer",
            "format": "int32"
          },
          "pitchingGameScore": {
            "type": "integer",
            "format": "int32"
          },
          "hittingGameScore": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BaseballTeamBoxscore": {
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          },
          "teamStats": {
            "$ref": "#/components/schemas/StatsRestObject"
          },
          "players": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BaseballRosterEntryRestObject"
            }
          },
          "batters": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "pitchers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "bench": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "bullpen": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "battingOrder": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballBoxscoreNoteWrapRestObject"
            }
          },
          "note": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballBoxscoreNoteRestObject"
            }
          }
        }
      },
      "SkeletalFileData": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "fileNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FrameRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionRestObject"
            }
          },
          "timeStamp": {
            "type": "string"
          }
        }
      },
      "SettingsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SkeletalDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "frames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrameRestObject"
            }
          },
          "jointMetaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "system": {
            "$ref": "#/components/schemas/SystemRestObject"
          }
        }
      },
      "SkeletalDataWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "skeletalData": {
            "$ref": "#/components/schemas/SkeletalDataRestObject"
          }
        }
      },
      "SkeletonRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/SettingsRestObject"
          }
        }
      },
      "SystemRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "skeleton": {
            "$ref": "#/components/schemas/SkeletonRestObject"
          }
        }
      },
      "AnalyticsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "strikeZoneInfo": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "metaData": {
            "$ref": "#/components/schemas/StatSplitsRestObject"
          },
          "playResult": {
            "$ref": "#/components/schemas/PlayResultRestObject"
          },
          "targetPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionalMapRestObject"
            }
          },
          "ballSegments": {
            "$ref": "#/components/schemas/BallPositionalDataRestObject"
          },
          "trackedEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayEventRestObject"
            }
          },
          "calculatedMetrics": {
            "$ref": "#/components/schemas/CalculatedMetricContainerRestObject"
          },
          "positionMap": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BaseballPersonRestObject"
            }
          },
          "diagram": {
            "type": "string"
          },
          "contextMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculatedMetricRestObject"
            }
          },
          "contextAverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculatedMetricRestObject"
            }
          },
          "video": {
            "$ref": "#/components/schemas/IFeedRestObject"
          },
          "calibrationData": {
            "$ref": "#/components/schemas/CalibrationContainerRestObject"
          },
          "bat": {
            "$ref": "#/components/schemas/BatTrackingRestObject"
          },
          "weather": {
            "$ref": "#/components/schemas/WeatherWrapperRestObject"
          },
          "softwareVersions": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "BallPositionDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "velocity": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "position": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "time": {
            "type": "number",
            "format": "double"
          },
          "confidence": {
            "type": "string"
          },
          "timeCode": {
            "type": "integer",
            "format": "int64"
          },
          "timeCodeOffset": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "BallPositionalDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "genericSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentRestObject"
            }
          },
          "pitchSegment": {
            "$ref": "#/components/schemas/PitchSegmentRestObject"
          },
          "hitSegment": {
            "$ref": "#/components/schemas/HitSegmentRestObject"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BallPositionDataRestObject"
            }
          }
        }
      },
      "BatImpactRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "attackAngle": {
            "type": "number",
            "description": "The angle of the bat's path, at impact, relative to horizontal. A negative value represents swinging downward, a positive value upward.",
            "format": "double"
          },
          "speed": {
            "$ref": "#/components/schemas/BatImpactSpeedRestObject"
          },
          "contactPoint": {
            "$ref": "#/components/schemas/ContactPointPositionRestObject"
          },
          "headPosition": {
            "$ref": "#/components/schemas/HeadPositionRestObject"
          },
          "handlePosition": {
            "$ref": "#/components/schemas/HandlePositionRestObject"
          },
          "velocity": {
            "$ref": "#/components/schemas/BatImpactVelocityRestObject"
          },
          "timeStamp": {
            "type": "string",
            "description": "TimeStamp when bat and ball either intersect in case of contact, or in cases where they don’t collide, timeStamp where ball is closest to any point along the bat."
          }
        }
      },
      "BatImpactSpeedRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "before": {
            "type": "number",
            "description": "Speed of impact point right before contact.",
            "format": "double"
          },
          "after": {
            "type": "number",
            "description": "Speed of impact point right after contact.",
            "format": "double"
          }
        }
      },
      "BatImpactVelocityRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "before": {
            "$ref": "#/components/schemas/BatImpactVelocityRestObjectBefore"
          },
          "after": {
            "$ref": "#/components/schemas/BatImpactVelocityRestObjectAfter"
          }
        }
      },
      "BatPositionRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "positionId": {
            "type": "string",
            "description": "Identifier for which part of the bat the positions/timeStamp represent. For now this will only be the “head” and the “handle”, but is subject to change in the future."
          },
          "positions": {
            "type": "array",
            "description": "Locations of the head of the bat at the given timeStamps.",
            "items": {
              "$ref": "#/components/schemas/PositionRestObject"
            }
          }
        }
      },
      "BatSweetSpotRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "axialOffset": {
            "type": "number",
            "description": "Distance from the sweetSpot to the impact point along the bat. Negative is towards the handle of the bat, positive towards the head.",
            "format": "double"
          },
          "distanceFromHead": {
            "type": "number",
            "description": "Distance along the bat from the sweetSpot towards the head. Will be constant for all swings.",
            "format": "double"
          },
          "speedBeforeImpact": {
            "type": "number",
            "description": "The speed of the sweetSpot right before contact.",
            "format": "double"
          },
          "radialOffset": {
            "type": "number",
            "description": "Distance from the sweetSpot to the impact point perpendicular to the bat. Negative is below the center of the bat, positive is above.",
            "format": "double"
          },
          "velocity": {
            "$ref": "#/components/schemas/BatImpactVelocityRestObject"
          }
        }
      },
      "BatTrackingRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "units": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "gamePk": {
            "type": "integer",
            "description": "Unique game identifier.",
            "format": "int32"
          },
          "playId": {
            "type": "string",
            "description": "Unique play identifier (per game)."
          },
          "impact": {
            "$ref": "#/components/schemas/BatImpactRestObject"
          },
          "sweetSpot": {
            "$ref": "#/components/schemas/BatSweetSpotRestObject"
          },
          "batPositions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatPositionRestObject"
            }
          },
          "system": {
            "$ref": "#/components/schemas/BatTrackingSystemRestObject"
          }
        }
      },
      "CalculatedMetricContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculatedMetricRestObject"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricWarningRestObject"
            }
          },
          "invalidMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculatedMetricRestObject"
            }
          }
        }
      },
      "CalibrationContainerRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "radar": {
            "$ref": "#/components/schemas/CalibrationRestObject"
          },
          "optical": {
            "$ref": "#/components/schemas/CalibrationRestObject"
          }
        }
      },
      "CalibrationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "calibrationId": {
            "type": "string"
          },
          "calibrationTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventSequenceRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "eventGroup": {
            "type": "string"
          }
        }
      },
      "MeasuredDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "velocity": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "position": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "time": {
            "type": "number",
            "format": "double"
          },
          "confidence": {
            "type": "string"
          }
        }
      },
      "MetricWarningRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "actionable": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "playTime": {
            "type": "integer",
            "format": "int64"
          },
          "operationType": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "typeId": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PitchFxDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "x0": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "v0": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "a0": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "pfxVert": {
            "type": "number",
            "format": "double"
          },
          "pfxHorz": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PitchSegmentRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "lastMeasuredData": {
            "$ref": "#/components/schemas/StartEndDataRestObject"
          },
          "releaseData": {
            "$ref": "#/components/schemas/ReleaseDataRestObject"
          },
          "trajectoryData": {
            "$ref": "#/components/schemas/PitchTrajectoryDataRestObject"
          }
        }
      },
      "PitchTrajectoryDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "trajectoryPolynomialX": {
            "type": "array",
            "description": "Polynomial describing x position of the ball's pitch trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing x position of the ball's pitch trajectory.",
              "format": "double"
            }
          },
          "trajectoryPolynomialY": {
            "type": "array",
            "description": "Polynomial describing y position of the ball's pitch trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing y position of the ball's pitch trajectory.",
              "format": "double"
            }
          },
          "trajectoryPolynomialZ": {
            "type": "array",
            "description": "Polynomial describing z position of the ball's pitch trajectory.",
            "items": {
              "type": "number",
              "description": "Polynomial describing z position of the ball's pitch trajectory.",
              "format": "double"
            }
          },
          "validTimeInterval": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "measuredTimeInterval": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "horizontalBreak": {
            "type": "number",
            "format": "double"
          },
          "verticalBreakInduced": {
            "type": "number",
            "format": "double"
          },
          "zoneSpeed": {
            "type": "number",
            "format": "double"
          },
          "zoneTime": {
            "type": "number",
            "format": "double"
          },
          "verticalApproachAngle": {
            "type": "number",
            "format": "double"
          },
          "effectiveVelocity": {
            "type": "number",
            "format": "double"
          },
          "horizontalApproachAngle": {
            "type": "number",
            "format": "double"
          },
          "verticalBreak": {
            "type": "number",
            "format": "double"
          },
          "location": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "pfxData": {
            "$ref": "#/components/schemas/PitchFxDataRestObject"
          }
        }
      },
      "PlayEventRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "isScrubbed": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "playEventType": {
            "type": "integer",
            "format": "int32"
          },
          "playEventId": {
            "type": "string"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "timeCode": {
            "type": "integer",
            "format": "int64"
          },
          "playEvent": {
            "type": "string"
          },
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PlayResultRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "playerSequence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerSequenceRestObject"
            }
          },
          "eventSequence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSequenceRestObject"
            }
          },
          "runnerSequence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RunnerSequenceRestObject"
            }
          }
        }
      },
      "PlayerSequenceRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "playType": {
            "type": "string"
          }
        }
      },
      "PositionalMapRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "typ": {
            "type": "integer",
            "format": "int32"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PositionRestObject"
            }
          }
        }
      },
      "ReleaseDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "extension": {
            "type": "number",
            "format": "double"
          },
          "angle": {
            "type": "number",
            "format": "double"
          },
          "spinAxis": {
            "type": "number",
            "format": "double"
          },
          "spinRate": {
            "type": "number",
            "format": "double"
          },
          "spinFitError": {
            "type": "number",
            "format": "double"
          },
          "releaseSpeed": {
            "type": "number",
            "format": "double"
          },
          "direction": {
            "type": "number",
            "format": "double"
          },
          "releasePosition": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "spinVector": {
            "$ref": "#/components/schemas/CoordinatesRestObject"
          },
          "seamOrientation": {
            "$ref": "#/components/schemas/SeamOrientationRestObject"
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RunnerSequenceRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "positionId": {
            "type": "integer",
            "format": "int32"
          },
          "startBase": {
            "type": "integer",
            "format": "int32"
          },
          "endBase": {
            "type": "integer",
            "format": "int32"
          },
          "isOut": {
            "type": "boolean"
          }
        }
      },
      "SeamOrientationRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "xx": {
            "type": "number",
            "format": "double"
          },
          "xy": {
            "type": "number",
            "format": "double"
          },
          "xz": {
            "type": "number",
            "format": "double"
          },
          "yx": {
            "type": "number",
            "format": "double"
          },
          "yy": {
            "type": "number",
            "format": "double"
          },
          "yz": {
            "type": "number",
            "format": "double"
          },
          "zx": {
            "type": "number",
            "format": "double"
          },
          "zy": {
            "type": "number",
            "format": "double"
          },
          "zz": {
            "type": "number",
            "format": "double"
          },
          "frameRate": {
            "type": "integer",
            "format": "int32"
          },
          "time": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SegmentRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "segmentType": {
            "type": "string"
          },
          "endData": {
            "$ref": "#/components/schemas/StartEndDataRestObject"
          },
          "lastMeasuredData": {
            "$ref": "#/components/schemas/MeasuredDataRestObject"
          },
          "firstMeasuredData": {
            "$ref": "#/components/schemas/MeasuredDataRestObject"
          },
          "landingData": {
            "$ref": "#/components/schemas/MeasuredDataRestObject"
          },
          "reducedConfidence": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "startData": {
            "$ref": "#/components/schemas/StartEndDataRestObject"
          },
          "trajectoryPolynomialX": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "trajectoryPolynomialY": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "trajectoryPolynomialZ": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "WeatherWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "units": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "data": {
            "$ref": "#/components/schemas/RestObject"
          }
        }
      },
      "BaseballGameDataGameRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "pk": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "doubleHeader": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "gamedayType": {
            "type": "string"
          },
          "tiebreaker": {
            "type": "string"
          },
          "gameNumber": {
            "type": "integer",
            "format": "int32"
          },
          "calendarEventID": {
            "type": "string"
          },
          "season": {
            "type": "string"
          },
          "seasonDisplay": {
            "type": "string"
          }
        }
      },
      "BaseballGameDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "game": {
            "$ref": "#/components/schemas/BaseballGameDataGameRestObject"
          },
          "datetime": {
            "$ref": "#/components/schemas/BaseballGameDateTimeRestObject"
          },
          "status": {
            "$ref": "#/components/schemas/GameStatusRestObject"
          },
          "teams": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BaseballTeamRestObject"
            }
          },
          "players": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BaseballPersonRestObject"
            }
          },
          "venue": {
            "$ref": "#/components/schemas/VenueRestObject"
          },
          "officialVenue": {
            "$ref": "#/components/schemas/VenueRestObject"
          },
          "weather": {
            "$ref": "#/components/schemas/WeatherRestObject"
          },
          "gameInfo": {
            "$ref": "#/components/schemas/GameInfoRestObject"
          },
          "review": {
            "$ref": "#/components/schemas/BaseballReviewRestObject"
          },
          "absChallenges": {
            "$ref": "#/components/schemas/BaseballABSChallengeRestObject"
          },
          "flags": {
            "$ref": "#/components/schemas/BaseballGameFlagRestObject"
          },
          "alerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballGameAlertRestObject"
            }
          },
          "probablePitchers": {
            "$ref": "#/components/schemas/BaseballGameProbableRestObject"
          },
          "officialScorer": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "primaryDatacaster": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "secondaryDatacaster": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "ruleSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSettingsRestObject"
            }
          },
          "moundVisits": {
            "$ref": "#/components/schemas/MoundVisitsRestObject"
          }
        }
      },
      "BaseballGameDateTimeRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "originalDate": {
            "type": "string",
            "format": "date"
          },
          "officialDate": {
            "type": "string",
            "format": "date"
          },
          "resumeDate": {
            "type": "string",
            "format": "date"
          },
          "resumeDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "resumedFromDate": {
            "type": "string",
            "format": "date"
          },
          "resumedFromDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "dayNight": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "ampm": {
            "type": "string"
          }
        }
      },
      "BaseballGameLeaderRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "player": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          }
        }
      },
      "BaseballGameLeadersRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hitDistance": {
            "$ref": "#/components/schemas/BaseballGameLeaderRestObject"
          },
          "hitSpeed": {
            "$ref": "#/components/schemas/BaseballGameLeaderRestObject"
          },
          "pitchSpeed": {
            "$ref": "#/components/schemas/BaseballGameLeaderRestObject"
          }
        }
      },
      "BaseballGameLiveDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "plays": {
            "$ref": "#/components/schemas/BaseballPlayByPlayRestObject"
          },
          "linescore": {
            "$ref": "#/components/schemas/BaseballLinescoreRestObject"
          },
          "boxscore": {
            "$ref": "#/components/schemas/BaseballBoxscoreRestObject"
          },
          "decisions": {
            "$ref": "#/components/schemas/BaseballDecisionRestObject"
          },
          "leaders": {
            "$ref": "#/components/schemas/BaseballGameLeadersRestObject"
          }
        }
      },
      "BaseballGameMetaDataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "wait": {
            "type": "integer",
            "format": "int32"
          },
          "timeStamp": {
            "type": "string"
          },
          "gameEvents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "logicalEvents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BaseballGameProbableRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "away": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "home": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          }
        }
      },
      "BaseballGameRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "gamePk": {
            "type": "integer",
            "format": "int32"
          },
          "link": {
            "type": "string"
          },
          "metaData": {
            "$ref": "#/components/schemas/BaseballGameMetaDataRestObject"
          },
          "gameData": {
            "$ref": "#/components/schemas/BaseballGameDataRestObject"
          },
          "liveData": {
            "$ref": "#/components/schemas/BaseballGameLiveDataRestObject"
          }
        }
      },
      "MoundVisitsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "away": {
            "$ref": "#/components/schemas/UsedRemainingRestObject"
          },
          "home": {
            "$ref": "#/components/schemas/UsedRemainingRestObject"
          }
        }
      },
      "UsedRemainingRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "used": {
            "type": "integer",
            "format": "int32"
          },
          "remaining": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AnalyticsPlayMetadataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "hydrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "gamePk": {
            "type": "string"
          },
          "gameDate": {
            "type": "string"
          },
          "timeCode": {
            "type": "string"
          },
          "guid": {
            "type": "string"
          },
          "atBatNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pitchNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pickoffNumber": {
            "type": "integer",
            "format": "int32"
          },
          "gameMode": {
            "$ref": "#/components/schemas/GameModeTO"
          },
          "inning": {
            "type": "integer",
            "format": "int32"
          },
          "isTopInning": {
            "type": "boolean"
          },
          "isPitch": {
            "type": "boolean"
          },
          "isPickoff": {
            "type": "boolean"
          },
          "isHit": {
            "type": "boolean"
          },
          "isManual": {
            "type": "boolean"
          },
          "rawFile": {
            "type": "string"
          },
          "parsedFile": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "pitchTime": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "auditUpdatedAt": {
            "type": "string"
          },
          "metricsUpdatedAt": {
            "type": "string"
          },
          "hasUpdates": {
            "type": "boolean"
          },
          "numberOfMetricErrors": {
            "type": "integer",
            "format": "int32"
          },
          "timeCodeOffset": {
            "type": "string"
          },
          "isScrubbed": {
            "type": "boolean"
          },
          "videoUpdatedAt": {
            "type": "string"
          },
          "strikeZoneInfo": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "pitchSegment": {
            "$ref": "#/components/schemas/PitchSegmentRestObject"
          },
          "hitSegment": {
            "$ref": "#/components/schemas/HitSegmentRestObject"
          },
          "contextMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculatedMetricRestObject"
            }
          },
          "contextAverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculatedMetricRestObject"
            }
          },
          "calculatedMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculatedMetricRestObject"
            }
          },
          "invalidTracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalculatedMetricRestObject"
            }
          },
          "video": {
            "$ref": "#/components/schemas/IFeedRestObject"
          },
          "metaData": {
            "$ref": "#/components/schemas/StatSplitsRestObject"
          },
          "playResult": {
            "$ref": "#/components/schemas/PlayResultRestObject"
          },
          "playByPlay": {
            "$ref": "#/components/schemas/BaseballPlayRestObject"
          }
        }
      },
      "GameModeTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "BaseballGameContextRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "game": {
            "$ref": "#/components/schemas/BaseballScheduleItemRestObject"
          },
          "expectedStatisticsData": {
            "$ref": "#/components/schemas/StatDataRestObject"
          },
          "runnerOnThird": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          },
          "leftFieldSacFlyProbability": {
            "$ref": "#/components/schemas/SacFlyProbability"
          },
          "centerFieldSacFlyProbability": {
            "$ref": "#/components/schemas/SacFlyProbability"
          },
          "rightFieldSacFlyProbability": {
            "$ref": "#/components/schemas/SacFlyProbability"
          },
          "awayWinProbability": {
            "type": "number",
            "format": "double"
          },
          "homeWinProbability": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SacFlyProbability": {
        "type": "object",
        "properties": {
          "innerDistance": {
            "type": "integer",
            "format": "int32"
          },
          "outerDistance": {
            "type": "integer",
            "format": "int32"
          },
          "fielder": {
            "$ref": "#/components/schemas/BaseballPersonRestObject"
          }
        }
      },
      "BaseballDraftLatestRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "pick": {
            "$ref": "#/components/schemas/BaseballDraftProspectRestObject"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "nextUp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballDraftProspectRestObject"
            }
          }
        }
      },
      "ProspectListRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "totalSize": {
            "type": "integer",
            "format": "int32"
          },
          "queriedSize": {
            "type": "integer",
            "format": "int32"
          },
          "returnedSize": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "prospects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballDraftProspectRestObject"
            }
          }
        }
      },
      "BaseballDraftListRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "drafts": {
            "$ref": "#/components/schemas/BaseballDraftRestObject"
          }
        }
      },
      "BaseballDraftRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "draftYear": {
            "type": "integer",
            "format": "int32"
          },
          "rounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballDraftRoundRestObject"
            }
          }
        }
      },
      "BaseballDraftRoundRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "round": {
            "type": "string"
          },
          "picks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseballDraftProspectRestObject"
            }
          }
        }
      },
      "DivisionsRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "divisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DivisionRestObject"
            }
          }
        }
      },
      "ConferencesRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "conferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConferenceRestObject"
            }
          }
        }
      },
      "BroadcasterActiveStatusEnum": {
        "type": "string",
        "enum": ["ACTIVE", "INACTIVE", "BOTH"]
      },
      "BroadcasterRestObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "copyright": {
            "type": "string"
          },
          "isNational": {
            "type": "boolean"
          },
          "callSign": {
            "type": "string"
          },
          "availability": {
            "$ref": "#/components/schemas/BroadcastAvailabilityRestObject"
          },
          "activeStatus": {
            "type": "boolean"
          },
          "mvpdAuthRequired": {
            "type": "boolean"
          },
          "sourceComment": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AttendanceRecordRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "openingsTotal7day": {
            "type": "integer",
            "format": "int32"
          },
          "openingsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "openingsTotalAway": {
            "type": "integer",
            "format": "int32"
          },
          "openingsTotalHome": {
            "type": "integer",
            "format": "int32"
          },
          "openingsTotalLost": {
            "type": "integer",
            "format": "int32"
          },
          "openingsTotalYtd": {
            "type": "integer",
            "format": "int32"
          },
          "gamesTotal": {
            "type": "integer",
            "format": "int32"
          },
          "gamesAwayTotal": {
            "type": "integer",
            "format": "int32"
          },
          "gamesHomeTotal": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "string"
          },
          "attendanceAverageAway": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceAverageHome": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceAverageYtd": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceHigh": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceHighDate": {
            "type": "string"
          },
          "attendanceHighGame": {
            "$ref": "#/components/schemas/BaseballScheduleItemRestObject"
          },
          "attendanceLow": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceLowDate": {
            "type": "string"
          },
          "attendanceLowGame": {
            "$ref": "#/components/schemas/BaseballScheduleItemRestObject"
          },
          "attendanceOpening7dayAvg": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceOpeningAverage": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceTotal7day": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceTotal": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceTotalAway": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceTotalHome": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceTotalYesterday": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceTotalYtd": {
            "type": "integer",
            "format": "int32"
          },
          "gameType": {
            "$ref": "#/components/schemas/GameTypeEnum"
          },
          "team": {
            "$ref": "#/components/schemas/BaseballTeamRestObject"
          }
        }
      },
      "AttendanceRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendanceRecordRestObject"
            }
          },
          "aggregateTotals": {
            "$ref": "#/components/schemas/AttendanceRecordRestObject"
          }
        }
      },
      "AnalyticsPlayMetadataWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "plays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsPlayMetadataRestObject"
            }
          }
        }
      },
      "AnalyticsGameMetadataRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "gamePk": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "auditUpdatedAt": {
            "type": "string"
          },
          "metricsUpdatedAt": {
            "type": "string"
          },
          "videoUpdatedAt": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "AnalyticsGameMetadataWrapperRestObject": {
        "type": "object",
        "properties": {
          "copyright": {
            "type": "string"
          },
          "totalItems": {
            "type": "integer",
            "format": "int64"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsGameMetadataRestObject"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
