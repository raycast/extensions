import { Detail, List } from "@raycast/api";
import { useEffect, useState } from "react";
import { authenticate } from "./oauth";
import { PolarProvider, queryClient } from "./providers";
import { useOrganizations } from "./hooks/organizations";
import { QueryClientProvider } from "@tanstack/react-query";
import { useOrders } from "./hooks/orders";
import { formatCurrencyAndAmount } from "./utils";

export default function Command() {
  const [accessToken, setAccessToken] = useState<string>();

  useEffect(() => {
    authenticate().then(setAccessToken);
  }, []);

  if (!accessToken) {
    return <Detail isLoading={true} markdown="Authenticating with Polar..." />;
  }

  return (
    <QueryClientProvider client={queryClient}>
      <PolarProvider accessToken={accessToken}>
        <OrdersView />
      </PolarProvider>
    </QueryClientProvider>
  );
}

const OrdersView = () => {
  const { data: orders, isLoading } = useOrders({ limit: 100 });

  return (
    <List
      isLoading={isLoading}
      searchBarPlaceholder="Filter orders by name..."
      filtering={true}
      isShowingDetail
    >
      {orders?.result.items.map((order) => (
        <List.Item
          key={order.id}
          title={`${order.product.name} (${formatCurrencyAndAmount(order.amount)})`}
          subtitle={order.user.email}
          detail={<List.Item.Detail markdown={order.product.name} />}
        />
      ))}
    </List>
  );
};
