import fs from 'fs';
import path from 'path';
import type { SearchEngine } from '../src/types';
import { isValidUrl } from '../src/utils';

const BANGS_URL = 'https://raw.githubusercontent.com/kagisearch/bangs/refs/heads/main/data/bangs.json';

async function downloadBangs(): Promise<void> {
  try {
    const response = await fetch(BANGS_URL);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const bangs = (await response.json()) as SearchEngine[];
    const filteredBangs = bangs.filter((bang) => isValidUrl(bang.u));

    const tsContent = `// This file is auto-generated by download-bangs.ts. Do not edit manually.
import type { SearchEngine } from "../types";

// @ts-expect-error: TS2590 - Union type is too complex to represent
export const searchEngines: SearchEngine[] = ${JSON.stringify(filteredBangs, null, 2)};
`;

    fs.writeFileSync(
      path.join(__dirname, '../src/data/search-engines.ts'),
      tsContent
    );

    console.log('Successfully downloaded and generated search engines data');
  } catch (error) {
    console.error('Error downloading bangs:', error);
    process.exit(1);
  }
}

downloadBangs(); 