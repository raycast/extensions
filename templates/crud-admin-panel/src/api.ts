import fetch from "node-fetch";
import { useFetch } from "@raycast/utils";
import { getPreferenceValues } from "@raycast/api";

export type User = {
  _id: string;
  email: string;
  firstName: string;
  lastName: string;
  createdAt: string;
  lastUpdatedAt: string;
};

const usersEndpoint = `${getPreferenceValues().endpoint}/users`;

export async function createUser(email: string, firstName: string, lastName: string) {
  // `_id` is generated by the server
  const newUser: Omit<User, "_id"> = {
    email,
    firstName,
    lastName,
    createdAt: new Date().toUTCString(),
    lastUpdatedAt: new Date().toUTCString(),
  };

  console.log(usersEndpoint);

  const response = await fetch(usersEndpoint, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(newUser),
  });

  if (!response.ok) {
    throw Error(`${response.statusText} (HTTP ${response.status})`);
  }
}

export async function updateUser(user: User, change: { email?: string; firstName?: string; lastName?: string }) {
  const updatedUser = {
    ...change,
    createdAt: user.createdAt,
    lastUpdatedAt: new Date().toUTCString(),
  };

  const response = await fetch(`${usersEndpoint}/${user._id}`, {
    method: "PUT",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(updatedUser),
  });

  if (!response.ok) {
    throw Error(`${response.statusText} (HTTP ${response.status})`);
  }
}

export async function deleteUser(user: User) {
  const response = await fetch(`${usersEndpoint}/${user._id}`, {
    method: "DELETE",
  });

  if (!response.ok) {
    throw Error(`${response.statusText} (HTTP ${response.status})`);
  }
}

export function useUsers() {
  return useFetch<User[]>(usersEndpoint);
}

export function useUser(user: User) {
  return useFetch<User, User>(`${usersEndpoint}/${user._id}`, { initialData: user });
}
