name: Sync API Docs
on:
  push:
    paths:
      - "docs/**"
    branches: ["main"]
  workflow_dispatch:
jobs:
  sync-api-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: raycast/github-actions/setup-node@master

      - name: Get changed files in the docs folder
        id: changed-files
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            docs/**

      - name: Setup git
        uses: raycast/github-actions/setup-git@master

      - name: Update the docs in the main repo
        if: steps.changed-files.outputs.any_changed == 'true' || steps.changed-files.outputs.any_deleted == 'true'
        env:
          API_TOKEN_GITHUB: ${{ secrets.RAYCAST_BOT_API_ACCESS_TOKEN }}
        run: |
          ###########################
          # sync docs
          ###########################

          echo "üõ†Ô∏è Syncing to main repo..."

          cd ${{ github.workspace }}

          git clone --single-branch --branch "master" "https://$API_TOKEN_GITHUB@github.com/raycast/raycast-macos.git" "raycast-macos"

          for file in ${{ steps.changed-files.outputs.deleted_files }}; do
            echo "Removing raycast-macos/Commands/$file"
            rm "raycast-macos/Commands/$file"
          done

          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Updating raycast-macos/Commands/$file"
            rsync -arv "$file" "raycast-macos/Commands/$file"
          done

          cd raycast-macos

          git checkout -b docs-sync-${{ github.sha }}
          git add .
          git commit -m 'API Docs: Update from the extensions repo'
          git push origin docs-sync-${{ github.sha }}

      - name: Open PR on the main repo
        uses: actions/github-script@v5
        if: steps.changed-files.outputs.any_changed == 'true' || steps.changed-files.outputs.any_deleted == 'true'
        with:
          github-token: ${{ secrets.RAYCAST_BOT_API_ACCESS_TOKEN }}
          script: |
            github.rest.pulls.create({
              owner: 'raycast',
              repo: 'raycast-macos',
              head: 'docs-sync-${{ github.sha }}',
              base: 'master',
              title: 'API Docs: Update from the extensions repo'
            })

      - name: Notify Failure to Slack
        if: failure()
        uses: edge/simple-slack-notify@master
        with:
          color: "danger"
          text: ":no_entry_sign: ${env.GITHUB_WORKFLOW} has failed"
          fields: |
            [
              { "title": "Action logs:", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"},
              { "title": "Commit:", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/commit/${ env.GITHUB_SHA }"}
            ]
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_STORE_REVIEW_CHANNEL_WEBHOOK_URL }}
