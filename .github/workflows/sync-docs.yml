name: Sync API Docs
on:
  push:
    paths:
      - "docs/**"
    branches: ["f/test-docs-sync"]
  workflow_dispatch:
jobs:
  sync-api-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: raycast/github-actions/setup-node@master

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v14.3
        with:
          files: |
            docs/**

      - name: Public Release (generate docs for raycast-extensions)
        if: steps.changed-files-specific.outputs.any_changed == 'true' || steps.changed-files-specific.outputs.any_deleted == 'true'
        env:
          API_TOKEN_GITHUB: ${{ secrets.RAYCAST_BOT_API_ACCESS_TOKEN }}
        run: |
          ###########################
          # sync docs
          ###########################

          echo "üõ†Ô∏è Syncing to main repo..."

          cd ${{ github.workspace }}

          git clone --single-branch --branch "master" "https://$API_TOKEN_GITHUB@github.com/raycast/raycast-macos.git" "raycast-macos"

          for file in ${{ steps.changed-files.outputs.deleted_files }}; do
            rm "raycast-macos/Commands/$file"
          done

          for file in ${{ steps.changed-files.outputs.changed_files }}; do
            rsync -arv "$file" "raycast-macos/Commands/$file"
          done

      - name: Create Pull Request on the macos repo
        if: steps.changed-files-specific.outputs.any_changed == 'true' || steps.changed-files-specific.outputs.any_deleted == 'true'
        uses: peter-evans/create-pull-request@v3
        env:
          path: raycast-macos
          commit-message: "API Docs: Update from the extensions repo"
          branch: docs-sync
          branch-suffix: short-commit-hash
          delete-branch: true
          title: "API Docs: Update from the extensions repo"
          committer: "raycastbot <bot@raycast.com>"

      # - name: Notify Failure to Slack
      #   if: failure()
      #   uses: edge/simple-slack-notify@master
      #   with:
      #     color: "danger"
      #     text: ":no_entry_sign: ${env.GITHUB_WORKFLOW} has failed"
      #     fields: |
      #       [
      #         { "title": "Action logs:", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"},
      #         { "title": "Commit:", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/commit/${ env.GITHUB_SHA }"}
      #       ]
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_STORE_REVIEW_CHANNEL_WEBHOOK_URL }}
